00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 6/2/16 12:41:14 AM

00000000                             1  
00000000                             2  *-----------------------------------------------------------
00000000                             3  * Title      : Memory parser
00000000                             4  * Written by : Samuel Williams 
00000000                             5  * Date       : 5/13/2016
00000000                             6  * Description: parse the memory address A5 holds the current 
00000000                             7  *              memory address 
00000000                             8  *-----------------------------------------------------------
00000000                             9  
Line 10 ERROR: Undefined symbol
00000000  2A79 004DBB8E             10                  MOVEA.L   STARTING_ADDR, A5
00000006  2C4D                      11                  MOVEA.L   A5, A6
Line 12 ERROR: Undefined symbol
00000008  247C 004DBB8E             12                  MOVEA.L  #outputCountMax, A2
Line 13 ERROR: Undefined symbol
0000000E  267C 004DBB8E             13                  MOVEA.L  #outputCountCurr, A3
00000014                            14  PARSE_MEMORY      
00000014  3A4E                      15                  MOVE.W   A6, A5
Line 16 ERROR: Undefined symbol
00000016  43F9 004DBB8E             16                  LEA      CR_LF, A1
0000001C  103C 000E                 17                  MOVE.B   #14, D0
00000020  4E4F                      18                  TRAP #15  
00000022                            19          
00000022                            20  PARSE_MEMORY_FIRST    
Line 21 ERROR: Undefined symbol
00000022  BBF9 004DBB8E             21                  CMPA.L   ENDING_ADDR, A5
00000028  6700 145A                 22                  BEQ      STOP
0000002C  301E                      23                  MOVE.W   (A6)+, D0
0000002E                            24                  
Line 25 ERROR: Undefined symbol
0000002E  B7FC 004DBB8E             25                  CMPA.L   #outputCountMax, A3
00000034  6700 1422                 26                  BEQ       PRESS_ENTER_CONTINUE
00000038                            27  CONTINUE_PARSE
00000038  528B                      28                  ADDA.L    #1, A3
0000003A                            29                  
0000003A                            30  *                MOVE.W   D0, D1   *testing
0000003A                            31  *                MOVE.B #3, D0
0000003A                            32  *                TRAP #15
0000003A                            33  *                LEA CR_LF, A1
0000003A                            34  *                MOVE.B #14, D0
0000003A                            35  *                TRAP #15          *end testing
0000003A  4EF9 00000040             36                  JMP      NEXT_INSTRUCTION
00000040                            37                      
00000040                            38  NEXT_INSTRUCTION
00000040                            39                  INCLUDE 'JUMPTABLE DAMIAN-V1.X68'
00000040                            40   
00000040                            41  
00000040  3015                      42                   MOVE.W  (A5),D0
00000042                            43  
00000042                            44  
00000042                            45  
00000042  41F9 0000005A             46                   LEA     jmp_table,A0    *Index into the table
00000048                            47  
00000048  4280                      48                   CLR.L   D0              *Zero it
0000004A                            49  
0000004A  3015                      50                   MOVE.W  (A5),D0     *We'll play with it here
0000004C                            51  
Line 52 ERROR: Undefined symbol
0000004C  123C 008E                 52                   MOVE.B  #shift,D1       *Shift 12 bits to the right  
00000050                            53  
00000050  E268                      54                   LSR.W   D1,D0           *Move the bits
00000052                            55  
00000052                            56  
00000052                            57  
00000052                            58  
00000052                            59   
00000052                            60  
00000052  C0FC 0006                 61                 MULU        #6,D0       *Form offset     
00000056                            62  
00000056  4EB0 0000                 63                 JSR         0(A0,D0)   *Jump indirect with index
0000005A                            64  
0000005A                            65                      
0000005A                            66  
0000005A  4EF9 000000BA             67  jmp_table      JMP         code0000
00000060                            68  
00000060  4EF9 000000BE             69                 JMP         code0001
00000066                            70  
00000066  4EF9 000000C2             71                 JMP         code0010
0000006C                            72  
0000006C  4EF9 000000C6             73                 JMP         code0011
00000072                            74  
00000072  4EF9 000000CA             75                 JMP         code0100
00000078                            76  
00000078  4EF9 000000CE             77                 JMP         code0101
0000007E                            78  
0000007E  4EF9 000000D2             79                 JMP         code0110
00000084                            80  
00000084  4EF9 000000D6             81                 JMP         code0111
0000008A                            82  
0000008A  4EF9 000000DA             83                 JMP         code1000
00000090                            84  
00000090  4EF9 000000DE             85                 JMP         code1001
00000096                            86  
00000096  4EF9 000000E2             87                 JMP         code1010
0000009C                            88  
0000009C  4EF9 000000E6             89                 JMP         code1011
000000A2                            90  
000000A2  4EF9 000000EA             91                 JMP         code1100
000000A8                            92  
000000A8  4EF9 000000EE             93                 JMP         code1101
000000AE                            94  
000000AE  4EF9 000000F2             95                 JMP         code1110
000000B4                            96  
000000B4  4EF9 000000F6             97                 JMP         code1111
000000BA                            98  
000000BA                            99          
000000BA                           100  
000000BA                           101   
000000BA                           102  
000000BA                           103  
000000BA                           104   
000000BA                           105  
000000BA                           106   
000000BA                           107  
000000BA  6000 003E                108  code0000       BRA         ADDI
000000BE                           109  
000000BE  6000 0C7C                110  code0001       BRA         MOVEB
000000C2                           111  
000000C2  6000 0CC2                112  code0010       BRA         MOVEL
000000C6                           113  
000000C6  6000 0C8E                114  code0011       BRA         MOVEW
000000CA                           115  
000000CA  6000 047C                116  code0100       BRA         GROUP_0100_CODE
000000CE                           117  
000000CE  6000 0214                118  code0101       BRA         ADDQ   * Subroutine for ADDQ
000000D2                           119  
000000D2  4E72 2700                120  code0110       STOP        #$2700
000000D6                           121  
000000D6  4E72 2700                122  code0111       STOP        #$2700
000000DA                           123  
000000DA  4E72 2700                124  code1000       STOP        #$2700
000000DE                           125  
000000DE  6000 0122                126  code1001       BRA         SUB    * Subroutine for SUB
000000E2                           127  
000000E2  4E72 2700                128  code1010       STOP        #$2700
000000E6                           129  
000000E6                           130   
000000E6                           131  
000000E6                           132  
000000E6                           133  
000000E6                           134  
000000E6                           135   * another jump table to the 8 possible op-codes at the next level.
000000E6                           136  
000000E6                           137   
000000E6                           138  
000000E6  6000 012C                139  code1011       BRA        CMP  * Subroutuine for CMP
000000EA                           140  
000000EA  4E72 2700                141  code1100       STOP        #$2700
000000EE                           142  
000000EE  6000 0D4E                143  code1101       BRA         ADD_ADDA       *#$2700
000000F2                           144  
000000F2  6000 09F8                145  code1110       BRA         SHIFTS
000000F6                           146  
000000F6  4E72 2700                147  code1111       STOP        #$2700
000000FA                           148                   
000000FA                           149  
000000FA                           150                      
000000FA                           151              
000000FA                           152  
000000FA                           153  
000000FA                           154  
000000FA                           155  
000000FA                           156  
000000FA                           157  
000000FA                           158  
000000FA                           159  
000000FA                           160  
000000FA                           161  
000000FA                           162  
000000FA                           163  
000000FA                           164  
000000FA                           165  
000000FA                           166  
000000FA                           167  -------------------- end include --------------------
000000FA                           168                  INCLUDE 'ADDI.X68'
000000FA                           169    
000000FA                           170  ADDI           * first check the first 4 bits after the op-code
000000FA  4280                     171                 CLR.L       D0
000000FC                           172  
000000FC  4281                     173                 CLR.L       D1
000000FE                           174                 
000000FE  3015                     175                 MOVE.W      (A5),D0
00000100                           176                 
00000100  123C 0008                177                 MOVE.B      #8, D1 * for shifting to the right by 8 bits
00000104                           178                 
00000104  E268                     179                 LSR.W       D1, D0
00000106                           180                 
00000106  B07C 0006                181                 CMP.W       #6, D0 * checking the first 4 bits 
0000010A                           182                 
Line 183 ERROR: Undefined symbol
0000010A  6600 BA82                183                 BNE         ERROR  * go to error 
0000010E                           184                 
0000010E                           185                 * print the op-code 
0000010E  4280                     186                 CLR.L       D0
00000110                           187  
00000110  4281                     188                 CLR.L       D1
00000112                           189                 
Line 190 ERROR: Undefined symbol
00000112  43F9 004DBB8E            190                 LEA         ADDI_MESSAGE, A1    * NOTE - how do you know this is of size B ????? 
00000118                           191                 
00000118  103C 000E                192                 MOVE.B      #14, D0
0000011C                           193                 
0000011C  4E4F                     194                 TRAP #15
0000011E                           195                                
0000011E                           196                 * print the size
0000011E  4280                     197                 CLR.L       D0
00000120                           198  
00000120  4281                     199                 CLR.L       D1
00000122                           200                 
00000122  3015                     201                 MOVE.W      (A5),D0
00000124                           202                
00000124  E148                     203                 LSL.W       #8, D0
00000126                           204  
00000126  123C 000E                205                 MOVE.B      #14, D1 * for shifting to the right by 8 bits
0000012A                           206                 
0000012A  E268                     207                 LSR.W       D1, D0
0000012C                           208                 
0000012C                           209                 * D1 holds the size
0000012C                           210    *             CLR.L       D1
0000012C                           211                 
0000012C                           212    *             MOVE.B      D0, D1
0000012C                           213                   
0000012C  B03C 0000                214                 CMP.B       #%00, D0
00000130                           215                 
00000130  6700 0038                216                 BEQ         ADDI_B_SIZE
00000134                           217                 
00000134  B03C 0001                218                 CMP.B       #%01, D0
00000138                           219                 
00000138  6700 0060                220                 BEQ         ADDI_W_SIZE
0000013C                           221                 
0000013C                           222                 *print size L
Line 223 ERROR: Undefined symbol
0000013C  43F9 004DBB8E            223                 LEA         SIZE_L_PRINT, A1     
00000142                           224                 
00000142  103C 000E                225                 MOVE.B      #14, D0
00000146                           226                 
00000146  4E4F                     227                 TRAP #15
00000148                           228                 
00000148                           229                * print out pound sign and hex sign
Line 230 ERROR: Undefined symbol
00000148  43F9 004DBB8E            230                 LEA     POUND_SIGN, A1
0000014E                           231              
0000014E  103C 000E                232                 MOVE.B  #14, D0
00000152                           233              
00000152  4E4F                     234                 TRAP #15
00000154                           235              
Line 236 ERROR: Undefined symbol
00000154  43F9 004DBB8E            236                 LEA     HEX_SIGN, A1
0000015A                           237              
0000015A  4E4F                     238                 TRAP #15
0000015C                           239                 
0000015C  4285                     240                 CLR.L  D5
0000015E                           241          
0000015E  2A1E                     242                 MOVE.L (A6)+, D5 * we mimght change it later
00000160                           243          
00000160  4EB9 000011C8            244                 JSR  HEX_TO_ASCII
00000166                           245                 
00000166  6000 0062                246                 BRA         ADDI_EA   
0000016A                           247                      
0000016A                           248  ADDI_B_SIZE
Line 249 ERROR: Undefined symbol
0000016A  43F9 004DBB8E            249                 LEA         SIZE_B_PRINT, A1     
00000170                           250                 
00000170  103C 000E                251                 MOVE.B      #14, D0
00000174                           252                 
00000174  4E4F                     253                 TRAP #15
00000176                           254                 
00000176                           255                * print out pound sign and hex sign
Line 256 ERROR: Undefined symbol
00000176  43F9 004DBB8E            256                 LEA     POUND_SIGN, A1
0000017C                           257              
0000017C  103C 000E                258                 MOVE.B  #14, D0
00000180                           259              
00000180  4E4F                     260                 TRAP #15
00000182                           261              
Line 262 ERROR: Undefined symbol
00000182  43F9 004DBB8E            262                 LEA     HEX_SIGN, A1
00000188                           263              
00000188  4E4F                     264                 TRAP #15
0000018A                           265                 
0000018A  4280                     266                 CLR.L D0
0000018C                           267  
0000018C  301E                     268                 MOVE.W (A6)+, D0 * we mimght change it later
0000018E                           269                 
0000018E  1A00                     270                 MOVE.B D0, D5
00000190                           271     
00000190  4EB9 000011C8            272                 JSR  HEX_TO_ASCII
00000196                           273                 
00000196  6000 0032                274                 BRA         ADDI_EA 
0000019A                           275                  
0000019A                           276  
0000019A                           277  ADDI_W_SIZE
Line 278 ERROR: Undefined symbol
0000019A  43F9 004DBB8E            278                 LEA         SIZE_W_PRINT, A1     
000001A0                           279                 
000001A0  103C 000E                280                 MOVE.B      #14, D0
000001A4                           281                 
000001A4  4E4F                     282                 TRAP #15
000001A6                           283                 
000001A6                           284                 * print out pound sign and hex sign
Line 285 ERROR: Undefined symbol
000001A6  43F9 004DBB8E            285                 LEA     POUND_SIGN, A1
000001AC                           286              
000001AC  103C 000E                287                 MOVE.B  #14, D0
000001B0                           288              
000001B0  4E4F                     289                 TRAP #15
000001B2                           290              
Line 291 ERROR: Undefined symbol
000001B2  43F9 004DBB8E            291                 LEA     HEX_SIGN, A1
000001B8                           292              
000001B8  4E4F                     293                 TRAP #15
000001BA                           294  
000001BA  4285                     295                 CLR.L  D5
000001BC                           296          
000001BC  3A1E                     297                 MOVE.W (A6)+, D5
000001BE                           298          
000001BE  4EB9 000011C8            299                 JSR  HEX_TO_ASCII
000001C4                           300          
000001C4  4EF9 000001CA            301                 JMP  ADDI_EA
000001CA                           302  
000001CA                           303  
000001CA                           304  ADDI_EA      
000001CA  4EB9 00000F86            305                  JSR     PRINT_COMMA
000001D0                           306                  
000001D0  4280                     307                  CLR.L   D0
000001D2                           308                  
000001D2  4281                     309                  CLR.L   D1
000001D4                           310                  
000001D4                           311                  * set register
000001D4                           312                   
000001D4  3015                     313                   MOVE.W  (A5),D0     *D0 is the binary value to decode
000001D6                           314                 
000001D6  123C 000D                315                   MOVE.B  #13,D1           *8 bits is the number of times to shift to the left to remove opcode & register #
000001DA                           316  
000001DA  E368                     317                   LSL.W   D1,D0           *Shift the bits 8 times -> D0 now removes the opcode & reg#
000001DC                           318  
000001DC  123C 000D                319                   MOVE.B  #13,D1          *14 bits is the number of times to shift to hold the mode number
000001E0                           320  
000001E0  E268                     321                   LSR.W   D1,D0           *Shift the bits 13 times -> D0 now holds the size number
000001E2                           322  
000001E2  1E00                     323                   MOVE.B  D0, D7          *put D0 to data register into D7 for future printing
000001E4                           324                   
000001E4                           325                   * set mode
000001E4  4280                     326                   CLR.L D0                *clear D0
000001E6                           327                   
000001E6  4281                     328                   CLR.L D1                *clear D1
000001E8                           329                   
000001E8  3015                     330                   MOVE.W  (A5),D0     *D0 is the binary value to decode
000001EA                           331                 
000001EA  123C 000A                332                   MOVE.B  #10,D1           *8 bits is the number of times to shift to the left to remove opcode & register #
000001EE                           333  
000001EE  E368                     334                   LSL.W   D1,D0           *Shift the bits 8 times -> D0 now removes the opcode & reg#
000001F0                           335  
000001F0  123C 000D                336                   MOVE.B  #13,D1          *14 bits is the number of times to shift to hold the mode number
000001F4                           337  
000001F4  E268                     338                   LSR.W   D1,D0           *Shift the bits 13 times -> D0 now holds the size number
000001F6                           339  
000001F6  1C00                     340                   MOVE.B  D0, D6          *put D0 to data register into D7 for future printing
000001F8                           341  
000001F8                           342   
000001F8                           343                 * JSR     Set_Ea
000001F8                           344                   
000001F8  4EB9 00001266            345                  JSR     PRINT_EA *by using jmp table
000001FE                           346                  
000001FE  4EF8 0014                347                  JMP     PARSE_MEMORY
00000202                           348                  
00000202                           349                  
00000202                           350                   
00000202                           351                   
00000202                           352  
00000202                           353  
00000202                           354                 
00000202                           355  
00000202                           356  
00000202                           357  
00000202                           358  
00000202                           359  
00000202                           360  
00000202                           361  
00000202                           362  
00000202                           363  
00000202                           364  
00000202                           365  
00000202                           366  
00000202                           367  
00000202                           368  
00000202                           369  
00000202                           370  
00000202                           371  
00000202                           372  
00000202                           373  
00000202                           374  
00000202                           375  
00000202                           376  
00000202                           377  
00000202                           378  
00000202                           379  -------------------- end include --------------------
00000202                           380                  INCLUDE 'ADDQ_SUB_CMP.X68'
00000202                           381  SUB
00000202                           382  
Line 383 ERROR: Undefined symbol
00000202  43F9 004DBB8E            383      LEA SUB_MESSAGE, A1  *print SUB
00000208                           384                   
00000208  103C 000E                385      MOVE.B #14, D0
0000020C                           386                   
0000020C  4E4F                     387      TRAP #15
0000020E                           388      
0000020E  4EF9 00000226            389      JMP SUB_CMP
00000214                           390  
00000214                           391  CMP
Line 392 ERROR: Undefined symbol
00000214  43F9 004DBB8E            392      LEA CMP_MESSAGE, A1  *print CMP
0000021A                           393                   
0000021A  103C 000E                394      MOVE.B #14, D0
0000021E                           395                   
0000021E  4E4F                     396      TRAP #15
00000220                           397      
00000220  4EF9 00000226            398      JMP SUB_CMP
00000226                           399  
00000226                           400  SUB_CMP
00000226                           401  
00000226  3015                     402      MOVE.W (A5), D0
00000228                           403      
00000228  123C 0008                404      MOVE.B  #8,D1     
0000022C                           405  
0000022C  E368                     406      LSL.W   D1,D0
0000022E                           407                   
0000022E  123C 000E                408      MOVE.B  #14,D1
00000232                           409  
00000232  E268                     410      LSR.W   D1,D0  *DO now holds size
00000234                           411                                              
00000234  B03C 0002                412      CMP.B    #$2, D0        *if D0 holds 3, size is L
00000238                           413      
00000238  4EF9 0000027A            414      JMP      SUB_CMP_L
0000023E                           415                   
0000023E  B03C 0001                416      CMP.B    #$1, D0        *if D0 holds 3, size is W
00000242                           417                                   
00000242  4EF9 00000264            418      JMP      SUB_CMP_W
00000248                           419  
00000248  4EF9 0000024E            420      JMP      SUB_CMP_B
0000024E                           421  
0000024E                           422  SUB_CMP_B  *Print B
0000024E                           423  
Line 424 ERROR: Undefined symbol
0000024E  43F9 004DBB8E            424      LEA SIZE_B_PRINT, A1  *print B
00000254                           425                   
00000254  103C 000E                426      MOVE.B #14, D0
00000258                           427                   
00000258  4E4F                     428      TRAP #15
0000025A                           429      
0000025A  1A3C 0000                430      MOVE.B #%00, D5
0000025E                           431      
0000025E  4EF9 00000290            432      JMP PRINT_SUB_CMP
00000264                           433      
00000264                           434  SUB_CMP_W  *Print W
00000264                           435  
Line 436 ERROR: Undefined symbol
00000264  43F9 004DBB8E            436      LEA SIZE_W_PRINT, A1  *print W
0000026A                           437                   
0000026A  103C 000E                438      MOVE.B #14, D0
0000026E                           439                   
0000026E  4E4F                     440      TRAP #15
00000270                           441      
00000270  1A3C 0001                442      MOVE.B #%01, D5
00000274                           443  
00000274  4EF9 00000290            444      JMP PRINT_SUB_CMP
0000027A                           445  
0000027A                           446  SUB_CMP_L   *Print L
0000027A                           447  
Line 448 ERROR: Undefined symbol
0000027A  43F9 004DBB8E            448      LEA SIZE_L_PRINT, A1  *print L
00000280                           449                   
00000280  103C 000E                450      MOVE.B #14, D0
00000284                           451                   
00000284  4E4F                     452      TRAP #15
00000286                           453  
00000286  1A3C 0002                454      MOVE.B #%10, D5
0000028A                           455      
0000028A  4EF9 00000290            456      JMP PRINT_SUB_CMP
00000290                           457      
00000290                           458  PRINT_SUB_CMP
00000290                           459  
00000290  3C3C 0000                460      MOVE.W #$000, D6
00000294                           461     
00000294  3015                     462      MOVE.W (A5), D0
00000296                           463  
00000296  123C 0004                464      MOVE.B  #4,D1     
0000029A                           465  
0000029A  E368                     466      LSL.W   D1,D0
0000029C                           467                   
0000029C  123C 000D                468      MOVE.B  #13,D1
000002A0                           469  
000002A0  E268                     470      LSR.W   D1,D0  *D0 now holds Dn
000002A2                           471                                              
000002A2  3E00                     472      MOVE.W D0, D7 *D6 holds Dn
000002A4                           473      
000002A4  4EB9 00001266            474      JSR PRINT_EA
000002AA                           475  
Line 476 ERROR: Undefined symbol
000002AA  43F9 004DBB8E            476      LEA COMMA, A1
000002B0                           477  
000002B0  103C 000E                478      MOVE.B #14, D0
000002B4                           479                   
000002B4  4E4F                     480      TRAP #15
000002B6                           481          
000002B6  4286                     482      CLR.L D6
000002B8                           483      
000002B8  4287                     484      CLR.L D7
000002BA                           485      
000002BA  3015                     486      MOVE.W (A5), D0
000002BC                           487  
000002BC  123C 000A                488      MOVE.B  #10,D1     
000002C0                           489  
000002C0  E368                     490      LSL.W   D1,D0
000002C2                           491                   
000002C2  123C 000D                492      MOVE.B  #13,D1
000002C6                           493  
000002C6  E268                     494      LSR.W   D1,D0  *D0 now holds MODE
000002C8                           495                                              
000002C8  3C00                     496      MOVE.W D0, D6 *D6 holds mode
000002CA                           497      
000002CA  3015                     498      MOVE.W (A5), D0
000002CC                           499  
000002CC  123C 000D                500      MOVE.B  #13,D1     
000002D0                           501  
000002D0  E368                     502      LSL.W   D1,D0
000002D2                           503                   
000002D2  123C 000D                504      MOVE.B  #13,D1
000002D6                           505  
000002D6  E268                     506      LSR.W   D1,D0  *D0 now holds Register
000002D8                           507                                              
000002D8  3E00                     508      MOVE.W D0, D7 *D6 holds Register   
000002DA                           509      
000002DA  4EB9 00001266            510      JSR PRINT_EA
000002E0                           511  
000002E0  6000 FD32                512      BRA PARSE_MEMORY
000002E4                           513  
000002E4                           514  
000002E4                           515  ADDQ
000002E4                           516  
Line 517 ERROR: Undefined symbol
000002E4  43F9 004DBB8E            517      LEA ADDQ_MESSAGE, A1  *print ADDQ
000002EA                           518                   
000002EA  103C 000E                519      MOVE.B #14, D0
000002EE                           520                   
000002EE  4E4F                     521      TRAP #15
000002F0                           522      
000002F0  3015                     523      MOVE.W (A5), D0
000002F2                           524      
000002F2  123C 0008                525      MOVE.B  #8,D1     
000002F6                           526  
000002F6  E368                     527      LSL.W   D1,D0
000002F8                           528                   
000002F8  123C 000E                529      MOVE.B  #14,D1
000002FC                           530  
000002FC  E268                     531      LSR.W   D1,D0  *DO now holds size
000002FE                           532                                              
000002FE  B03C 0002                533      CMP.B    #$2, D0        *if D0 holds 3, size is L
00000302                           534      
00000302  4EF9 00000344            535      JMP      ADDQL
00000308                           536                   
00000308  B03C 0001                537      CMP.B    #$1, D0        *if D0 holds 3, size is W
0000030C                           538                                   
0000030C  4EF9 0000032E            539      JMP      ADDQW
00000312                           540  
00000312  4EF9 00000318            541      JMP      ADDQB
00000318                           542  
00000318                           543  ADDQB  *Print B
00000318                           544  
Line 545 ERROR: Undefined symbol
00000318  43F9 004DBB8E            545      LEA SIZE_B_PRINT, A1  *print B
0000031E                           546                   
0000031E  103C 000E                547      MOVE.B #14, D0
00000322                           548                   
00000322  4E4F                     549      TRAP #15
00000324                           550      
00000324  1A3C 0000                551      MOVE.B #%00, D5
00000328                           552      
00000328  4EF9 0000035A            553      JMP PRINTADDQ
0000032E                           554      
0000032E                           555  ADDQW  *Print W
0000032E                           556  
Line 557 ERROR: Undefined symbol
0000032E  43F9 004DBB8E            557      LEA SIZE_W_PRINT, A1  *print W
00000334                           558                   
00000334  103C 000E                559      MOVE.B #14, D0
00000338                           560                   
00000338  4E4F                     561      TRAP #15
0000033A                           562      
0000033A  1A3C 0001                563      MOVE.B #%01, D5
0000033E                           564  
0000033E  4EF9 0000035A            565      JMP PRINTADDQ
00000344                           566  
00000344                           567  ADDQL   *Print L
00000344                           568  
Line 569 ERROR: Undefined symbol
00000344  43F9 004DBB8E            569      LEA SIZE_L_PRINT, A1  *print L
0000034A                           570                   
0000034A  103C 000E                571      MOVE.B #14, D0
0000034E                           572                   
0000034E  4E4F                     573      TRAP #15
00000350                           574  
00000350  1A3C 0002                575      MOVE.B #%10, D5
00000354                           576      
00000354  4EF9 0000035A            577      JMP PRINTADDQ
0000035A                           578      
0000035A                           579  PRINTADDQ
0000035A                           580  
0000035A  3C3C 0111                581      MOVE.W #$111, D6
0000035E                           582      
0000035E  3E3C 0100                583      MOVE.W #$100, D7
00000362                           584  
00000362  4EB9 00001266            585      JSR PRINT_EA
00000368                           586      
00000368  4286                     587      CLR.L D6
0000036A                           588      
0000036A  4287                     589      CLR.L D7
0000036C                           590      
0000036C  3015                     591      MOVE.W (A5), D0
0000036E                           592  
0000036E  123C 000A                593      MOVE.B  #10,D1     
00000372                           594  
00000372  E368                     595      LSL.W   D1,D0
00000374                           596                   
00000374  123C 000D                597      MOVE.B  #13,D1
00000378                           598  
00000378  E268                     599      LSR.W   D1,D0  *D0 now holds MODE
0000037A                           600                                              
0000037A  3C00                     601      MOVE.W D0, D6 *D6 holds mode
0000037C                           602      
0000037C  3015                     603      MOVE.W (A5), D0
0000037E                           604  
0000037E  123C 000D                605      MOVE.B  #13,D1     
00000382                           606  
00000382  E368                     607      LSL.W   D1,D0
00000384                           608                   
00000384  123C 000D                609      MOVE.B  #13,D1
00000388                           610  
00000388  E268                     611      LSR.W   D1,D0  *D0 now holds MODE
0000038A                           612                                              
0000038A  3E00                     613      MOVE.W D0, D7 *D6 holds Register   
0000038C                           614      
0000038C  4EB9 00001266            615      JSR PRINT_EA
00000392                           616  
00000392  6000 FC80                617      BRA PARSE_MEMORY
00000396                           618  
00000396                           619      
00000396                           620  
00000396                           621  
00000396                           622  
00000396                           623  
00000396                           624  
00000396                           625  
00000396                           626  
00000396                           627  
00000396                           628  -------------------- end include --------------------
00000396                           629                  INCLUDE 'TRYING_NOP.X68'
00000396                           630  
00000396                           631      
00000396                           632   
00000396                           633      *MOVE.W  #$4E75, D2          * hardcodiing nop
00000396                           634  
00000396                           635     * CMP.L       #$4E71, D2      * has to be NOP
00000396                           636      *
00000396                           637     * BEQ         NOP_OPCODE
00000396                           638      
00000396                           639     * CMP.L       #$4E75, D2      * has to be RTS
00000396                           640      
00000396                           641    *  BEQ         RTS_OPCODE
00000396                           642     *BRA CLR_OPCODE  
00000396                           643  
00000396                           644  NOP_OPCODE
Line 645 ERROR: Undefined symbol
00000396  43F9 004DBB8E            645      LEA         NOP_MESSAGE, A1     * print out message for 'NOP'
0000039C                           646      
0000039C  103C 000E                647      MOVE.B      #14, D0
000003A0                           648      
000003A0  4E4F                     649      TRAP #15
000003A2                           650      
000003A2  6000 FC70                651      BRA PARSE_MEMORY
000003A6                           652  RTS_OPCODE 
Line 653 ERROR: Undefined symbol
000003A6  43F9 004DBB8E            653      LEA         RTS_MESSAGE, A1     * print out message for 'RTS'
000003AC                           654      
000003AC  103C 000E                655      MOVE.B      #14, D0
000003B0                           656      
000003B0  4E4F                     657      TRAP #15
000003B2                           658      
000003B2  6000 FC60                659      BRA PARSE_MEMORY
000003B6                           660      
000003B6                           661  JSR_OPCODE 
Line 662 ERROR: Undefined symbol
000003B6  43F9 004DBB8E            662      LEA         JSR_MESSAGE, A1     * print out message for 'JSR'
000003BC                           663      
000003BC  103C 000E                664      MOVE.B      #14, D0
000003C0                           665      
000003C0  4E4F                     666      TRAP #15
000003C2                           667      
000003C2  2002                     668      MOVE.L D2, D0
000003C4                           669  
000003C4  123C 000D                670      MOVE.B  #13,D1     
000003C8                           671  
000003C8  E368                     672      LSL.W   D1,D0
000003CA                           673                   
000003CA  123C 000D                674      MOVE.B  #13,D1
000003CE                           675  
000003CE  E268                     676      LSR.W   D1,D0  *D0 now holds Register
000003D0                           677                                              
000003D0  3E00                     678      MOVE.W D0, D7 *D7 holds Register  
000003D2                           679  
000003D2  2002                     680      MOVE.L D2, D0
000003D4                           681  
000003D4  123C 000A                682      MOVE.B  #10,D1     
000003D8                           683  
000003D8  E368                     684      LSL.W   D1,D0
000003DA                           685                   
000003DA  123C 000D                686      MOVE.B  #13,D1
000003DE                           687  
000003DE  E268                     688      LSR.W   D1,D0  *D0 now holds MODE
000003E0                           689                                              
000003E0  3C00                     690      MOVE.W D0, D6 *D6 holds MODE  
000003E2                           691      
000003E2  4EB9 00001266            692      JSR PRINT_EA
000003E8                           693      
000003E8  6000 FC2A                694      BRA PARSE_MEMORY
000003EC                           695         
000003EC                           696  CLR_OPCODE 
Line 697 ERROR: Undefined symbol
000003EC  43F9 004DBB8E            697      LEA         CLR_MESSAGE, A1     * print out message for 'CLR'
000003F2                           698      
000003F2  103C 000E                699      MOVE.B      #14, D0
000003F6                           700      
000003F6  4E4F                     701      TRAP #15
000003F8                           702                     
Line 703 ERROR: Undefined symbol
000003F8  43F9 004DBB8E            703      LEA      PERIOD, A1
000003FE                           704      
000003FE  103C 000E                705      MOVE.B   #14, D0
00000402                           706      
00000402  4E4F                     707      TRAP #15 
00000404                           708                
00000404  3015                     709      MOVE.W      (A5), D0
00000406                           710               
00000406  123C 0006                711      MOVE.B      #6, D1
0000040A                           712                 
0000040A  E268                     713      LSR.W       D1, D0  *shift right 6 
0000040C                           714                 
0000040C  123C 000E                715      MOVE.B      #14, D1
00000410                           716                 
00000410  E368                     717      LSL.W       D1, D0  *shift left 15, only size is left
00000412                           718      
00000412  123C 000E                719      MOVE.B      #14, D1
00000416                           720                 
00000416  E268                     721      LSR.W       D1, D0  *shift right 15, size is left   
00000418                           722      
00000418  B07C 0000                723      CMP.W       #00, D0
0000041C                           724  
0000041C  6700 004A                725      BEQ         SIZE_B
00000420                           726      
00000420  B07C 0001                727      CMP.W       #01, D0
00000424                           728                 
00000424  6700 004C                729      BEQ         SIZE_W 
00000428                           730      
00000428  B07C 0002                731      CMP.W       #2, D0
0000042C                           732                 
0000042C  6700 004E                733      BEQ         SIZE_L
00000430                           734  
00000430                           735  PRINT_SIZE
00000430                           736  
00000430  103C 000E                737      MOVE.B      #14, D0
00000434                           738      
00000434  4E4F                     739      TRAP #15
00000436                           740  
00000436  4280                     741      CLR.L   D0
00000438                           742                  
00000438  4281                     743      CLR.L   D1
0000043A                           744                       * set register
0000043A                           745                   
0000043A  3015                     746      MOVE.W  (A5),D0     *D0 is the binary value to decode
0000043C                           747                 
0000043C  123C 000D                748      MOVE.B  #13,D1           *8 bits is the number of times to shift to the left to remove opcode & register #
00000440                           749  
00000440  E368                     750      LSL.W   D1,D0           *Shift the bits 8 times -> D0 now removes the opcode & reg#
00000442                           751  
00000442  123C 000D                752      MOVE.B  #13,D1          *14 bits is the number of times to shift to hold the mode number
00000446                           753  
00000446  E268                     754      LSR.W   D1,D0           *Shift the bits 13 times -> D0 now holds the size number
00000448                           755  
00000448  1E00                     756      MOVE.B  D0, D7          *put D0 to data register into D7 for future printing
0000044A                           757                   
0000044A                           758                   * set mode
0000044A  4280                     759      CLR.L D0                *clear D0
0000044C                           760                   
0000044C  4281                     761      CLR.L D1                *clear D1
0000044E                           762                   
0000044E  3015                     763      MOVE.W  (A5),D0     *D0 is the binary value to decode
00000450                           764                 
00000450  123C 000A                765      MOVE.B  #10,D1           *8 bits is the number of times to shift to the left to remove opcode & register #
00000454                           766  
00000454  E368                     767      LSL.W   D1,D0           *Shift the bits 8 times -> D0 now removes the opcode & reg#
00000456                           768  
00000456  123C 000D                769      MOVE.B  #13,D1          *14 bits is the number of times to shift to hold the mode number
0000045A                           770  
0000045A  E268                     771      LSR.W   D1,D0           *Shift the bits 13 times -> D0 now holds the size number
0000045C                           772  
0000045C  2C00                     773      MOVE.L  D0, D6          *put D0 to data register into D7 for future printing
0000045E                           774                   
0000045E  4EB9 00001266            775      JSR     PRINT_EA *by using jmp table
00000464                           776  
00000464  6000 FBAE                777      BRA PARSE_MEMORY
00000468                           778      
00000468                           779  SIZE_B 
00000468                           780                
Line 781 ERROR: Undefined symbol
00000468  43F9 004DBB8E            781      LEA         SIZE_B_PRINT, A1 
0000046E                           782      
0000046E  4EF8 0430                783      JMP PRINT_SIZE
00000472                           784      
00000472                           785  SIZE_W 
00000472                           786                
Line 787 ERROR: Undefined symbol
00000472  43F9 004DBB8E            787      LEA         SIZE_W_PRINT, A1 
00000478                           788      
00000478  4EF8 0430                789      JMP PRINT_SIZE
0000047C                           790      
0000047C                           791  SIZE_L 
0000047C                           792                
Line 793 ERROR: Undefined symbol
0000047C  43F9 004DBB8E            793      LEA         SIZE_L_PRINT, A1 
00000482                           794      
00000482  4EF8 0430                795      JMP PRINT_SIZE
00000486                           796      
00000486                           797  
00000486                           798   *   END    START        ; last line of source
00000486                           799  
00000486                           800  
00000486                           801  
00000486                           802  
00000486                           803  
00000486                           804  
00000486                           805  
00000486                           806  
00000486                           807  
00000486                           808  
00000486                           809  
00000486                           810  
00000486                           811  -------------------- end include --------------------
00000486                           812                  INCLUDE 'DIVU_OR.X68'
00000486                           813      
00000486  4EB9 00000F26            814  DIVU_OR          JSR      GET_SIZE_PURPLE  
0000048C                           815                                            
0000048C  BA3C 0003                816                   CMP.B    #$3, D5        *if D0 holds 3, the opcode is DIVU
00000490                           817                   
00000490  6700 0008                818                   BEQ      DIVU_CODE
00000494                           819                   
00000494  4EF9 000004DC            820                   JMP      OR_CODE
0000049A                           821                   
0000049A                           822  DIVU_CODE  
0000049A                           823                   * OP_CODE message
Line 824 ERROR: Undefined symbol
0000049A  43F9 004DBB8E            824                   LEA      DIVU_MESSAGE, A1
000004A0  103C 000E                825                   MOVE.B   #14, D0
000004A4  4E4F                     826                   TRAP #15
000004A6                           827  
000004A6  3A3C 0001                828                   MOVE    #%01, D5          
000004AA                           829                   
Line 830 ERROR: Undefined symbol
000004AA  43F9 004DBB8E            830                   LEA      SIZE_W_PRINT,    A1
000004B0                           831                   
000004B0  103C 000E                832                   MOVE.B   #14,             D0
000004B4                           833          
000004B4  4E4F                     834                   TRAP #15
000004B6                           835                   
000004B6  4EB9 00000FA6            836                   JSR     Set_Ea
000004BC                           837                   
000004BC  4EB9 00001266            838                   JSR     PRINT_EA *by using jmp table
000004C2                           839                   
000004C2  4EB9 00000F86            840                   JSR     PRINT_COMMA
000004C8                           841                   
000004C8                           842                    * for the first Dn 
000004C8  4EB9 00000F94            843                   JSR     GET_Data_Register
000004CE                           844                   
000004CE  1C3C 0000                845                   MOVE.B  #%000, D6 * for mode
000004D2                           846  
000004D2  4EB9 00001266            847                   JSR     PRINT_EA *by using jmp table
000004D8                           848  
000004D8  4EF8 0014                849                   JMP     PARSE_MEMORY
000004DC                           850  
000004DC                           851  OR_CODE    
000004DC                           852                   * OP_CODE message
Line 853 ERROR: Undefined symbol
000004DC  43F9 004DBB8E            853                   LEA      OR_MESSAGE, A1
000004E2  103C 000E                854                   MOVE.B   #14, D0
000004E6  4E4F                     855                   TRAP #15
000004E8                           856  
000004E8  4EB9 00000F3C            857                   JSR PRINTOUT_SIZE_PURPLE
000004EE                           858                   
000004EE                           859                     * check for dn and ea
000004EE  4280                     860                   CLR.L D0                *clear D0
000004F0                           861                   
000004F0  4281                     862                   CLR.L D1                *clear D1
000004F2                           863                   
000004F2  3015                     864                   MOVE.W  (A5),D0     *D0 is the binary value to decode
000004F4                           865                   
000004F4  0800 0008                866                   BTST    #8, D0
000004F8                           867                   
000004F8  6700 0028                868                   BEQ     OR_FIRST_EA
000004FC                           869                   
000004FC                           870                   * for the first Dn 
000004FC  4EB9 00000F94            871                   JSR     GET_Data_Register
00000502                           872                   
00000502  1C3C 0000                873                   MOVE.B  #%000, D6 * for mode
00000506                           874                   
00000506  4EB9 00001266            875                   JSR     PRINT_EA *by using jmp table
0000050C                           876                   
0000050C  4EB9 00000F86            877                   JSR     PRINT_COMMA
00000512                           878                   
00000512  4EB9 00000FA6            879                   JSR     Set_Ea
00000518                           880                   
00000518  4EB9 00001266            881                   JSR     PRINT_EA *by using jmp table
0000051E                           882                   
0000051E  4EF8 0014                883                   JMP     PARSE_MEMORY
00000522                           884                   
00000522                           885  OR_FIRST_EA
00000522  4EB9 00000FA6            886                   JSR     Set_Ea
00000528                           887                   
00000528  4EB9 00001266            888                   JSR     PRINT_EA *by using jmp table
0000052E                           889                   
0000052E  4EB9 00000F86            890                   JSR     PRINT_COMMA
00000534                           891                   
00000534                           892                    * for the first Dn 
00000534  4EB9 00000F94            893                   JSR     GET_Data_Register
0000053A                           894                   
0000053A  1C3C 0000                895                   MOVE.B  #%000, D6 * for mode
0000053E                           896  
0000053E  4EB9 00001266            897                   JSR     PRINT_EA *by using jmp table
00000544                           898                   
00000544  4EF8 0014                899                   JMP     PARSE_MEMORY
00000548                           900  
00000548                           901  
00000548                           902  
00000548                           903  
00000548                           904  
00000548                           905  
00000548                           906  
00000548                           907  
00000548                           908  -------------------- end include --------------------
00000548                           909                  INCLUDE 'GROUP_0100_CODE.X68'
00000548                           910  GROUP_0100_CODE          *at this point we know the first 4 bits are 0100 -> NOP, RTS, JSR,  MOVEM, CLR
00000548                           911  
00000548  4280                     912                   CLR.L D0                *clear D0
0000054A                           913                   
0000054A  4281                     914                   CLR.L D1                *clear D1
0000054C                           915                   
0000054C  3015                     916                   MOVE.W  (A5),D0     *D0 is the binary value to decode
0000054E                           917  
0000054E  123C 0004                918                   MOVE.B  #4,D1           *4 bits is the number of times to shift to the left to remove opcode
00000552                           919  
00000552  E368                     920                   LSL.W   D1,D0           *Shift the bits 4 times -> D0 now removes the opcode
00000554                           921                   
00000554  123C 0004                922                   MOVE.B  #4,D1           *4 bits is the number of times to shift to hold everything except the opcode
00000558                           923  
00000558  E268                     924                   LSR.W   D1,D0           *Shift the bits 4 times -> D0 now holds everything except opcode
0000055A                           925                   
0000055A                           926                                              
0000055A  B07C 0E71                927                   CMP.W    #$E71, D0      *if D0 holds E71, the opcode is NOP
0000055E                           928                   
0000055E  6700 FE36                929                   BEQ      NOP_OPCODE       *Branch to NOP_CODE if the opcode is NOP
00000562                           930                   
00000562                           931                   
00000562  B07C 0E75                932                   CMP.W    #$E75, D0      *if D0 holds E75, the opcode is RTS
00000566                           933                   
00000566  6700 FE3E                934                   BEQ      RTS_OPCODE       *Branch to RTS_CODE if the opcode is RTS
0000056A                           935                   
0000056A                           936                   
0000056A  4280                     937                   CLR.L D0                *clear D0
0000056C                           938                   
0000056C                           939                   
0000056C  4281                     940                   CLR.L D1                *clear D1
0000056E                           941                   
0000056E                           942                   
0000056E  3015                     943                   MOVE.W  (A5),D0     *D0 is the binary value to decode
00000570                           944  
00000570                           945  
00000570  123C 0004                946                   MOVE.B  #4,D1           *4 bits is the number of times to shift to the left to remove opcode
00000574                           947  
00000574                           948  
00000574  E368                     949                   LSL.W   D1,D0           *Shift the bits 4 times -> D0 now removes the opcode
00000576                           950                   
00000576  123C 000C                951                   MOVE.B  #12,D1           *12 bits is the number of times to shift to hold the 4th-8th bits (counting left to right, non-inclusive)
0000057A                           952  
0000057A  E268                     953                   LSR.W   D1,D0           *Shift the bits 4 times -> D0 now holds 4th-8th bits (counting left to right, non-inclusive)
0000057C                           954                   
0000057C  B07C 0002                955                   CMP.W    #$2, D0        *if D0 holds #2, the opcode is CLR
00000580                           956                   
00000580  6700 FE6A                957                   BEQ      CLR_OPCODE       *Branch to NOP_CODE if the opcode is CLR
00000584                           958                   
00000584                           959          
00000584  B07C 000E                960                   CMP.W    #$E, D0        *if D0 holds $E = 14, the opcode is JSR
00000588                           961                   
00000588  6700 FE2C                962                   BEQ      JSR_OPCODE       *Branch to NOP_CODE if the opcode is CLR
0000058C                           963                   
0000058C                           964                   
0000058C  6000 00C0                965                   BRA      MOVEM_OPCODE     *else it is a MOVEM
00000590                           966  
00000590                           967      
00000590                           968  
00000590                           969  
00000590                           970  
00000590                           971  -------------------- end include --------------------
00000590                           972                  INCLUDE 'MULS_AND.X68'
00000590                           973   
00000590  4EB9 00000F26            974  MULS_AND         JSR      GET_SIZE_PURPLE
00000596                           975                                              
00000596  BA3C 0003                976                   CMP.B    #$3, D5        *if D0 holds 3, the opcode is DIVU
0000059A                           977                   
0000059A  6700 0008                978                   BEQ      MULS_CODE
0000059E                           979                   
0000059E  4EF9 000005E2            980                   JMP      AND_CODE
000005A4                           981                   
000005A4                           982  MULS_CODE
000005A4                           983                   * OP_CODE message
Line 984 ERROR: Undefined symbol
000005A4  43F9 004DBB8E            984                   LEA MULS_MESSAGE, A1
000005AA                           985                   
000005AA  103C 000E                986                   MOVE.B #14, D0
000005AE                           987                   
000005AE  4E4F                     988                   TRAP #15
000005B0                           989  
Line 990 ERROR: Undefined symbol
000005B0  43F9 004DBB8E            990                   LEA      SIZE_W_PRINT,    A1
000005B6                           991                   
000005B6  103C 000E                992                   MOVE.B   #14,             D0
000005BA                           993          
000005BA  4E4F                     994                   TRAP #15
000005BC                           995                   
000005BC  4EB9 00000FA6            996                   JSR     Set_Ea
000005C2                           997                   
000005C2  4EB9 00001266            998                   JSR     PRINT_EA *by using jmp table
000005C8                           999                   
000005C8  4EB9 00000F86           1000                   JSR     PRINT_COMMA
000005CE                          1001                   
000005CE                          1002                    * for the first Dn 
000005CE  4EB9 00000F94           1003                   JSR     GET_Data_Register
000005D4                          1004                   
000005D4  1C3C 0000               1005                   MOVE.B  #%000, D6 * for mode
000005D8                          1006  
000005D8  4EB9 00001266           1007                   JSR     PRINT_EA *by using jmp table
000005DE                          1008  
000005DE  4EF8 0014               1009                   JMP      PARSE_MEMORY
000005E2                          1010  
000005E2                          1011  AND_CODE
000005E2                          1012                   * OP_CODE message
Line 1013 ERROR: Undefined symbol
000005E2  43F9 004DBB8E           1013                   LEA AND_MESSAGE, A1
000005E8  103C 000E               1014                   MOVE.B #14, D0
000005EC  4E4F                    1015                   TRAP #15
000005EE                          1016                   
000005EE  4EB9 00000F3C           1017                   JSR PRINTOUT_SIZE_PURPLE
000005F4                          1018                   
000005F4                          1019                     * check for dn and ea
000005F4  4280                    1020                   CLR.L D0                *clear D0
000005F6                          1021                   
000005F6  4281                    1022                   CLR.L D1                *clear D1
000005F8                          1023                   
000005F8  3015                    1024                   MOVE.W  (A5),D0     *D0 is the binary value to decode
000005FA                          1025                   
000005FA  0800 0008               1026                   BTST    #8, D0
000005FE                          1027                   
000005FE  6700 0028               1028                   BEQ     AND_FIRST_EA
00000602                          1029                   
00000602                          1030                   * for the first Dn 
00000602  4EB9 00000F94           1031                   JSR     GET_Data_Register
00000608                          1032                   
00000608  1C3C 0000               1033                   MOVE.B  #%000, D6 * for mode
0000060C                          1034                   
0000060C  4EB9 00001266           1035                   JSR     PRINT_EA *by using jmp table
00000612                          1036                   
00000612  4EB9 00000F86           1037                   JSR     PRINT_COMMA
00000618                          1038                   
00000618  4EB9 00000FA6           1039                   JSR     Set_Ea
0000061E                          1040                   
0000061E  4EB9 00001266           1041                   JSR     PRINT_EA *by using jmp table
00000624                          1042                   
00000624  4EF8 0014               1043                   JMP      PARSE_MEMORY
00000628                          1044                   
00000628                          1045  AND_FIRST_EA
00000628  4EB9 00000FA6           1046                   JSR     Set_Ea
0000062E                          1047                   
0000062E  4EB9 00001266           1048                   JSR     PRINT_EA *by using jmp table
00000634                          1049                   
00000634  4EB9 00000F86           1050                   JSR     PRINT_COMMA
0000063A                          1051                   
0000063A                          1052                    * for the first Dn 
0000063A  4EB9 00000F94           1053                   JSR     GET_Data_Register
00000640                          1054                   
00000640  1C3C 0000               1055                   MOVE.B  #%000, D6 * for mode
00000644                          1056  
00000644  4EB9 00001266           1057                   JSR     PRINT_EA *by using jmp table
0000064A                          1058                   
0000064A  4EF8 0014               1059                   JMP      PARSE_MEMORY
0000064E                          1060  
0000064E                          1061  
0000064E                          1062  
0000064E                          1063  
0000064E                          1064  
0000064E                          1065  
0000064E                          1066  
0000064E                          1067  
0000064E                          1068  
0000064E                          1069  -------------------- end include --------------------
0000064E                          1070                  INCLUDE 'MOVEM.X68'
0000064E                          1071     
0000064E                          1072  
0000064E                          1073  MOVEM_OPCODE
0000064E                          1074  
0000064E  4280                    1075     CLR.L       D0               *Zero it
00000650                          1076  
00000650  3015                    1077     MOVE.W      (A5), D0     *We'll play with it here
00000652                          1078  
Line 1079 ERROR: Undefined symbol
00000652  43F9 004DBB8E           1079     LEA MOVEM_MESSAGE, A1
00000658                          1080            
00000658  103C 000E               1081     MOVE.B #14, D0
0000065C                          1082                   
0000065C  4E4F                    1083     TRAP #15    
0000065E                          1084  
0000065E  3015                    1085    MOVE.W     (A5), D0
00000660                          1086  
00000660  0800 0006               1087    BTST       #6,  D0      
00000664                          1088  
00000664  6600 0012               1089    BNE        PRINT_SIZE_L_MOVEM
00000668                          1090  
Line 1091 ERROR: Undefined symbol
00000668  43F9 004DBB8E           1091    LEA SIZE_W_PRINT, A1
0000066E                          1092            
0000066E  103C 000E               1093    MOVE.B #14, D0
00000672                          1094                   
00000672  4E4F                    1095    TRAP #15    
00000674                          1096   
00000674  6000 000E               1097    BRA          DR_FIELD
00000678                          1098      
00000678                          1099    * Print out size for W
00000678                          1100  PRINT_SIZE_L_MOVEM
00000678                          1101  
Line 1102 ERROR: Undefined symbol
00000678  43F9 004DBB8E           1102    LEA SIZE_L_PRINT, A1
0000067E                          1103            
0000067E  103C 000E               1104    MOVE.B #14, D0
00000682                          1105                   
00000682  4E4F                    1106    TRAP #15    
00000684                          1107  
00000684                          1108  DR_FIELD
00000684                          1109                 
00000684  0800 000A               1110    BTST        #10,  D0    * BIT TEST
00000688                          1111  
00000688  6700 000C               1112    BEQ         Regitset_Memory *if D0 holds a 1
0000068C                          1113  
0000068C  6000 0050               1114    BRA         Memory_Register *If D0 hollds a 0
00000690                          1115  
00000690  4284                    1116    CLR.L D4
00000692                          1117  
00000692  183C 000F               1118    MOVE.B #15, D4
00000696                          1119  
00000696                          1120  Regitset_Memory
00000696  361D                    1121      MOVE.W      (A5)+, D3
00000698                          1122      
00000698  183C 000F               1123      MOVE.B      #15, D4
0000069C                          1124      
0000069C  4EB9 000008DC           1125      JSR         LOOP_MOVEM
000006A2                          1126      
Line 1127 ERROR: Undefined symbol
000006A2  43F9 004DBB8E           1127      LEA COMMA, A1
000006A8                          1128      
000006A8  103C 000E               1129      MOVE.B      #14, D0
000006AC                          1130      
000006AC  4E4F                    1131      TRAP #15
000006AE                          1132      
000006AE  4EB9 000006B8           1133      JSR PRINT_ADDRESS
000006B4                          1134      
000006B4  6000 F95E               1135      BRA PARSE_MEMORY
000006B8                          1136  
000006B8                          1137  PRINT_ADDRESS 
Line 1138 ERROR: Undefined symbol
000006B8  303C BB8E               1138      MOVE.W      #example, D0
000006BC                          1139  
000006BC  123C 000A               1140      MOVE.B      #10, D1
000006C0                          1141      
000006C0  E368                    1142      LSL.W       D1, D0
000006C2                          1143      
000006C2  123C 000D               1144      MOVE.B      #13, D1
000006C6                          1145  
000006C6  E268                    1146      LSR.W       D1, D0
000006C8                          1147      
000006C8  1C00                    1148      MOVE.B      D0, D6
000006CA                          1149      
Line 1150 ERROR: Undefined symbol
000006CA  203C 004DBB8E           1150      MOVE.L      #example, D0
000006D0                          1151      
000006D0  E368                    1152      LSL.W       D1, D0
000006D2                          1153      
000006D2  E268                    1154      LSR.W       D1, D0
000006D4                          1155      
000006D4  1E00                    1156      MOVE.B      D0, D7
000006D6                          1157      
000006D6  4EB9 00001266           1158      JSR PRINT_EA
000006DC                          1159      
000006DC  4E75                    1160      RTS
000006DE                          1161  
000006DE                          1162  Memory_Register
000006DE  4EB8 06B8               1163      JSR         PRINT_ADDRESS
000006E2                          1164      
Line 1165 ERROR: Undefined symbol
000006E2  43F9 004DBB8E           1165      LEA         COMMA, A1
000006E8                          1166      
000006E8  103C 000E               1167      MOVE.B      #14, D0
000006EC                          1168      
000006EC  4E4F                    1169      TRAP #15
000006EE                          1170      
Line 1171 ERROR: Undefined symbol
000006EE  203C 004DBB8E           1171      MOVE.L #example, D0
000006F4                          1172      
000006F4  123C 000A               1173      MOVE.B      #10, D1
000006F8                          1174      
000006F8  E368                    1175      LSL.W       D1, D0
000006FA                          1176  
000006FA  123C 000D               1177      MOVE.B      #13, D1
000006FE                          1178  
000006FE  E268                    1179      LSR.W       D1, D0
00000700                          1180  
00000700  B03C 0004               1181      CMP.B       #%100, D0
00000704                          1182  
00000704  6700 0012               1183      BEQ         OPPOSITE_LOOP 
00000708                          1184      
00000708  361D                    1185      MOVE.W      (A5)+, D3
0000070A                          1186      
0000070A  183C 000F               1187      MOVE.B      #15, D4
0000070E                          1188      
0000070E  4EB9 000008DC           1189      JSR         LOOP_MOVEM
00000714                          1190      
00000714  6000 F8FE               1191      BRA PARSE_MEMORY
00000718                          1192  
00000718                          1193  
00000718                          1194  OPPOSITE_LOOP
00000718  4241                    1195      CLR         D1
0000071A                          1196  
0000071A  361D                    1197      MOVE.W      (A5)+, D3
0000071C                          1198      
0000071C  183C 000F               1199      MOVE.B      #15, D4
00000720                          1200      
00000720  4EB9 00000726           1201      JSR OPPOSITE_LOOP_MOVEM
00000726                          1202          
00000726                          1203  OPPOSITE_LOOP_MOVEM
00000726                          1204          
00000726  0903                    1205      BTST        D4, D3     * BIT TEST
00000728                          1206  
00000728  6600 0020               1207      BNE         OPPOSITE_IS_USED_FIRST
0000072C                          1208  
0000072C  5304                    1209      SUB.B       #1, D4
0000072E                          1210      
0000072E                          1211  OPPOSITE_CHECK
0000072E  B83C 0000               1212      CMP.B       #0,  D4
00000732                          1213  
00000732  6700 F8E0               1214      BEQ         PARSE_MEMORY
00000736                          1215  
00000736  60EE                    1216      BRA         OPPOSITE_LOOP_MOVEM
00000738                          1217      
00000738                          1218  OPPOSITE_LOOP_MOVEM_SECOND               * FOR ALL REGISTERS PRINTED AFTER THE FIRST
00000738  0903                    1219      BTST        D4, D3     * BIT TEST
0000073A                          1220  
0000073A  6600 0018               1221      BNE         OPPOSITE_IS_USED
0000073E                          1222  
0000073E  5304                    1223      SUB.B       #1, D4
00000740                          1224      
00000740                          1225  OPPOSITE_CHECK_SECOND
00000740  B83C 0000               1226      CMP.B       #0,  D4
00000744                          1227  
00000744  6700 F8CE               1228      BEQ         PARSE_MEMORY
00000748                          1229  
00000748  60EE                    1230      BRA         OPPOSITE_LOOP_MOVEM_SECOND
0000074A                          1231  
0000074A                          1232  OPPOSITE_IS_USED_FIRST
0000074A  4EB9 0000076A           1233      JSR         OPPOSITE_PRINT_REGISTER_MOVEM
00000750                          1234  
00000750  5304                    1235      SUB.B       #1, D4
00000752                          1236  
00000752  60EC                    1237      BRA         OPPOSITE_CHECK_SECOND
00000754                          1238  
00000754                          1239  
00000754                          1240  OPPOSITE_IS_USED
Line 1241 ERROR: Undefined symbol
00000754  43F9 004DBB8E           1241      LEA         SLASH, A1
0000075A                          1242  
0000075A  103C 000E               1243      MOVE.B      #14, D0
0000075E                          1244  
0000075E  4E4F                    1245      TRAP #15
00000760                          1246      
00000760  4EB9 0000076A           1247      JSR         OPPOSITE_PRINT_REGISTER_MOVEM
00000766                          1248  
00000766  5304                    1249      SUB.B       #1, D4
00000768                          1250  
00000768  60D6                    1251      BRA         OPPOSITE_CHECK_SECOND
0000076A                          1252  
0000076A                          1253      
0000076A                          1254      
0000076A                          1255  OPPOSITE_PRINT_REGISTER_MOVEM
0000076A  41F9 0000077C           1256      LEA        OPPOSITE_jmp_table_MOVEM, A0
00000770  4242                    1257      CLR        D2
00000772  143C 0006               1258      MOVE.B     #6, D2
00000776  C4C4                    1259      MULU       D4, D2                           
00000778  4EF0 2000               1260      JMP        0(A0,D2)   *Jump indirect with index
0000077C                          1261                      
0000077C                          1262  OPPOSITE_jmp_table_MOVEM      
0000077C  4EF9 000007DC           1263      JMP         OPPOSITE_bit0
00000782  4EF9 000007EC           1264                 JMP         OPPOSITE_bit1
00000788  4EF9 000007FC           1265                 JMP         OPPOSITE_bit2
0000078E  4EF9 0000080C           1266                 JMP         OPPOSITE_bit3
00000794  4EF9 0000081C           1267                 JMP         OPPOSITE_bit4
0000079A  4EF9 0000082C           1268                 JMP         OPPOSITE_bit5
000007A0  4EF9 0000083C           1269                 JMP         OPPOSITE_bit6
000007A6  4EF9 0000084C           1270                 JMP         OPPOSITE_bit7
000007AC  4EF9 0000085C           1271                 JMP         OPPOSITE_bit8
000007B2  4EF9 0000086C           1272                 JMP         OPPOSITE_bit9
000007B8  4EF9 0000087C           1273                 JMP         OPPOSITE_bit10
000007BE  4EF9 0000088C           1274                 JMP         OPPOSITE_bit11
000007C4  4EF9 0000089C           1275                 JMP         OPPOSITE_bit12
000007CA  4EF9 000008AC           1276                 JMP         OPPOSITE_bit13
000007D0  4EF9 000008BC           1277                 JMP         OPPOSITE_bit14
000007D6  4EF9 000008CC           1278                 JMP         OPPOSITE_bit15
000007DC                          1279          
000007DC                          1280   
000007DC                          1281   
000007DC                          1282   
000007DC                          1283  OPPOSITE_bit0    * D0
000007DC  1E3C 0007               1284      MOVE.B    #%111, D7    * REGISTER
000007E0                          1285      
000007E0  1C3C 0001               1286      MOVE.B    #%001, D6    * MODE
000007E4                          1287  
000007E4  4EB9 00001266           1288      JSR        PRINT_EA
000007EA                          1289  
000007EA  4E75                    1290      RTS    
000007EC                          1291  
000007EC                          1292  OPPOSITE_bit1    * D1
000007EC  1E3C 0006               1293      MOVE.B    #%110, D7    * REGISTER
000007F0                          1294      
000007F0  1C3C 0001               1295      MOVE.B    #%001, D6    * MODE
000007F4                          1296  
000007F4  4EB9 00001266           1297      JSR        PRINT_EA
000007FA                          1298  
000007FA  4E75                    1299      RTS    
000007FC                          1300  
000007FC                          1301  OPPOSITE_bit2    * D2
000007FC  1E3C 0005               1302      MOVE.B    #%101, D7    * REGISTER
00000800                          1303      
00000800  1C3C 0001               1304      MOVE.B    #%001, D6    * MODE
00000804                          1305  
00000804  4EB9 00001266           1306      JSR        PRINT_EA    
0000080A                          1307  
0000080A  4E75                    1308      RTS
0000080C                          1309  
0000080C                          1310  OPPOSITE_bit3    * D3
0000080C  1E3C 0004               1311      MOVE.B    #%100, D7    * REGISTER
00000810                          1312      
00000810  1C3C 0001               1313      MOVE.B    #%001, D6    * MODE
00000814                          1314  
00000814  4EB9 00001266           1315      JSR        PRINT_EA
0000081A                          1316  
0000081A  4E75                    1317      RTS    
0000081C                          1318  
0000081C                          1319  OPPOSITE_bit4    * D4
0000081C  1E3C 0003               1320      MOVE.B    #%011, D7    * REGISTER
00000820                          1321  
00000820  1C3C 0001               1322      MOVE.B    #%001, D6    * MODE
00000824                          1323  
00000824  4EB9 00001266           1324      JSR        PRINT_EA
0000082A                          1325  
0000082A  4E75                    1326      RTS    
0000082C                          1327  
0000082C                          1328  
0000082C                          1329  OPPOSITE_bit5    * D5
0000082C  1E3C 0002               1330      MOVE.B    #%010, D7    * REGISTER
00000830                          1331      
00000830  1C3C 0001               1332      MOVE.B    #%001, D6    * MODE
00000834                          1333  
00000834  4EB9 00001266           1334      JSR        PRINT_EA
0000083A                          1335  
0000083A  4E75                    1336      RTS    
0000083C                          1337  
0000083C                          1338  OPPOSITE_bit6    * D6
0000083C  1E3C 0001               1339      MOVE.B    #%001, D7    * REGISTER
00000840                          1340      
00000840  1C3C 0001               1341      MOVE.B    #%001, D6    * MODE
00000844                          1342  
00000844  4EB9 00001266           1343      JSR        PRINT_EA
0000084A                          1344  
0000084A  4E75                    1345      RTS    
0000084C                          1346  
0000084C                          1347  OPPOSITE_bit7    * D7
0000084C  1E3C 0000               1348      MOVE.B    #%000, D7    * REGISTER
00000850                          1349      
00000850  1C3C 0001               1350      MOVE.B    #%001, D6    * MODE
00000854                          1351  
00000854  4EB9 00001266           1352      JSR        PRINT_EA
0000085A                          1353  
0000085A  4E75                    1354      RTS    
0000085C                          1355  
0000085C                          1356  OPPOSITE_bit8    * A0
0000085C  1E3C 0007               1357      MOVE.B    #%111, D7    * REGISTER
00000860                          1358      
00000860  1C3C 0000               1359      MOVE.B    #%000, D6    * MODE
00000864                          1360  
00000864  4EB9 00001266           1361      JSR        PRINT_EA
0000086A                          1362  
0000086A  4E75                    1363      RTS    
0000086C                          1364  
0000086C                          1365  OPPOSITE_bit9    * A1
0000086C  1E3C 0006               1366      MOVE.B    #%110, D7    * REGISTER
00000870                          1367      
00000870  1C3C 0000               1368      MOVE.B    #%000, D6    * MODE
00000874                          1369  
00000874  4EB9 00001266           1370      JSR        PRINT_EA
0000087A                          1371  
0000087A  4E75                    1372      RTS    
0000087C                          1373  
0000087C                          1374  OPPOSITE_bit10    * A2
0000087C  1E3C 0005               1375      MOVE.B    #%101, D7    * REGISTER
00000880                          1376      
00000880  1C3C 0000               1377      MOVE.B    #%000, D6    * MODE
00000884                          1378  
00000884  4EB9 00001266           1379      JSR        PRINT_EA
0000088A                          1380  
0000088A  4E75                    1381      RTS    
0000088C                          1382  
0000088C                          1383  
0000088C                          1384  OPPOSITE_bit11    * A5
0000088C  1E3C 0002               1385      MOVE.B    #%010, D7    * REGISTER
00000890                          1386      
00000890  1C3C 0000               1387      MOVE.B    #%000, D6    * MODE
00000894                          1388  
00000894  4EB9 00001266           1389      JSR        PRINT_EA
0000089A                          1390  
0000089A  4E75                    1391      RTS    
0000089C                          1392  
0000089C                          1393  OPPOSITE_bit12    * A4
0000089C  1E3C 0003               1394      MOVE.B    #%011, D7    * REGISTER
000008A0                          1395      
000008A0  1C3C 0000               1396      MOVE.B    #%000, D6    * MODE
000008A4                          1397  
000008A4  4EB9 00001266           1398      JSR        PRINT_EA
000008AA                          1399  
000008AA  4E75                    1400      RTS    
000008AC                          1401  
000008AC                          1402  
000008AC                          1403  OPPOSITE_bit13    * A5
000008AC  1E3C 0002               1404      MOVE.B    #%010, D7    * REGISTER
000008B0                          1405      
000008B0  1C3C 0000               1406      MOVE.B    #%000, D6    * MODE
000008B4                          1407  
000008B4  4EB9 00001266           1408      JSR        PRINT_EA
000008BA                          1409  
000008BA  4E75                    1410      RTS    
000008BC                          1411  
000008BC                          1412  
000008BC                          1413  OPPOSITE_bit14     * A6
000008BC  1E3C 0001               1414      MOVE.B    #%001, D7    * REGISTER
000008C0                          1415      
000008C0  1C3C 0000               1416      MOVE.B    #%000, D6    * MODE
000008C4                          1417  
000008C4  4EB9 00001266           1418      JSR        PRINT_EA
000008CA                          1419  
000008CA  4E75                    1420      RTS        
000008CC                          1421  
000008CC                          1422  
000008CC                          1423  OPPOSITE_bit15    * A7
000008CC  1E3C 0000               1424      MOVE.B    #%000, D7    * REGISTER
000008D0                          1425      
000008D0  1C3C 0000               1426      MOVE.B    #%000, D6    * MODE
000008D4                          1427  
000008D4  4EB9 00001266           1428      JSR        PRINT_EA
000008DA                          1429  
000008DA  4E75                    1430      RTS    
000008DC                          1431  
000008DC                          1432  
000008DC                          1433  
000008DC                          1434  
000008DC                          1435  
000008DC                          1436  LOOP_MOVEM
000008DC                          1437          
000008DC  0903                    1438      BTST        D4, D3     * BIT TEST
000008DE                          1439  
000008DE  6600 0020               1440      BNE         IS_USED_FIRST
000008E2                          1441  
000008E2  5304                    1442      SUB.B       #1, D4
000008E4                          1443      
000008E4                          1444  CHECK
000008E4  B83C 0000               1445      CMP.B       #0,  D4
000008E8                          1446  
000008E8  6700 F72A               1447      BEQ         PARSE_MEMORY
000008EC                          1448  
000008EC  60EE                    1449      BRA         LOOP_MOVEM
000008EE                          1450      
000008EE                          1451  LOOP_MOVEM_SECOND               * FOR ALL REGISTERS PRINTED AFTER THE FIRST
000008EE  0903                    1452      BTST        D4, D3     * BIT TEST
000008F0                          1453  
000008F0  6600 0018               1454      BNE         IS_USED
000008F4                          1455  
000008F4  5304                    1456      SUB.B       #1, D4
000008F6                          1457      
000008F6                          1458  CHECK_SECOND
000008F6  B83C 0000               1459      CMP.B       #0,  D4
000008FA                          1460  
000008FA  6700 F718               1461      BEQ         PARSE_MEMORY
000008FE                          1462  
000008FE  60EE                    1463      BRA         LOOP_MOVEM_SECOND
00000900                          1464  
00000900                          1465  IS_USED_FIRST
00000900  4EB9 00000920           1466      JSR         PRINT_REGISTER_MOVEM
00000906                          1467  
00000906  5304                    1468      SUB.B       #1, D4
00000908                          1469  
00000908  60EC                    1470      BRA         CHECK_SECOND
0000090A                          1471  
0000090A                          1472  
0000090A                          1473  IS_USED
Line 1474 ERROR: Undefined symbol
0000090A  43F9 004DBB8E           1474      LEA         SLASH, A1
00000910                          1475  
00000910  103C 000E               1476      MOVE.B      #14, D0
00000914                          1477  
00000914  4E4F                    1478      TRAP #15
00000916                          1479      
00000916  4EB9 00000920           1480      JSR         PRINT_REGISTER_MOVEM
0000091C                          1481  
0000091C  5304                    1482      SUB.B       #1, D4
0000091E                          1483  
0000091E  60D6                    1484      BRA         CHECK_SECOND
00000920                          1485  
00000920                          1486  
00000920                          1487  
00000920                          1488  
00000920                          1489  
00000920                          1490  PRINT_REGISTER_MOVEM
00000920  41F9 00000932           1491      LEA         jmp_table_MOVEM, A0
00000926  4242                    1492      CLR         D2
00000928  143C 0006               1493      MOVE.B      #6, D2
0000092C  C4C4                    1494      MULU        D4, D2                           
0000092E  4EF0 2000               1495      JMP         0(A0,D2)   *Jump indirect with index
00000932                          1496                      
00000932                          1497  jmp_table_MOVEM      
00000932  4EF9 00000992           1498      JMP         bit0
00000938  4EF9 000009A2           1499                 JMP         bit1
0000093E  4EF9 000009B0           1500                 JMP         bit2
00000944  4EF9 000009C0           1501                 JMP         bit3
0000094A  4EF9 000009D0           1502                 JMP         bit4
00000950  4EF9 000009E0           1503                 JMP         bit5
00000956  4EF9 000009F0           1504                 JMP         bit6
0000095C  4EF9 00000A00           1505                 JMP         bit7
00000962  4EF9 00000A10           1506                 JMP         bit8
00000968  4EF9 00000A20           1507                 JMP         bit9
0000096E  4EF9 00000A30           1508                 JMP         bit10
00000974  4EF9 00000A40           1509                 JMP         bit11
0000097A  4EF9 00000A50           1510                 JMP         bit12
00000980  4EF9 00000A60           1511                 JMP         bit13
00000986  4EF9 00000A70           1512                 JMP         bit14
0000098C  4EF9 00000A80           1513                 JMP         bit15
00000992                          1514          
00000992                          1515   
00000992                          1516   
00000992                          1517   
00000992                          1518  bit0    * D0
00000992  1E3C 0000               1519      MOVE.B    #%000, D7    * REGISTER
00000996                          1520      
00000996  1C3C 0000               1521      MOVE.B    #%000, D6    * MODE
0000099A                          1522  
0000099A  4EB9 00001266           1523      JSR        PRINT_EA
000009A0                          1524  
000009A0  4E75                    1525      RTS    
000009A2                          1526  
000009A2                          1527  bit1    * D1
000009A2  1E3C 0001               1528      MOVE.B    #%001, D7    * REGISTER
000009A6                          1529      
000009A6  1C3C 0000               1530      MOVE.B    #%000, D6    * MODE
000009AA                          1531  
000009AA  4EB9 00001266           1532      JSR        PRINT_EA
000009B0                          1533  
000009B0                          1534  RTS    
000009B0                          1535  
000009B0                          1536  bit2    * D2
000009B0  1E3C 0002               1537      MOVE.B    #%010, D7    * REGISTER
000009B4                          1538      
000009B4  1C3C 0000               1539      MOVE.B    #%000, D6    * MODE
000009B8                          1540  
000009B8  4EB9 00001266           1541      JSR        PRINT_EA    
000009BE                          1542  
000009BE  4E75                    1543      RTS
000009C0                          1544  
000009C0                          1545  bit3    * D3
000009C0  1E3C 0003               1546      MOVE.B    #%011, D7    * REGISTER
000009C4                          1547      
000009C4  1C3C 0000               1548      MOVE.B    #%000, D6    * MODE
000009C8                          1549  
000009C8  4EB9 00001266           1550      JSR        PRINT_EA
000009CE                          1551  
000009CE  4E75                    1552      RTS    
000009D0                          1553  
000009D0                          1554  bit4    * D4
000009D0  1E3C 0007               1555      MOVE.B    #%111, D7    * REGISTER
000009D4                          1556  
000009D4  1C3C 0000               1557      MOVE.B    #%000, D6    * MODE
000009D8                          1558  
000009D8  4EB9 00001266           1559      JSR        PRINT_EA
000009DE                          1560  
000009DE  4E75                    1561      RTS    
000009E0                          1562  
000009E0                          1563  
000009E0                          1564  bit5    * D5
000009E0  1E3C 0005               1565      MOVE.B    #%101, D7    * REGISTER
000009E4                          1566      
000009E4  1C3C 0000               1567      MOVE.B    #%000, D6    * MODE
000009E8                          1568  
000009E8  4EB9 00001266           1569      JSR        PRINT_EA
000009EE                          1570  
000009EE  4E75                    1571      RTS    
000009F0                          1572  
000009F0                          1573  bit6    * D6
000009F0  1E3C 0006               1574      MOVE.B    #%110, D7    * REGISTER
000009F4                          1575      
000009F4  1C3C 0000               1576      MOVE.B    #%000, D6    * MODE
000009F8                          1577  
000009F8  4EB9 00001266           1578      JSR        PRINT_EA
000009FE                          1579  
000009FE  4E75                    1580      RTS    
00000A00                          1581  
00000A00                          1582  bit7    * D7
00000A00  1E3C 0007               1583      MOVE.B    #%111, D7    * REGISTER
00000A04                          1584      
00000A04  1C3C 0000               1585      MOVE.B    #%000, D6    * MODE
00000A08                          1586  
00000A08  4EB9 00001266           1587      JSR        PRINT_EA
00000A0E                          1588  
00000A0E  4E75                    1589      RTS    
00000A10                          1590  
00000A10                          1591  bit8    * A0
00000A10  1E3C 0000               1592      MOVE.B    #%000, D7    * REGISTER
00000A14                          1593      
00000A14  1C3C 0001               1594      MOVE.B    #%001, D6    * MODE
00000A18                          1595  
00000A18  4EB9 00001266           1596      JSR        PRINT_EA
00000A1E                          1597  
00000A1E  4E75                    1598      RTS    
00000A20                          1599  
00000A20                          1600  bit9    * A1
00000A20  1E3C 0001               1601      MOVE.B    #%001, D7    * REGISTER
00000A24                          1602      
00000A24  1C3C 0001               1603      MOVE.B    #%001, D6    * MODE
00000A28                          1604  
00000A28  4EB9 00001266           1605      JSR        PRINT_EA
00000A2E                          1606  
00000A2E  4E75                    1607      RTS    
00000A30                          1608  
00000A30                          1609  bit10    * A2
00000A30  1E3C 0002               1610      MOVE.B    #%010, D7    * REGISTER
00000A34                          1611      
00000A34  1C3C 0001               1612      MOVE.B    #%001, D6    * MODE
00000A38                          1613  
00000A38  4EB9 00001266           1614      JSR        PRINT_EA
00000A3E                          1615  
00000A3E  4E75                    1616      RTS    
00000A40                          1617  
00000A40                          1618  
00000A40                          1619  bit11    * A5
00000A40  1E3C 0003               1620      MOVE.B    #%011, D7    * REGISTER
00000A44                          1621      
00000A44  1C3C 0001               1622      MOVE.B    #%001, D6    * MODE
00000A48                          1623  
00000A48  4EB9 00001266           1624      JSR        PRINT_EA
00000A4E                          1625  
00000A4E  4E75                    1626      RTS    
00000A50                          1627  
00000A50                          1628  bit12    * A4
00000A50  1E3C 0004               1629      MOVE.B    #%100, D7    * REGISTER
00000A54                          1630      
00000A54  1C3C 0001               1631      MOVE.B    #%001, D6    * MODE
00000A58                          1632  
00000A58  4EB9 00001266           1633      JSR        PRINT_EA
00000A5E                          1634  
00000A5E  4E75                    1635      RTS    
00000A60                          1636  
00000A60                          1637  
00000A60                          1638  bit13    * A5
00000A60  1E3C 0005               1639      MOVE.B    #%101, D7    * REGISTER
00000A64                          1640      
00000A64  1C3C 0001               1641      MOVE.B    #%001, D6    * MODE
00000A68                          1642  
00000A68  4EB9 00001266           1643      JSR        PRINT_EA
00000A6E                          1644  
00000A6E  4E75                    1645      RTS    
00000A70                          1646  
00000A70                          1647  
00000A70                          1648  bit14     * A6
00000A70  1E3C 0006               1649      MOVE.B    #%110, D7    * REGISTER
00000A74                          1650      
00000A74  1C3C 0001               1651      MOVE.B    #%001, D6    * MODE
00000A78                          1652  
00000A78  4EB9 00001266           1653      JSR        PRINT_EA
00000A7E                          1654  
00000A7E  4E75                    1655      RTS        
00000A80                          1656  
00000A80                          1657  
00000A80                          1658  bit15    * A7
00000A80  1E3C 0007               1659      MOVE.B    #%111, D7    * REGISTER
00000A84                          1660      
00000A84  1C3C 0001               1661      MOVE.B    #%001, D6    * MODE
00000A88                          1662  
00000A88  4EB9 00001266           1663      JSR        PRINT_EA
00000A8E                          1664  
00000A8E  4E75                    1665      RTS    
00000A90                          1666  
00000A90                          1667  DONE_MOVEM_LOOP
00000A90  4E75                    1668      RTS
00000A92                          1669  
00000A92                          1670     * SIMHALT             ; halt simulator
00000A92                          1671      *INCLUDE 'MESSAGE_Data.X68'
00000A92                          1672     * INCLUDE 'JUMPTABLE EA.X68'
00000A92                          1673  
00000A92                          1674  
00000A92                          1675     * END    START        ; last line of source
00000A92                          1676  
00000A92                          1677  
00000A92                          1678  
00000A92                          1679  
00000A92                          1680  
00000A92                          1681  
00000A92                          1682  
00000A92                          1683  
00000A92                          1684  
00000A92                          1685  
00000A92                          1686  
00000A92                          1687  
00000A92                          1688  
00000A92                          1689  
00000A92                          1690  
00000A92                          1691  
00000A92                          1692  
00000A92                          1693  
00000A92                          1694  
00000A92                          1695  
00000A92                          1696  
00000A92                          1697  
00000A92                          1698  
00000A92                          1699  
00000A92                          1700  
00000A92                          1701  
00000A92                          1702  
00000A92                          1703  
00000A92                          1704  
00000A92                          1705  
00000A92                          1706  
00000A92                          1707  
00000A92                          1708  
00000A92                          1709  
00000A92                          1710  
00000A92                          1711  
00000A92                          1712  
00000A92                          1713  -------------------- end include --------------------
00000A92                          1714                  INCLUDE 'MOVEQ.X68'
00000A92                          1715  
00000A92                          1716  MOVEQ 
00000A92                          1717  
00000A92                          1718                   * ADD message
Line 1719 ERROR: Undefined symbol
00000A92  43F9 004DBB8E           1719                   LEA      MOVEQ_MESSAGE,    A1
00000A98  103C 000E               1720                   MOVE.B   #14,            D0
00000A9C  4E4F                    1721                   TRAP #15
00000A9E                          1722                   
00000A9E                          1723                   * print out size L
Line 1724 ERROR: Undefined symbol
00000A9E  43F9 004DBB8E           1724                   LEA      SIZE_L_PRINT,    A1
00000AA4  103C 000E               1725                   MOVE.B   #14,             D0          
00000AA8  4E4F                    1726                   TRAP #15   
00000AAA                          1727                   
00000AAA                          1728                   * print out immediate Data
00000AAA                          1729                   
Line 1730 ERROR: Undefined symbol
00000AAA  43F9 004DBB8E           1730                  LEA     POUND_SIGN, A1
00000AB0                          1731              
00000AB0  103C 000E               1732                  MOVE.B  #14, D0
00000AB4                          1733              
00000AB4  4E4F                    1734                  TRAP #15
00000AB6                          1735              
Line 1736 ERROR: Undefined symbol
00000AB6  43F9 004DBB8E           1736                  LEA     HEX_SIGN, A1
00000ABC                          1737              
00000ABC  4E4F                    1738                  TRAP #15
00000ABE                          1739  
00000ABE                          1740                   
00000ABE  4280                    1741                  CLR.L       D0              *Zero it
00000AC0                          1742  
Line 1743 ERROR: Undefined symbol
00000AC0  303C BB8E               1743                  MOVE.W      #example,D0     *We'll play with it here
00000AC4                          1744                 
00000AC4  123C 0008               1745                  MOVE.B      #8, D1
00000AC8                          1746                 
00000AC8  E368                    1747                  LSL.W       D1, D0
00000ACA                          1748  
00000ACA  123C 0008               1749                  MOVE.B      #8,D1       *Shift 12 bits to the right  
00000ACE                          1750  
00000ACE  E268                    1751                  LSR.W       D1,D0           *Move the bits
00000AD0                          1752  
00000AD0  4285                    1753                  CLR.L D5
00000AD2                          1754                 
00000AD2  3A00                    1755                  MOVE.W D0, D5      
00000AD4                          1756          
00000AD4  4EB9 000011C8           1757                  JSR         HEX_TO_ASCII
00000ADA                          1758  
00000ADA                          1759                   
00000ADA                          1760                  * for the first Dn 
00000ADA  4286                    1761                  CLR.L D6
00000ADC  4EB9 00000F94           1762                  JSR     GET_Data_Register
00000AE2  1C3C 0000               1763                  MOVE.B  #%000, D6 * for mode
00000AE6                          1764                   
00000AE6  4EB9 00001266           1765                  JSR     PRINT_EA *by using jmp table
00000AEC                          1766                   
00000AEC                          1767          
00000AEC                          1768  
00000AEC                          1769  
00000AEC                          1770  
00000AEC                          1771  
00000AEC                          1772  
00000AEC                          1773  
00000AEC                          1774  
00000AEC                          1775  
00000AEC                          1776  
00000AEC                          1777  
00000AEC                          1778  -------------------- end include --------------------
00000AEC                          1779                  INCLUDE 'DAMIAN_OP_CODE.X68'
00000AEC  4280                    1780  SHIFTS           CLR.L D0
00000AEE                          1781  
00000AEE  4281                    1782                   CLR.L D1
00000AF0                          1783                   
00000AF0  3015                    1784                   MOVE.W (A5),D0
00000AF2                          1785                   
00000AF2  E948                    1786                   LSL.W #4,D0            *shift out the opcode
00000AF4                          1787                   
00000AF4  123C 000D               1788                   MOVE.B #13,D1          
00000AF8                          1789                   
00000AF8  E268                    1790                   LSR.W D1,D0            *shift out everything, so only three bits after opcode are there
00000AFA                          1791                   
00000AFA  B03C 0001               1792                   CMP.B #1,D0            
00000AFE                          1793                   
00000AFE  6700 000E               1794                   BEQ LSD                *if the bits are 1, it is a logical shift
00000B02                          1795                   
00000B02  B03C 0003               1796                   CMP.B #3,D0
00000B06                          1797                   
00000B06  6700 0080               1798                   BEQ ROD                *if the bits are 3, it is a rotation
00000B0A                          1799                   
00000B0A  6000 00F6               1800                   BRA ASD                *if it is not equal to 1 or 3, it is arithmetic shift
00000B0E                          1801                   
00000B0E                          1802  
00000B0E  4280                    1803  LSD              CLR.L D0               *still need to do checks, since an asd shift could still be a possibility
00000B10                          1804                   
00000B10  4281                    1805                   CLR.L D1
00000B12                          1806                   
00000B12  3015                    1807                   MOVE.W (A5),D0
00000B14                          1808                   
00000B14  E148                    1809                   LSL.W #8,D0
00000B16                          1810                   
00000B16  123C 000E               1811                   MOVE.B #14,D1
00000B1A                          1812                   
00000B1A  E268                    1813                   LSR.W D1,D0
00000B1C                          1814                   
00000B1C  B03C 0003               1815                   CMP.B #3,D0            *need to check the two bits after the direction 
00000B20                          1816                   
00000B20  6600 00E0               1817                   BNE ASD                *if the two bits are not 3, it is an arithmetic shift
00000B24                          1818                   
00000B24  3015                    1819                   MOVE.W (A5), D0
00000B26                          1820                   
00000B26  EF48                    1821                   LSL.W  #7, D0
00000B28                          1822                   
00000B28  123C 000F               1823                   MOVE.B #15, D1
00000B2C                          1824                   
00000B2C  E268                    1825                   LSR.W  D1, D0
00000B2E                          1826                   
00000B2E  B03C 0001               1827                   CMP.B  #1, D0
00000B32                          1828                   
00000B32  6700 0006               1829                   BEQ LSL
00000B36                          1830                   
00000B36  6000 0024               1831                   BRA LSR
00000B3A                          1832                   
00000B3A                          1833  
00000B3A                          1834  LSL
Line 1835 ERROR: Undefined symbol
00000B3A  43F9 004DBB8E           1835                   LEA LSL_MESSAGE, A1    * print message
00000B40                          1836                   
00000B40  103C 000E               1837                   MOVE.B #14, D0
00000B44                          1838                   
00000B44  4E4F                    1839                   TRAP #15
00000B46                          1840              
00000B46  2015                    1841                   MOVE.L (A5), D0
00000B48                          1842                   
00000B48  E148                    1843                   LSL.W #8, D0
00000B4A                          1844                   
00000B4A  123C 000E               1845                   MOVE.B #14, D1
00000B4E                          1846                   
00000B4E  E268                    1847                   LSR.W D1, D0
00000B50                          1848                   
00000B50  B03C 0003               1849                   CMP.B  #%11, D0        * check to see if it is memory and not register shift
00000B54                          1850                   
00000B54  6700 0028               1851                   BEQ LSD_MEMORY
00000B58                          1852                   
00000B58  6000 010C               1853                   BRA PRINTOUT_REGISTER_SHIFTS_EA
00000B5C                          1854  
00000B5C                          1855  LSR              
Line 1856 ERROR: Undefined symbol
00000B5C  43F9 004DBB8E           1856                   LEA LSR_MESSAGE, A1            * print message
00000B62                          1857                   
00000B62  103C 000E               1858                   MOVE.B #14, D0
00000B66                          1859                   
00000B66  4E4F                    1860                   TRAP #15
00000B68                          1861          
00000B68  2015                    1862                   MOVE.L (A5), D0
00000B6A                          1863                   
00000B6A  E148                    1864                   LSL.W #8, D0
00000B6C                          1865                   
00000B6C  123C 000E               1866                   MOVE.B #14, D1
00000B70                          1867                   
00000B70  E268                    1868                   LSR.W D1, D0
00000B72                          1869                   
00000B72  B03C 0003               1870                   CMP.B  #%11, D0            * check to see if memory shift
00000B76                          1871                   
00000B76  6700 0006               1872                   BEQ LSD_MEMORY
00000B7A                          1873                   
00000B7A  6000 00EA               1874                   BRA PRINTOUT_REGISTER_SHIFTS_EA
00000B7E                          1875                   
00000B7E                          1876  LSD_MEMORY
00000B7E  4EB9 00000D0C           1877                   JSR    PRINTOUT_MEMORY_SHIFTS_EA
00000B84                          1878                   
00000B84  6000 F48E               1879                   BRA PARSE_MEMORY
00000B88                          1880              
00000B88                          1881  
00000B88  4280                    1882  ROD              CLR.L D0               *same check as logical shift, since an arithmetic shift could still be possible
00000B8A                          1883                   
00000B8A  4281                    1884                   CLR.L D1
00000B8C                          1885                   
00000B8C  3015                    1886                   MOVE.W (A5),D0
00000B8E                          1887                   
00000B8E  E148                    1888                   LSL.W #8,D0
00000B90                          1889                   
00000B90  123C 000E               1890                   MOVE.B #14,D1
00000B94                          1891                   
00000B94  E268                    1892                   LSR.W D1,D0
00000B96                          1893                   
00000B96  B03C 0003               1894                   CMP.B #3,D0
00000B9A                          1895                   
00000B9A  6600 0066               1896                   BNE ASD
00000B9E                          1897                   
00000B9E  2015                    1898                   MOVE.L (A5), D0
00000BA0                          1899                   
00000BA0  EF48                    1900                   LSL.W  #7, D0
00000BA2                          1901                   
00000BA2  123C 000F               1902                   MOVE.B #15, D1
00000BA6                          1903                   
00000BA6  E268                    1904                   LSR.W  D1, D0
00000BA8                          1905                   
00000BA8  B03C 0001               1906                   CMP.B  #1, D0
00000BAC                          1907                   
00000BAC  6700 0006               1908                   BEQ ROL
00000BB0                          1909                   
00000BB0  6000 0024               1910                   BRA ROR
00000BB4                          1911  
00000BB4                          1912  ROL              
Line 1913 ERROR: Undefined symbol
00000BB4  43F9 004DBB8E           1913                   LEA ROL_MESSAGE, A1
00000BBA                          1914                   
00000BBA  103C 000E               1915                   MOVE.B #14, D0
00000BBE                          1916                   
00000BBE  4E4F                    1917                   TRAP #15
00000BC0                          1918  
00000BC0  2015                    1919                   MOVE.L (A5), D0
00000BC2                          1920                   
00000BC2  E148                    1921                   LSL.W #8, D0
00000BC4                          1922                   
00000BC4  123C 000E               1923                   MOVE.B #14, D1
00000BC8                          1924                   
00000BC8  E268                    1925                   LSR.W D1, D0
00000BCA                          1926                   
00000BCA  B03C 0003               1927                   CMP.B  #%11, D0            * check to see if its memory shift
00000BCE                          1928                   
00000BCE  6700 0028               1929                   BEQ ROD_MEMORY
00000BD2                          1930                   
00000BD2  6000 0092               1931                   BRA PRINTOUT_REGISTER_SHIFTS_EA
00000BD6                          1932  
00000BD6                          1933  ROR       
Line 1934 ERROR: Undefined symbol
00000BD6  43F9 004DBB8E           1934                   LEA ROR_MESSAGE, A1
00000BDC                          1935                   
00000BDC  103C 000E               1936                   MOVE.B #14, D0
00000BE0                          1937                   
00000BE0  4E4F                    1938                   TRAP #15
00000BE2                          1939                   
00000BE2  2015                    1940                   MOVE.L (A5), D0
00000BE4                          1941                   
00000BE4  E148                    1942                   LSL.W #8, D0
00000BE6                          1943                   
00000BE6  123C 000E               1944                   MOVE.B #14, D1
00000BEA                          1945                   
00000BEA  E268                    1946                   LSR.W D1, D0
00000BEC                          1947                   
00000BEC  B03C 0003               1948                   CMP.B  #%11, D0            * check to see if its memory shift
00000BF0                          1949                   
00000BF0  6700 0006               1950                   BEQ ROD_MEMORY
00000BF4                          1951                   
00000BF4  6000 0070               1952                   BRA PRINTOUT_REGISTER_SHIFTS_EA
00000BF8                          1953  
00000BF8                          1954  ROD_MEMORY       
00000BF8  4EB9 00000D0C           1955                   JSR    PRINTOUT_MEMORY_SHIFTS_EA
00000BFE                          1956                   
00000BFE  6000 F414               1957                   BRA PARSE_MEMORY
00000C02                          1958                   
00000C02                          1959                   
00000C02  2015                    1960  ASD              MOVE.L (A5), D0
00000C04                          1961                   
00000C04  EF48                    1962                   LSL.W  #7, D0
00000C06                          1963                   
00000C06  123C 000F               1964                   MOVE.B #15, D1
00000C0A                          1965                   
00000C0A  E268                    1966                   LSR.W  D1, D0
00000C0C                          1967                   
00000C0C  B03C 0001               1968                   CMP.B  #1, D0
00000C10                          1969                   
00000C10  6700 0006               1970                   BEQ ASL
00000C14                          1971                   
00000C14  6000 0024               1972                   BRA ASR
00000C18                          1973                   
00000C18                          1974  ASL
Line 1975 ERROR: Undefined symbol
00000C18  43F9 004DBB8E           1975                   LEA ASL_MESSAGE, A1
00000C1E                          1976                   
00000C1E  103C 000E               1977                   MOVE.B #14, D0
00000C22                          1978                   
00000C22  4E4F                    1979                   TRAP #15
00000C24                          1980                   
00000C24  2015                    1981                   MOVE.L (A5), D0
00000C26                          1982                   
00000C26  E148                    1983                   LSL.W #8, D0
00000C28                          1984                   
00000C28  123C 000E               1985                   MOVE.B #14, D1
00000C2C                          1986                   
00000C2C  E268                    1987                   LSR.W D1, D0
00000C2E                          1988                   
00000C2E  B03C 0003               1989                   CMP.B  #%11, D0            * check to see if its memory shift
00000C32                          1990                   
00000C32  6700 0028               1991                   BEQ ASD_MEMORY
00000C36                          1992                   
00000C36  6000 002E               1993                   BRA PRINTOUT_REGISTER_SHIFTS_EA
00000C3A                          1994                                    
00000C3A                          1995  
00000C3A                          1996  ASR              
Line 1997 ERROR: Undefined symbol
00000C3A  43F9 004DBB8E           1997                   LEA ASR_MESSAGE, A1
00000C40                          1998                   
00000C40  103C 000E               1999                   MOVE.B #14, D0
00000C44                          2000                   
00000C44  4E4F                    2001                   TRAP #15
00000C46                          2002                   
00000C46  2015                    2003                   MOVE.L (A5), D0
00000C48                          2004                   
00000C48  E148                    2005                   LSL.W #8, D0
00000C4A                          2006                   
00000C4A  123C 000E               2007                   MOVE.B #14, D1
00000C4E                          2008                   
00000C4E  E268                    2009                   LSR.W D1, D0
00000C50                          2010                   
00000C50  B03C 0003               2011                   CMP.B  #%11, D0            * check to see if its memory shift
00000C54                          2012                   
00000C54  6700 0006               2013                   BEQ ASD_MEMORY
00000C58                          2014                   
00000C58  6000 000C               2015                   BRA PRINTOUT_REGISTER_SHIFTS_EA
00000C5C                          2016  
00000C5C                          2017  ASD_MEMORY
00000C5C  4EB9 00000D0C           2018                   JSR    PRINTOUT_MEMORY_SHIFTS_EA
00000C62                          2019                   
00000C62  6000 F3B0               2020                   BRA PARSE_MEMORY
00000C66                          2021                   
00000C66                          2022  PRINTOUT_REGISTER_SHIFTS_EA
Line 2023 ERROR: Undefined symbol
00000C66  43F9 004DBB8E           2023                   LEA PERIOD, A1
00000C6C                          2024                   
00000C6C  103C 000E               2025                   MOVE.B #14, D0
00000C70                          2026                   
00000C70  4E4F                    2027                   TRAP #15
00000C72                          2028  
00000C72  2015                    2029                   MOVE.L (A5), D0
00000C74                          2030                   
00000C74  123C 000A               2031                   MOVE.B #10, D1
00000C78                          2032                   
00000C78  E368                    2033                   LSL.W D1, D0
00000C7A                          2034                   
00000C7A  123C 000F               2035                   MOVE.B #15, D1
00000C7E                          2036                   
00000C7E  E268                    2037                   LSR.W D1, D0
00000C80                          2038                   
00000C80  B03C 0001               2039                   CMP.B #1, D0
00000C84                          2040                   
00000C84  6700 004A               2041                   BEQ PRINTOUT_REGISTER
00000C88                          2042                   
00000C88  6000 0002               2043                   BRA PRINTOUT_COUNT
00000C8C                          2044  
00000C8C                          2045                   
00000C8C                          2046  PRINTOUT_COUNT
Line 2047 ERROR: Undefined symbol
00000C8C  43F9 004DBB8E           2047                   LEA POUND_SIGN, A1
00000C92                          2048  
00000C92  103C 000E               2049                   MOVE.B #14, D0
00000C96                          2050  
00000C96  4E4F                    2051                   TRAP #15     
00000C98                          2052                 
00000C98  2015                    2053                   MOVE.L (A5), D0
00000C9A                          2054                   
00000C9A  E948                    2055                   LSL.W #4, D0
00000C9C                          2056                   
00000C9C  123C 000D               2057                   MOVE.B #13, D1
00000CA0                          2058                   
00000CA0  E268                    2059                   LSR.W D1, D0
00000CA2                          2060                   
00000CA2  1200                    2061                   MOVE.B D0, D1
00000CA4                          2062                   
00000CA4  103C 0003               2063                   MOVE.B #3, D0
00000CA8                          2064                   
00000CA8  4E4F                    2065                   TRAP #15                  * print out the amount that the ea is being shifted by
00000CAA                          2066                   
Line 2067 ERROR: Undefined symbol
00000CAA  43F9 004DBB8E           2067                   LEA COMMA, A1
00000CB0                          2068                   
00000CB0  103C 000E               2069                   MOVE.B #14, D0
00000CB4                          2070                   
00000CB4  4E4F                    2071                   TRAP #15
00000CB6                          2072                   
00000CB6  2015                    2073                   MOVE.L (A5), D0
00000CB8                          2074                   
00000CB8  123C 000D               2075                   MOVE.B #13, D1                * to print out the ea that is being shifted
00000CBC                          2076                   
00000CBC  E368                    2077                   LSL.W D1, D0
00000CBE                          2078                   
00000CBE  E268                    2079                   LSR.W D1, D0
00000CC0                          2080                   
00000CC0  1E00                    2081                   MOVE.B D0, D7
00000CC2                          2082                   
00000CC2  1C3C 0000               2083                   MOVE.B #%000, D6              * we know it is a data register
00000CC6                          2084                   
00000CC6  4EB9 00001266           2085                   JSR PRINT_EA
00000CCC                          2086                   
00000CCC  6000 F346               2087                   BRA PARSE_MEMORY
00000CD0                          2088                   
00000CD0                          2089  
00000CD0                          2090  PRINTOUT_REGISTER
00000CD0  2015                    2091                   MOVE.L (A5), D0
00000CD2                          2092                   
00000CD2  E948                    2093                   LSL.W #4, D0
00000CD4                          2094                   
00000CD4  123C 000D               2095                   MOVE.B #13, D1
00000CD8                          2096                   
00000CD8  E268                    2097                   LSR.W D1, D0
00000CDA                          2098                   
00000CDA  1E00                    2099                   MOVE.B D0, D7
00000CDC                          2100                   
00000CDC  1C3C 0000               2101                   MOVE.B #%000, D6
00000CE0                          2102                   
00000CE0  4EB9 00001266           2103                   JSR PRINT_EA                  * to print out the data register
00000CE6                          2104                   
Line 2105 ERROR: Undefined symbol
00000CE6  43F9 004DBB8E           2105                   LEA COMMA, A1
00000CEC                          2106                   
00000CEC  103C 000E               2107                   MOVE.B #14, D0
00000CF0                          2108                   
00000CF0  4E4F                    2109                   TRAP #15
00000CF2                          2110                   
00000CF2  2015                    2111                   MOVE.L (A5), D0
00000CF4                          2112                   
00000CF4  123C 000D               2113                   MOVE.B #13, D1                * to print out the ea that is being shifted
00000CF8                          2114                   
00000CF8  E368                    2115                   LSL.W D1, D0
00000CFA                          2116                   
00000CFA  E268                    2117                   LSR.W D1, D0
00000CFC                          2118                   
00000CFC  1E00                    2119                   MOVE.B D0, D7
00000CFE                          2120                   
00000CFE  1C3C 0000               2121                   MOVE.B #%000, D6              * we know it is a data register
00000D02                          2122                   
00000D02  4EB9 00001266           2123                   JSR PRINT_EA
00000D08                          2124                   
00000D08  6000 F30A               2125                   BRA PARSE_MEMORY
00000D0C                          2126                                   
00000D0C                          2127  
00000D0C                          2128  PRINTOUT_MEMORY_SHIFTS_EA   * gets the mode and register of the memory ea, and prints it out
Line 2129 ERROR: Undefined symbol
00000D0C  43F9 004DBB8E           2129                   LEA PERIOD, A1
00000D12                          2130                   
00000D12  103C 000E               2131                   MOVE.B #14, D0
00000D16                          2132                   
00000D16  4E4F                    2133                   TRAP #15
00000D18                          2134  
00000D18  2015                    2135                   MOVE.L (A5), D0
00000D1A                          2136                   
00000D1A  123C 000A               2137                   MOVE.B #10, D1
00000D1E                          2138                   
00000D1E  E368                    2139                   LSL.W D1, D0
00000D20                          2140                   
00000D20  123C 000D               2141                   MOVE.B #13, D1
00000D24                          2142                   
00000D24  E268                    2143                   LSR.W D1, D0
00000D26                          2144                   
00000D26  1C00                    2145                   MOVE.B D0, D6
00000D28                          2146                   
00000D28  2015                    2147                   MOVE.L (A5), D0
00000D2A                          2148                   
00000D2A  123C 000D               2149                   MOVE.B #13, D1
00000D2E                          2150                   
00000D2E  E368                    2151                   LSL.W D1, D0
00000D30                          2152                   
00000D30  E268                    2153                   LSR.W D1, D0
00000D32                          2154                   
00000D32  1E00                    2155                   MOVE.B D0, D7
00000D34                          2156                   
00000D34  4EB9 00001266           2157                   JSR PRINT_EA
00000D3A                          2158                   
00000D3A  4E75                    2159                   RTS
00000D3C                          2160                  
00000D3C                          2161                
Line 2162 ERROR: Undefined symbol
00000D3C  43F9 004DBB8E           2162  MOVEB            LEA MOVE_MESSAGE, A1   * printing out the opcode and size
00000D42                          2163  
00000D42  4280                    2164                   CLR.L  D0
00000D44                          2165                   
00000D44  103C 000E               2166                   MOVE.B #14, D0
00000D48                          2167                   
00000D48  4E4F                    2168                   TRAP #15
00000D4A                          2169                   
Line 2170 ERROR: Undefined symbol
00000D4A  43F9 004DBB8E           2170                   LEA SIZE_B_PRINT, A1
00000D50                          2171                   
00000D50  4E4F                    2172                   TRAP #15               * done printing opcode and size
00000D52                          2173                   
00000D52  6000 0096               2174                   BRA PRINTOUT_MOVE_EA
00000D56                          2175  
00000D56  4280                    2176  MOVEW            CLR.L D0
00000D58                          2177                   
00000D58  4281                    2178                   CLR.L D1
00000D5A                          2179                   
00000D5A  3015                    2180                   MOVE.W (A5),D0
00000D5C                          2181                   
00000D5C  EF48                    2182                   LSL.W #7,D0
00000D5E                          2183                   
00000D5E  123C 000D               2184                   MOVE.B #13,D1
00000D62                          2185                   
00000D62  E268                    2186                   LSR.W D1,D0
00000D64                          2187                   
00000D64  B03C 0001               2188                   CMP.B #1,D0            *check to see if the mode of the destination is an address register
00000D68                          2189                   
00000D68  6700 004C               2190                   BEQ MOVEAW             *if the destination is an address, it is MOVEA
00000D6C                          2191                   
Line 2192 ERROR: Undefined symbol
00000D6C  43F9 004DBB8E           2192                   LEA MOVE_MESSAGE, A1   * printing out the opcode and size
00000D72                          2193                   
00000D72  4280                    2194                   CLR.L D0
00000D74                          2195                   
00000D74  103C 000E               2196                   MOVE.B #14, D0
00000D78                          2197                   
00000D78  4E4F                    2198                   TRAP #15
00000D7A                          2199                   
Line 2200 ERROR: Undefined symbol
00000D7A  43F9 004DBB8E           2200                   LEA SIZE_W_PRINT, A1
00000D80                          2201                   
00000D80  4E4F                    2202                   TRAP #15               * done printing opcode and size
00000D82                          2203                      
00000D82  6000 0066               2204                   BRA PRINTOUT_MOVE_EA
00000D86                          2205                
00000D86                          2206  
00000D86  4280                    2207  MOVEL            CLR.L D0
00000D88                          2208                   
00000D88  4281                    2209                   CLR.L D1
00000D8A                          2210                   
00000D8A  3015                    2211                   MOVE.W (A5),D0
00000D8C                          2212                   
00000D8C  EF48                    2213                   LSL.W #7,D0
00000D8E                          2214                   
00000D8E  123C 000D               2215                   MOVE.B #13,D1
00000D92                          2216                   
00000D92  E268                    2217                   LSR.W D1,D0
00000D94                          2218                   
00000D94  B03C 0001               2219                   CMP.B #1,D0            *check to see if the mode of the destination is equal to 1
00000D98                          2220                   
00000D98  6700 0036               2221                   BEQ MOVEAL             *if the mode is 1, then it is an address register, and the opcode is MOVEA
00000D9C                          2222                   
Line 2223 ERROR: Undefined symbol
00000D9C  43F9 004DBB8E           2223                   LEA MOVE_MESSAGE, A1   * printing out opcode and size
00000DA2                          2224                   
00000DA2  4280                    2225                   CLR.L D0
00000DA4                          2226                   
00000DA4  103C 000E               2227                   MOVE.B #14, D0
00000DA8                          2228                   
00000DA8  4E4F                    2229                   TRAP #15
00000DAA                          2230                   
Line 2231 ERROR: Undefined symbol
00000DAA  43F9 004DBB8E           2231                   LEA SIZE_L_PRINT, A1
00000DB0                          2232                   
00000DB0  4E4F                    2233                   TRAP #15               * done printing opcode and size
00000DB2                          2234                   
00000DB2  6000 0036               2235                   BRA PRINTOUT_MOVE_EA
00000DB6                          2236                   
00000DB6                          2237                   
Line 2238 ERROR: Undefined symbol
00000DB6  43F9 004DBB8E           2238  MOVEAW           LEA MOVEA_MESSAGE, A1  * start printing out opcode and size
00000DBC                          2239  
00000DBC  4280                    2240                   CLR.L D0
00000DBE                          2241                   
00000DBE  103C 000E               2242                   MOVE.B #14, D0
00000DC2                          2243                   
00000DC2  4E4F                    2244                   TRAP #15
00000DC4                          2245                   
Line 2246 ERROR: Undefined symbol
00000DC4  43F9 004DBB8E           2246                   LEA SIZE_W_PRINT, A1
00000DCA                          2247                   
00000DCA  4E4F                    2248                   TRAP #15               * done printing out opcode and size
00000DCC                          2249                   
00000DCC  6000 001C               2250                   BRA PRINTOUT_MOVE_EA
00000DD0                          2251  
Line 2252 ERROR: Undefined symbol
00000DD0  43F9 004DBB8E           2252  MOVEAL           LEA MOVEA_MESSAGE, A1  * start printing out opcode and size
00000DD6                          2253  
00000DD6  4280                    2254                   CLR.L D0
00000DD8                          2255                   
00000DD8  103C 000E               2256                   MOVE.B #14, D0
00000DDC                          2257                   
00000DDC  4E4F                    2258                   TRAP #15
00000DDE                          2259                   
Line 2260 ERROR: Undefined symbol
00000DDE  43F9 004DBB8E           2260                   LEA SIZE_L_PRINT, A1
00000DE4                          2261                   
00000DE4  4E4F                    2262                   TRAP #15               * done printing out opcode and size
00000DE6                          2263                   
00000DE6  6000 0002               2264                   BRA PRINTOUT_MOVE_EA
00000DEA                          2265  
00000DEA                          2266  PRINTOUT_MOVE_EA
00000DEA  4247                    2267                   CLR    D7 
00000DEC                          2268                   
00000DEC  4246                    2269                   CLR    D6               
00000DEE                          2270                   
00000DEE  3015                    2271                   MOVE.W (A5), D0
00000DF0                          2272                   
00000DF0  123C 000A               2273                   MOVE.B #10, D1
00000DF4                          2274                   
00000DF4  E368                    2275                   LSL.W D1, D0
00000DF6                          2276                   
00000DF6  123C 000D               2277                   MOVE.B #13, D1
00000DFA                          2278                   
00000DFA  E268                    2279                   LSR.W D1, D0
00000DFC                          2280                   
00000DFC  1C00                    2281                   MOVE.B D0, D6          * getting the mode of the second ea
00000DFE                          2282                   
00000DFE  3015                    2283                   MOVE.W (A5), D0
00000E00                          2284                   
00000E00  123C 000D               2285                   MOVE.B #13, D1
00000E04                          2286                   
00000E04  E368                    2287                   LSL.W D1, D0
00000E06                          2288                   
00000E06  E268                    2289                   LSR.W D1, D0
00000E08                          2290                   
00000E08  1E00                    2291                   MOVE.B D0, D7          * getting the register of the second ea
00000E0A                          2292                   
00000E0A  4EB9 00001266           2293                   JSR PRINT_EA
00000E10                          2294                   
Line 2295 ERROR: Undefined symbol
00000E10  43F9 004DBB8E           2295                   LEA COMMA, A1
00000E16                          2296                   
00000E16  103C 000E               2297                   MOVE.B #14, D0
00000E1A                          2298                   
00000E1A  4E4F                    2299                   TRAP #15
00000E1C                          2300                   
00000E1C  3015                    2301                   MOVE.W (A5), D0
00000E1E                          2302                   
00000E1E  E948                    2303                   LSL.W #4, D0
00000E20                          2304                   
00000E20  123C 000D               2305                   MOVE.B #13, D1
00000E24                          2306                   
00000E24  E268                    2307                   LSR.W D1, D0
00000E26                          2308                   
00000E26  1E00                    2309                   MOVE.B D0, D7          * getting the register of the first ea
00000E28                          2310                   
00000E28  3015                    2311                   MOVE.W (A5), D0
00000E2A                          2312                   
00000E2A  EF48                    2313                   LSL.W #7, D0
00000E2C                          2314                   
00000E2C  123C 000D               2315                   MOVE.B #13, D1
00000E30                          2316                   
00000E30  E268                    2317                   LSR.W D1, D0
00000E32                          2318                   
00000E32  1C00                    2319                   MOVE.B D0, D6          * getting the mode of the first ea
00000E34                          2320                   
00000E34  4EB9 00001266           2321                   JSR PRINT_EA
00000E3A                          2322                   
00000E3A  6000 F1D8               2323                   BRA PARSE_MEMORY
00000E3E                          2324  
00000E3E                          2325  
00000E3E                          2326  
00000E3E                          2327  
00000E3E                          2328  
00000E3E                          2329  -------------------- end include --------------------
00000E3E                          2330                  INCLUDE 'ADD_ADDA.X68'
00000E3E                          2331    
00000E3E                          2332  
00000E3E                          2333          
00000E3E                          2334  
00000E3E                          2335                  * INCLUDE 'CMP.X68'
00000E3E                          2336                  * INCLUDE 'SUB.X68'
00000E3E                          2337                  * INCLUDE 'DIVU_OR.X68'
00000E3E                          2338                  * INCLUDE 'MULS_AND.X68'
00000E3E                          2339    
00000E3E                          2340  ADD_ADDA  *at this point we know the first 4 bits are 1101 -> ADD or ADDA -> compare the destination opmode
00000E3E                          2341                   
00000E3E  4EB9 00000F26           2342                   JSR      GET_SIZE_PURPLE
00000E44                          2343                                              
00000E44  BA3C 0003               2344                   CMP.B    #$3, D5        *if D0 holds 3, the opcode is ADDA
00000E48                          2345                   
00000E48  6700 0008               2346                   BEQ      ADDA_CODE
00000E4C                          2347                   
00000E4C  4EF9 00000EBE           2348                   JMP      ADD_CODE
00000E52                          2349                   
00000E52                          2350  ADDA_CODE 
00000E52                          2351                   * ADDA opcode message
Line 2352 ERROR: Undefined symbol
00000E52  43F9 004DBB8E           2352                   LEA ADDA_MESSAGE, A1
00000E58                          2353                   
00000E58  103C 000E               2354                   MOVE.B #14, D0
00000E5C                          2355                   
00000E5C  4E4F                    2356                   TRAP #15
00000E5E                          2357                   
00000E5E  4285                    2358                   CLR.L   D5         * clear for the size since this is not for the size purple
00000E60                          2359                   
00000E60  4280                    2360                   CLR.L D0                *clear D0
00000E62                          2361                   
00000E62  4281                    2362                   CLR.L D1                *clear D1
00000E64                          2363                   
00000E64  3010                    2364                   MOVE.W  (A0),D0     *D0 is the binary value to decode
00000E66                          2365                   
00000E66  0800 0008               2366                   BTST    #8, D0
00000E6A                          2367                   
00000E6A  6700 002E               2368                   BEQ     PRINTOUT_SIZE_W
00000E6E                          2369                   
00000E6E  4EF9 00000EAC           2370                   JMP     PRINTOUT_SIZE_L
00000E74                          2371                   
00000E74                          2372  FINISH_PRINTING_SIZE
00000E74                          2373  
00000E74  4EB9 00000FA6           2374                   JSR     Set_Ea
00000E7A                          2375                   
00000E7A  4EB9 00001266           2376                   JSR     PRINT_EA *by using jmp table
00000E80                          2377                   
00000E80  4EB9 00000F86           2378                   JSR     PRINT_COMMA
00000E86                          2379                   
00000E86                          2380                    * for the first Dn 
00000E86  4EB9 00000F94           2381                   JSR     GET_Data_Register
00000E8C                          2382                   
00000E8C  1C3C 0001               2383                   MOVE.B  #%001, D6 * for mode
00000E90                          2384  
00000E90  4EB9 00001266           2385                   JSR     PRINT_EA *by using jmp table
00000E96                          2386  
00000E96  4EF8 0014               2387                   JMP     PARSE_MEMORY
00000E9A                          2388                   
00000E9A                          2389  PRINTOUT_SIZE_W
00000E9A                          2390                   
00000E9A  3A3C 0001               2391                   MOVE    #%01, D5          
00000E9E                          2392                   
Line 2393 ERROR: Undefined symbol
00000E9E  43F9 004DBB8E           2393                   LEA      SIZE_W_PRINT,    A1
00000EA4                          2394                   
00000EA4  103C 000E               2395                   MOVE.B   #14,             D0
00000EA8                          2396          
00000EA8  4E4F                    2397                   TRAP #15
00000EAA                          2398                   
00000EAA  60C8                    2399                   BRA     FINISH_PRINTING_SIZE
00000EAC                          2400                   
00000EAC                          2401  PRINTOUT_SIZE_L                           
00000EAC  3A3C 0002               2402                   MOVE    #%10, D5          
00000EB0                          2403                   
Line 2404 ERROR: Undefined symbol
00000EB0  43F9 004DBB8E           2404                   LEA      SIZE_L_PRINT,    A1
00000EB6                          2405                   
00000EB6  103C 000E               2406                   MOVE.B   #14,             D0 
00000EBA                          2407         
00000EBA  4E4F                    2408                   TRAP #15
00000EBC                          2409                   
00000EBC  60B6                    2410                   BRA     FINISH_PRINTING_SIZE
00000EBE                          2411  
00000EBE                          2412  ADD_CODE
00000EBE                          2413                   * ADD message
Line 2414 ERROR: Undefined symbol
00000EBE  43F9 004DBB8E           2414                   LEA      ADD_MESSAGE,    A1
00000EC4  103C 000E               2415                   MOVE.B   #14,            D0
00000EC8  4E4F                    2416                   TRAP #15
00000ECA                          2417                   
00000ECA  4EB9 00000F3C           2418                   JSR     PRINTOUT_SIZE_PURPLE
00000ED0                          2419                   
00000ED0                          2420                   * check for dn and ea
00000ED0  4280                    2421                   CLR.L D0                *clear D0
00000ED2                          2422                   
00000ED2  4281                    2423                   CLR.L D1                *clear D1
00000ED4                          2424                   
00000ED4  3015                    2425                   MOVE.W  (A5),D0     *D0 is the binary value to decode
00000ED6                          2426                   
00000ED6  0800 0008               2427                   BTST    #8, D0
00000EDA                          2428                   
00000EDA  6700 0028               2429                   BEQ     ADD_FIRST_EA
00000EDE                          2430                   
00000EDE                          2431                   * for the first Dn 
00000EDE  4EB9 00000F94           2432                   JSR     GET_Data_Register
00000EE4                          2433                   
00000EE4  1C3C 0000               2434                   MOVE.B  #%000, D6 * for mode
00000EE8                          2435                   
00000EE8  4EB9 00001266           2436                   JSR     PRINT_EA *by using jmp table
00000EEE                          2437                   
00000EEE  4EB9 00000F86           2438                   JSR     PRINT_COMMA
00000EF4                          2439                   
00000EF4  4EB9 00000FA6           2440                   JSR     Set_Ea
00000EFA                          2441                   
00000EFA  4EB9 00001266           2442                   JSR     PRINT_EA *by using jmp table
00000F00                          2443                   
00000F00  4EF8 0014               2444                   JMP     PARSE_MEMORY
00000F04                          2445                   
00000F04                          2446  ADD_FIRST_EA
00000F04  4EB9 00000FA6           2447                   JSR     Set_Ea
00000F0A                          2448                   
00000F0A  4EB9 00001266           2449                   JSR     PRINT_EA *by using jmp table
00000F10                          2450                   
00000F10  4EB9 00000F86           2451                   JSR     PRINT_COMMA
00000F16                          2452                   
00000F16                          2453                    * for the first Dn 
00000F16  4EB9 00000F94           2454                   JSR     GET_Data_Register
00000F1C                          2455                   
00000F1C  1C3C 0000               2456                   MOVE.B  #%000, D6 * for mode
00000F20                          2457  
00000F20  4EB9 00001266           2458                   JSR     PRINT_EA *by using jmp table
00000F26                          2459                   
00000F26                          2460                   
00000F26                          2461  GET_SIZE_PURPLE * get the op-code 
00000F26                          2462  
00000F26  4280                    2463                   CLR.L D0                *clear D0
00000F28                          2464                   
00000F28  4281                    2465                   CLR.L D1                *clear D1
00000F2A                          2466                   
00000F2A  3015                    2467                   MOVE.W  (A5),D0     *D0 is the binary value to decode
00000F2C                          2468  
00000F2C  123C 0008               2469                   MOVE.B  #8,D1           *8 bits is the number of times to shift to the left to remove opcode & register #
00000F30                          2470  
00000F30  E368                    2471                   LSL.W   D1,D0           *Shift the bits 8 times -> D0 now removes the opcode & reg#
00000F32                          2472                   
00000F32  123C 000E               2473                   MOVE.B  #14,D1          *14 bits is the number of times to shift to hold the mode number
00000F36                          2474  
00000F36  E268                    2475                   LSR.W   D1,D0           *Shift the bits 14 times -> D0 now holds the mode number
00000F38                          2476                   
00000F38  1A00                    2477                   MOVE.B  D0, D5          *push the size to the Data register 5 for the future use
00000F3A                          2478                   
00000F3A  4E75                    2479                   RTS 
00000F3C                          2480  
00000F3C                          2481  PRINTOUT_SIZE_PURPLE * get the size for ADDI, CLR, ADDQ, OR, SUB, CMP, AND, ADD
00000F3C                          2482                       
00000F3C  BA7C 0000               2483                   CMP    #%00, D5          
00000F40                          2484                   
00000F40  6700 0014               2485                   BEQ    PRINT_B
00000F44                          2486                   
00000F44  BA7C 0001               2487                   CMP    #%01, D5          
00000F48                          2488                   
00000F48  6700 001C               2489                   BEQ    PRINT_W
00000F4C                          2490                   
00000F4C  BA7C 0002               2491                   CMP    #%10, D5          
00000F50                          2492                   
00000F50  6700 0024               2493                   BEQ    PRINT_L
00000F54                          2494                   
00000F54                          2495  DONE_PRINTING
00000F54  4E75                    2496                   RTS 
00000F56                          2497                   
00000F56                          2498  PRINT_B          
Line 2499 ERROR: Undefined symbol
00000F56  43F9 004DBB8E           2499                   LEA      SIZE_B_PRINT,    A1
00000F5C  103C 000E               2500                   MOVE.B   #14,            D0          
00000F60  4E4F                    2501                   TRAP #15
00000F62                          2502  
00000F62  4EF8 0F54               2503                   JMP      DONE_PRINTING
00000F66                          2504                   
00000F66                          2505  PRINT_W     
Line 2506 ERROR: Undefined symbol
00000F66  43F9 004DBB8E           2506                   LEA      SIZE_W_PRINT,    A1
00000F6C  103C 000E               2507                   MOVE.B   #14,             D0          
00000F70  4E4F                    2508                   TRAP #15
00000F72                          2509  
00000F72  4EF8 0F54               2510                   JMP      DONE_PRINTING
00000F76                          2511  
00000F76                          2512  
00000F76                          2513  PRINT_L          
Line 2514 ERROR: Undefined symbol
00000F76  43F9 004DBB8E           2514                   LEA      SIZE_L_PRINT,    A1
00000F7C  103C 000E               2515                   MOVE.B   #14,             D0          
00000F80  4E4F                    2516                   TRAP #15   
00000F82                          2517                      
00000F82  4EF8 0F54               2518                   JMP    DONE_PRINTING
00000F86                          2519                   
00000F86                          2520  PRINT_COMMA
00000F86                          2521  
Line 2522 ERROR: Undefined symbol
00000F86  43F9 004DBB8E           2522                   LEA COMMA, A1
00000F8C  103C 000E               2523                   MOVE.B #14, D0
00000F90  4E4F                    2524                   TRAP #15
00000F92                          2525                   
00000F92  4E75                    2526                   RTS
00000F94                          2527                   
00000F94                          2528  GET_Data_Register
00000F94  4280                    2529                   CLR.L D0                *clear D0
00000F96                          2530                   
00000F96  4281                    2531                   CLR.L D1                *clear D1
00000F98                          2532                   
00000F98  3015                    2533                   MOVE.W  (A5),D0     *D0 is the binary value to decode
00000F9A                          2534  
00000F9A  E948                    2535                   LSL.W   #4,D0           *Shift the bits 4 times -> D0 now removes the opcode & reg#
00000F9C                          2536                   
00000F9C  123C 000D               2537                   MOVE.B  #13,D1          *14 bits is the number of times to shift to hold the mode number
00000FA0                          2538  
00000FA0  E268                    2539                   LSR.W   D1,D0           *Shift the bits 13 times -> D0 now holds the size number
00000FA2                          2540  
00000FA2  1E00                    2541                   MOVE.B  D0, D7          *put D0 to data register into D7 for future printing
00000FA4                          2542                   
00000FA4  4E75                    2543                   RTS
00000FA6                          2544                   
00000FA6                          2545  Set_Ea
00000FA6                          2546  
00000FA6                          2547                   * set register
00000FA6  4280                    2548                   CLR.L D0                *clear D0
00000FA8                          2549                   
00000FA8  4281                    2550                   CLR.L D1                *clear D1
00000FAA                          2551                   
00000FAA  3015                    2552                   MOVE.W  (A5),D0     *D0 is the binary value to decode
00000FAC                          2553                 
00000FAC  123C 000D               2554                   MOVE.B  #13,D1           *8 bits is the number of times to shift to the left to remove opcode & register #
00000FB0                          2555  
00000FB0  E368                    2556                   LSL.W   D1,D0           *Shift the bits 8 times -> D0 now removes the opcode & reg#
00000FB2                          2557  
00000FB2  123C 000D               2558                   MOVE.B  #13,D1          *14 bits is the number of times to shift to hold the mode number
00000FB6                          2559  
00000FB6  E268                    2560                   LSR.W   D1,D0           *Shift the bits 13 times -> D0 now holds the size number
00000FB8                          2561  
00000FB8  1E00                    2562                   MOVE.B  D0, D7          *put D0 to data register into D7 for future printing
00000FBA                          2563                   
00000FBA                          2564                   * set mode
00000FBA  4280                    2565                   CLR.L D0                *clear D0
00000FBC                          2566                   
00000FBC  4281                    2567                   CLR.L D1                *clear D1
00000FBE                          2568                   
00000FBE  3015                    2569                   MOVE.W  (A5),D0     *D0 is the binary value to decode
00000FC0                          2570                 
00000FC0  123C 000A               2571                   MOVE.B  #10,D1           *8 bits is the number of times to shift to the left to remove opcode & register #
00000FC4                          2572  
00000FC4  E368                    2573                   LSL.W   D1,D0           *Shift the bits 8 times -> D0 now removes the opcode & reg#
00000FC6                          2574  
00000FC6  123C 000D               2575                   MOVE.B  #13,D1          *14 bits is the number of times to shift to hold the mode number
00000FCA                          2576  
00000FCA  E268                    2577                   LSR.W   D1,D0           *Shift the bits 13 times -> D0 now holds the size number
00000FCC                          2578  
00000FCC  1C00                    2579                   MOVE.B  D0, D6          *put D0 to data register into D7 for future printing
00000FCE                          2580                   
00000FCE  4E75                    2581                   RTS
00000FD0                          2582                   
00000FD0                          2583                  
00000FD0                          2584  
00000FD0                          2585  
00000FD0                          2586  
00000FD0                          2587  
00000FD0                          2588  
00000FD0                          2589  
00000FD0                          2590  
00000FD0                          2591  
00000FD0                          2592  
00000FD0                          2593  
00000FD0                          2594  
00000FD0                          2595  
00000FD0                          2596  
00000FD0                          2597  
00000FD0                          2598  
00000FD0                          2599  
00000FD0                          2600  
00000FD0                          2601  -------------------- end include --------------------
00000FD0                          2602                  INCLUDE 'BCC.X68'
00000FD0                          2603  
00000FD0                          2604  
00000FD0                          2605  
00000FD0                          2606  
00000FD0  41F9 00000FF0           2607                 LEA         jmp_table_bcc,A0    *Index into the table
00000FD6                          2608  
00000FD6  4280                    2609                 CLR.L       D0              *Zero it
00000FD8                          2610  
Line 2611 ERROR: Undefined symbol
00000FD8  303C BB8E               2611                 MOVE.W      #example,D0     *We'll play with it here
00000FDC                          2612                 
00000FDC  123C 0004               2613                 MOVE.B      #4, D1
00000FE0                          2614                 
00000FE0  E368                    2615                 LSL.W       D1, D0
00000FE2                          2616  
00000FE2  123C 000C               2617                 MOVE.B      #12,D1       *Shift 12 bits to the right  
00000FE6                          2618  
00000FE6  E268                    2619                 LSR.W       D1,D0           *Move the bits
00000FE8                          2620             
00000FE8  C0FC 0006               2621                 MULU        #6,D0       *Form offset     
00000FEC                          2622  
00000FEC  4EF0 0000               2623                 JMP         0(A0,D0)   *Jump indirect with index
00000FF0                          2624  
00000FF0                          2625                      
00000FF0  4EF9 00001050           2626  jmp_table_bcc  JMP         NOT_EXIST
00000FF6                          2627  
00000FF6  4EF9 00001050           2628                 JMP         NOT_EXIST
00000FFC                          2629  
00000FFC  4EF9 00001054           2630                 JMP         HI
00001002                          2631  
00001002  4EF9 00001058           2632                 JMP         LS
00001008                          2633  
00001008  4EF9 0000105C           2634                 JMP         CC
0000100E                          2635  
0000100E  4EF9 00001060           2636                 JMP         CS
00001014                          2637  
00001014  4EF9 00001064           2638                 JMP         NE
0000101A                          2639  
0000101A  4EF9 00001068           2640                 JMP         EQ
00001020                          2641  
00001020  4EF9 0000106C           2642                 JMP         VC
00001026                          2643  
00001026  4EF9 00001070           2644                 JMP         VS
0000102C                          2645  
0000102C  4EF9 00001074           2646                 JMP         PL
00001032                          2647                 
00001032  4EF9 00001078           2648                 JMP         MI
00001038                          2649  
00001038  4EF9 0000107C           2650                 JMP         GE
0000103E                          2651  
0000103E  4EF9 00001080           2652                 JMP         LT
00001044                          2653  
00001044  4EF9 00001084           2654                 JMP         GT
0000104A                          2655  
0000104A  4EF9 00001088           2656                 JMP         LE
00001050                          2657  
00001050                          2658          
00001050  4E72 2700               2659  NOT_EXIST      STOP        #$2700
00001054                          2660  
00001054                          2661  
00001054  6000 0036               2662  HI             BRA         PRINT_BHI 
00001058                          2663  
00001058  6000 0042               2664  LS             BRA         PRINT_BLS  
0000105C                          2665  
0000105C  6000 004E               2666  CC             BRA         PRINT_BCC
00001060                          2667  
00001060  6000 005A               2668  CS             BRA         PRINT_BCS 
00001064                          2669  
00001064  6000 0066               2670  NE             BRA         PRINT_BNE 
00001068                          2671  
00001068  6000 0072               2672  EQ             BRA         PRINT_BEQ
0000106C                          2673  
0000106C  6000 007E               2674  VC             BRA         PRINT_BVC
00001070                          2675  
00001070  6000 008A               2676  VS             BRA         PRINT_BVS
00001074                          2677  
00001074  6000 0096               2678  PL             BRA         PRINT_BPL
00001078                          2679  
00001078  6000 00A2               2680  MI             BRA         PRINT_BMI 
0000107C                          2681  
0000107C  6000 00AE               2682  GE             BRA         PRINT_BGE 
00001080                          2683  
00001080  6000 00BA               2684  LT             BRA         PRINT_BLT
00001084                          2685  
00001084  6000 00C6               2686  GT             BRA         PRINT_BGT      
00001088                          2687  
00001088  6000 00D2               2688  LE             BRA         PRINT_BLE 
0000108C                          2689  
0000108C                          2690  
0000108C                          2691  PRINT_BHI      
Line 2692 ERROR: Undefined symbol
0000108C  43F9 004DBB8E           2692                 LEA BHI_MESSAGE, A1
00001092                          2693            
00001092  103C 000E               2694                 MOVE.B #14, D0
00001096                          2695                   
00001096  4E4F                    2696                 TRAP #15    
00001098                          2697                 
00001098  6000 00CE               2698                 BRA DISPLACEMENT
0000109C                          2699                 
0000109C                          2700  PRINT_BLS
Line 2701 ERROR: Undefined symbol
0000109C  43F9 004DBB8E           2701                 LEA BLS_MESSAGE, A1
000010A2                          2702                   
000010A2  103C 000E               2703                 MOVE.B #14, D0
000010A6                          2704                   
000010A6  4E4F                    2705                 TRAP #15
000010A8                          2706                 
000010A8  6000 00BE               2707                 BRA DISPLACEMENT
000010AC                          2708  PRINT_BCC
Line 2709 ERROR: Undefined symbol
000010AC  43F9 004DBB8E           2709                 LEA BCC_MESSAGE, A1
000010B2                          2710                   
000010B2  103C 000E               2711                 MOVE.B #14, D0
000010B6                          2712                   
000010B6  4E4F                    2713                 TRAP #15
000010B8                          2714                 
000010B8  6000 00AE               2715                 BRA DISPLACEMENT
000010BC                          2716  PRINT_BCS
Line 2717 ERROR: Undefined symbol
000010BC  43F9 004DBB8E           2717                 LEA BCS_MESSAGE, A1
000010C2                          2718                   
000010C2  103C 000E               2719                 MOVE.B #14, D0
000010C6                          2720                   
000010C6  4E4F                    2721                 TRAP #15
000010C8                          2722                 
000010C8  6000 009E               2723                 BRA DISPLACEMENT
000010CC                          2724  PRINT_BNE
Line 2725 ERROR: Undefined symbol
000010CC  43F9 004DBB8E           2725                 LEA BNE_MESSAGE, A1
000010D2                          2726                   
000010D2  103C 000E               2727                 MOVE.B #14, D0
000010D6                          2728                   
000010D6  4E4F                    2729                 TRAP #15
000010D8                          2730                 
000010D8  6000 008E               2731                 BRA DISPLACEMENT
000010DC                          2732  PRINT_BEQ
Line 2733 ERROR: Undefined symbol
000010DC  43F9 004DBB8E           2733                 LEA BEQ_MESSAGE, A1
000010E2                          2734                   
000010E2  103C 000E               2735                 MOVE.B #14, D0
000010E6                          2736                   
000010E6  4E4F                    2737                 TRAP #15
000010E8                          2738                 
000010E8  6000 007E               2739                 BRA DISPLACEMENT
000010EC                          2740  PRINT_BVC
Line 2741 ERROR: Undefined symbol
000010EC  43F9 004DBB8E           2741                 LEA BVC_MESSAGE, A1
000010F2                          2742                   
000010F2  103C 000E               2743                 MOVE.B #14, D0
000010F6                          2744                   
000010F6  4E4F                    2745                 TRAP #15     
000010F8                          2746                 
000010F8  6000 006E               2747                 BRA DISPLACEMENT
000010FC                          2748  PRINT_BVS
Line 2749 ERROR: Undefined symbol
000010FC  43F9 004DBB8E           2749                 LEA BVS_MESSAGE, A1
00001102                          2750                   
00001102  103C 000E               2751                 MOVE.B #14, D0
00001106                          2752                   
00001106  4E4F                    2753                 TRAP #15
00001108                          2754                 
00001108  6000 005E               2755                 BRA DISPLACEMENT
0000110C                          2756  PRINT_BPL
Line 2757 ERROR: Undefined symbol
0000110C  43F9 004DBB8E           2757                 LEA BPL_MESSAGE, A1
00001112                          2758                   
00001112  103C 000E               2759                 MOVE.B #14, D0
00001116                          2760                   
00001116  4E4F                    2761                 TRAP #15
00001118                          2762                 
00001118  6000 004E               2763                 BRA DISPLACEMENT
0000111C                          2764  PRINT_BMI
Line 2765 ERROR: Undefined symbol
0000111C  43F9 004DBB8E           2765                 LEA BMI_MESSAGE, A1
00001122                          2766                   
00001122  103C 000E               2767                 MOVE.B #14, D0
00001126                          2768                   
00001126  4E4F                    2769                 TRAP #15
00001128                          2770                 
00001128  6000 003E               2771                 BRA DISPLACEMENT
0000112C                          2772  PRINT_BGE
Line 2773 ERROR: Undefined symbol
0000112C  43F9 004DBB8E           2773                 LEA BGE_MESSAGE, A1
00001132                          2774                   
00001132  103C 000E               2775                 MOVE.B #14, D0
00001136                          2776                   
00001136  4E4F                    2777                 TRAP #15
00001138                          2778                 
00001138  6000 002E               2779                 BRA DISPLACEMENT
0000113C                          2780  PRINT_BLT
Line 2781 ERROR: Undefined symbol
0000113C  43F9 004DBB8E           2781                 LEA BLT_MESSAGE, A1
00001142                          2782                   
00001142  103C 000E               2783                 MOVE.B #14, D0
00001146                          2784                   
00001146  4E4F                    2785                 TRAP #15
00001148                          2786                 
00001148  6000 001E               2787                 BRA DISPLACEMENT
0000114C                          2788  PRINT_BGT
Line 2789 ERROR: Undefined symbol
0000114C  43F9 004DBB8E           2789                 LEA BGT_MESSAGE, A1
00001152                          2790                   
00001152  103C 000E               2791                 MOVE.B #14, D0
00001156                          2792                   
00001156  4E4F                    2793                 TRAP #15
00001158                          2794                 
00001158  6000 000E               2795                 BRA DISPLACEMENT
0000115C                          2796  PRINT_BLE
Line 2797 ERROR: Undefined symbol
0000115C  43F9 004DBB8E           2797                 LEA BLE_MESSAGE, A1
00001162                          2798                   
00001162  103C 000E               2799                 MOVE.B #14, D0
00001166                          2800                   
00001166  4E4F                    2801                 TRAP #15
00001168                          2802                 
Line 2803 ERROR: Undefined symbol
00001168  43F9 004DBB8E           2803  DISPLACEMENT   LEA     POUND_SIGN, A1
0000116E                          2804              
0000116E  103C 000E               2805                 MOVE.B  #14, D0
00001172                          2806              
00001172  4E4F                    2807                 TRAP #15
00001174                          2808              
Line 2809 ERROR: Undefined symbol
00001174  43F9 004DBB8E           2809                 LEA     HEX_SIGN, A1
0000117A                          2810              
0000117A  4E4F                    2811                 TRAP #15
0000117C                          2812  
0000117C  4280                    2813                 CLR.L       D0              *Zero it
0000117E                          2814  
Line 2815 ERROR: Undefined symbol
0000117E  303C BB8E               2815                 MOVE.W      #example,D0     *We'll play with it here
00001182                          2816                 
00001182  123C 0008               2817                 MOVE.B      #8, D1
00001186                          2818                 
00001186  E368                    2819                 LSL.W       D1, D0
00001188                          2820  
00001188  123C 0008               2821                 MOVE.B      #8,D1       *Shift 12 bits to the right  
0000118C                          2822  
0000118C  E268                    2823                 LSR.W       D1,D0           *Move the bits
0000118E                          2824                 
0000118E                          2825                 *chk the D0 for 8, 16, or 32 but displacement
0000118E                          2826                  
0000118E  B03C 0000               2827                 CMP.B  #$00, D0
00001192                          2828  
00001192  6700 0018               2829                 BEQ  a_16_BIT 
00001196                          2830  
00001196  B03C 00FF               2831                 CMP.B #$FF, D0   
0000119A                          2832  
0000119A  6700 001E               2833                 BEQ  a_32_BIT
0000119E                          2834                  
0000119E                          2835                  *else 
0000119E                          2836                  
0000119E  4285                    2837                 CLR.L D5
000011A0                          2838                 
000011A0  3A00                    2839                 MOVE.W D0, D5      
000011A2                          2840          
000011A2  4EB9 000011C8           2841                 JSR  HEX_TO_ASCII
000011A8                          2842                 
000011A8  4EF8 0014               2843                 JMP PARSE_MEMORY
000011AC                          2844                            
000011AC                          2845  a_16_BIT
000011AC  4285                    2846          CLR.L  D5
000011AE                          2847          
000011AE  3A1E                    2848          MOVE.W (A6)+, D5
000011B0                          2849          
000011B0  4EB9 000011C8           2850          JSR  HEX_TO_ASCII
000011B6                          2851          
000011B6  4EF8 0014               2852          JMP PARSE_MEMORY
000011BA                          2853  a_32_BIT
000011BA                          2854  
000011BA  4285                    2855          CLR.L  D5
000011BC                          2856          
000011BC  2A1E                    2857          MOVE.L (A6)+, D5
000011BE                          2858          
000011BE  4EB9 000011C8           2859          JSR  HEX_TO_ASCII
000011C4                          2860          
000011C4  4EF8 0014               2861          JMP PARSE_MEMORY
000011C8                          2862                   
000011C8                          2863  
000011C8                          2864  
000011C8                          2865  
000011C8                          2866  
000011C8                          2867  
000011C8                          2868  
000011C8                          2869  
000011C8                          2870  
000011C8                          2871  
000011C8                          2872  
000011C8                          2873  -------------------- end include --------------------
000011C8                          2874                  INCLUDE 'HEX_TO_ASCII_V1.X68'
000011C8                          2875      *ORG    $5000
000011C8                          2876  
000011C8                          2877  
000011C8                          2878  HEX_TO_ASCII      
000011C8  4283                    2879       CLR.L      D3
000011CA                          2880       
000011CA  BABC 00000000           2881       CMP.L       #0, D5
000011D0                          2882       
000011D0  6700 0086               2883       BEQ         PRINT_ZERO
000011D4                          2884      
000011D4                          2885       *MOVE.L     #$ABCDEF, D5
000011D4                          2886       
000011D4                          2887  LOOP     
000011D4  2C05                    2888       MOVE.L     D5, D6                  * put the data in a register so we can manipulate it
000011D6                          2889       
000011D6  4282                    2890       CLR.L      D2
000011D8                          2891       
000011D8  143C 001C               2892       MOVE.B     #28, D2
000011DC                          2893  
000011DC  E4AE                    2894       LSR.L      D2, D6                  * shift out everything to the right of the last nibble, we print backwards so it shows up the correct order in the console
000011DE                          2895       
000011DE  BC3C 000A               2896       CMP.B      #10, D6
000011E2                          2897       
000011E2  6C00 0006               2898       BGE        LETTER_1                  * determine if a letter or a number
000011E6                          2899       
000011E6  6000 000C               2900       BRA        NUMBER_1
000011EA                          2901       
000011EA                          2902  LETTER_1
000011EA  0606 0037               2903       ADD.B      #55, D6
000011EE                          2904       
000011EE  1206                    2905       MOVE.B     D6, D1                  * add the amount to change to ascii and move to D1 to prepare for printing
000011F0                          2906       
000011F0  6000 000C               2907       BRA        PRINTOUT_NIBBLE
000011F4                          2908  
000011F4                          2909  NUMBER_1     
000011F4  0606 0030               2910       ADD.B      #48, D6
000011F8                          2911       
000011F8  1206                    2912       MOVE.B     D6, D1                  * add the amount to change to ascii and move to D1 to prepare for printing
000011FA                          2913       
000011FA  6000 0002               2914       BRA        PRINTOUT_NIBBLE
000011FE                          2915  
000011FE                          2916  
000011FE                          2917  PRINTOUT_NIBBLE
000011FE  E98D                    2918      LSL.L      #4, D5                   * shift out the nibble you just read from the source
00001200                          2919      
00001200  5203                    2920      ADD.B      #1, D3
00001202                          2921      
00001202  BC3C 0030               2922      CMP.B      #$30, D6
00001206                          2923  
00001206  67CC                    2924      BEQ        LOOP             
00001208                          2925      
00001208  103C 0006               2926      MOVE.B     #6, D0                      * use TRAP task #6 to print a single character from D1  
0000120C                          2927      
0000120C  4E4F                    2928      TRAP #15
0000120E                          2929       
0000120E  B63C 0008               2930      CMP.B      #8, D3                   * compare to the counter to check if you are done
00001212                          2931       
00001212  6700 023E               2932      BEQ        DONE
00001216                          2933          
00001216  6000 0002               2934      BRA LOOP_ZERO                            * continue the loop and print next nibble
0000121A                          2935      
0000121A                          2936      
0000121A                          2937  LOOP_ZERO    
0000121A  2C05                    2938       MOVE.L     D5, D6                  * put the data in a register so we can manipulate it
0000121C                          2939       
0000121C  4282                    2940       CLR.L      D2
0000121E                          2941       
0000121E  143C 001C               2942       MOVE.B     #28, D2
00001222                          2943  
00001222  E4AE                    2944       LSR.L      D2, D6                  * shift out everything to the right of the last nibble, we print backwards so it shows up the correct order in the console
00001224                          2945       
00001224  BC3C 000A               2946       CMP.B      #10, D6
00001228                          2947       
00001228  6C00 0006               2948       BGE        LETTER_1_ZERO                  * determine if a letter or a number
0000122C                          2949       
0000122C  6000 000C               2950       BRA        NUMBER_1_ZERO
00001230                          2951       
00001230                          2952  LETTER_1_ZERO
00001230  0606 0037               2953       ADD.B      #55, D6
00001234                          2954       
00001234  1206                    2955       MOVE.B     D6, D1                  * add the amount to change to ascii and move to D1 to prepare for printing
00001236                          2956       
00001236  6000 000C               2957       BRA        PRINTOUT_NIBBLE_ZERO
0000123A                          2958  
0000123A                          2959  NUMBER_1_ZERO    
0000123A  0606 0030               2960       ADD.B      #48, D6
0000123E                          2961       
0000123E  1206                    2962       MOVE.B     D6, D1                  * add the amount to change to ascii and move to D1 to prepare for printing
00001240                          2963       
00001240  6000 0002               2964       BRA        PRINTOUT_NIBBLE_ZERO
00001244                          2965  
00001244                          2966  
00001244                          2967  PRINTOUT_NIBBLE_ZERO
00001244  E98D                    2968      LSL.L      #4, D5                   * shift out the nibble you just read from the source
00001246                          2969      
00001246  5203                    2970      ADD.B      #1, D3            
00001248                          2971      
00001248  103C 0006               2972      MOVE.B     #6, D0                      * use TRAP task #6 to print a single character from D1  
0000124C                          2973      
0000124C  4E4F                    2974      TRAP #15
0000124E                          2975       
0000124E  B63C 0008               2976      CMP.B      #8, D3                   * compare to the counter to check if you are done
00001252                          2977       
00001252  6700 01FE               2978      BEQ        DONE
00001256                          2979      
00001256  60C2                    2980      BRA LOOP_ZERO                            * continue the loop and print next nibble
00001258                          2981          
00001258                          2982  
00001258                          2983       
00001258                          2984  PRINT_ZERO
00001258  123C 0030               2985      MOVE.B      #$30, D1
0000125C                          2986  
0000125C  103C 0006               2987      MOVE.B      #6, D0  
00001260                          2988  
00001260  4E4F                    2989      TRAP #15 
00001262                          2990  
00001262  6000 01EE               2991      BRA DONE  
00001266                          2992  
00001266                          2993  
00001266                          2994      *SIMHALT             ; halt simulator
00001266                          2995  
00001266                          2996  
00001266                          2997      *END    START       ; last line of source
00001266                          2998  -------------------- end include --------------------
00001266                          2999                  INCLUDE 'JUMPTABLE-EA.X68'
00001266                          3000   *ORG     $400
00001266                          3001  
00001266                          3002  
00001266                          3003  
00001266                          3004  
00001266                          3005  
00001266                          3006                 *MOVE.B       #%00, D5         *SIZE
00001266                          3007                
00001266                          3008                 *MOVE.B       #%111,D6         *MODE
00001266                          3009                 
00001266                          3010                 *MOVE.B       #%100,D7         *REGISTER
00001266                          3011                 
00001266                          3012                 *MOVE.L       #$4000, A5
00001266                          3013  
00001266                          3014                 *MOVE.B       #$0040, (A5)  
00001266                          3015  PRINT_EA 
00001266                          3016                 
00001266  41F9 00001274           3017                 LEA     jmp_table_ea,A0      *Index into the table
0000126C                          3018  
0000126C  CCFC 0006               3019                 MULU        #6,D6            *Form offset     
00001270                          3020  
00001270  4EF0 6000               3021                 JMP         0(A0,D6)         *Jump indirect with index
00001274                          3022   
00001274  4EF9 000012A4           3023  jmp_table_ea   JMP         code000
0000127A                          3024  
0000127A  4EF9 000012A8           3025                 JMP         code001
00001280                          3026  
00001280  4EF9 000012AC           3027                 JMP         code010
00001286                          3028  
00001286  4EF9 000012B0           3029                 JMP         code011
0000128C                          3030  
0000128C  4EF9 000012B4           3031                 JMP         code100
00001292                          3032  
00001292  4EF9 000012B8           3033                 JMP         code101
00001298                          3034  
00001298  4EF9 000012BC           3035                 JMP         code110
0000129E                          3036  
0000129E  4EF9 000012C0           3037                 JMP         code111
000012A4                          3038          
000012A4                          3039  
000012A4                          3040   
000012A4                          3041  
000012A4                          3042  
000012A4                          3043   
000012A4                          3044  
000012A4                          3045   
000012A4                          3046  
000012A4  6000 001E               3047  code000       BRA         DATA_REGISTER
000012A8                          3048  
000012A8  6000 0036               3049  code001       BRA         ADDRESS_REGISTER
000012AC                          3050  
000012AC  6000 004E               3051  code010       BRA         INDIRECT_ADDRESS
000012B0                          3052  
000012B0  6000 0074               3053  code011       BRA         ADDRESS_PI    * post increment
000012B4                          3054  
000012B4  6000 009A               3055  code100       BRA         ADDRESS_PD    * pre decrement
000012B8                          3056  
000012B8  6000 00C0               3057  code101       BRA         ADDRESS_W_DISPLACEMENT
000012BC                          3058  
000012BC  6000 00C0               3059  code110       BRA         ADDRESS_W_INDEX
000012C0                          3060  
000012C0  6000 00C0               3061  code111       BRA         GROUP_111
000012C4                          3062  
000012C4                          3063   
000012C4                          3064  DATA_REGISTER
000012C4                          3065  
Line 3066 ERROR: Undefined symbol
000012C4  43F9 004DBB8E           3066              LEA D_REGISTER, A1
000012CA                          3067              
000012CA  4280                    3068              CLR.L D0
000012CC                          3069              
000012CC  103C 000E               3070              MOVE.B #14, D0
000012D0                          3071              
000012D0  4E4F                    3072              TRAP #15                * print out 'D' for data register
000012D2                          3073              
000012D2  4281                    3074              CLR.L D1
000012D4                          3075              
000012D4  1207                    3076              MOVE.B D7, D1
000012D6                          3077              
000012D6  103C 0003               3078              MOVE.B #3, D0           * print out the number in the register
000012DA                          3079              
000012DA  4E4F                    3080              TRAP #15
000012DC                          3081              
000012DC  6000 0174               3082              BRA DONE
000012E0                          3083              
000012E0                          3084  
000012E0                          3085  ADDRESS_REGISTER
Line 3086 ERROR: Undefined symbol
000012E0  43F9 004DBB8E           3086              LEA A_REGISTER, A1
000012E6                          3087              
000012E6  4280                    3088              CLR.L D0
000012E8                          3089              
000012E8  103C 000E               3090              MOVE.B #14, D0          * print out the 'A' for address register
000012EC                          3091              
000012EC  4E4F                    3092              TRAP #15
000012EE                          3093              
000012EE  4281                    3094              CLR.L D1
000012F0                          3095              
000012F0  1207                    3096              MOVE.B D7, D1
000012F2                          3097              
000012F2  103C 0003               3098              MOVE.B #3, D0
000012F6                          3099              
000012F6  4E4F                    3100              TRAP #15                * print out the value in the data register
000012F8                          3101  
000012F8  6000 0158               3102              BRA DONE
000012FC                          3103              
000012FC                          3104  INDIRECT_ADDRESS
Line 3105 ERROR: Undefined symbol
000012FC  43F9 004DBB8E           3105              LEA IA_START, A1
00001302                          3106              
00001302  4280                    3107              CLR.L D0
00001304                          3108              
00001304  103C 000E               3109              MOVE.B #14, D0          * print out the '(A' for start of indirect address register
00001308                          3110              
00001308  4E4F                    3111              TRAP #15
0000130A                          3112              
0000130A  4281                    3113              CLR.L D1
0000130C                          3114              
0000130C  1207                    3115              MOVE.B D7, D1
0000130E                          3116              
0000130E  103C 0003               3117              MOVE.B #3, D0
00001312                          3118              
00001312  4E4F                    3119              TRAP #15                * print out the value in the data register
00001314                          3120              
Line 3121 ERROR: Undefined symbol
00001314  43F9 004DBB8E           3121              LEA IA_END, A1
0000131A                          3122  
0000131A  4280                    3123              CLR.L D0
0000131C                          3124              
0000131C  103C 000E               3125              MOVE.B #14, D0          * print out the ')' for end of post increment address register
00001320                          3126              
00001320  4E4F                    3127              TRAP #15
00001322                          3128              
00001322  6000 012E               3129              BRA DONE
00001326                          3130  
00001326                          3131  ADDRESS_PI
Line 3132 ERROR: Undefined symbol
00001326  43F9 004DBB8E           3132              LEA A_PI_START, A1
0000132C                          3133              
0000132C  4280                    3134              CLR.L D0
0000132E                          3135              
0000132E  103C 000E               3136              MOVE.B #14, D0          * print out the '(A' for start of post increment address register
00001332                          3137              
00001332  4E4F                    3138              TRAP #15
00001334                          3139              
00001334  4281                    3140              CLR.L D1
00001336                          3141              
00001336  1207                    3142              MOVE.B D7, D1
00001338                          3143              
00001338  103C 0003               3144              MOVE.B #3, D0
0000133C                          3145              
0000133C  4E4F                    3146              TRAP #15                * print out the value in the data register
0000133E                          3147              
Line 3148 ERROR: Undefined symbol
0000133E  43F9 004DBB8E           3148              LEA A_PI_END, A1
00001344                          3149  
00001344  4280                    3150              CLR.L D0
00001346                          3151              
00001346  103C 000E               3152              MOVE.B #14, D0          * print out the ')+' for end of post increment address register
0000134A                          3153     
0000134A  4E4F                    3154              TRAP #15
0000134C                          3155              
0000134C  6000 0104               3156              BRA DONE  
00001350                          3157         
00001350                          3158  ADDRESS_PD
00001350                          3159  
Line 3160 ERROR: Undefined symbol
00001350  43F9 004DBB8E           3160              LEA A_PD_START, A1
00001356                          3161              
00001356  4280                    3162              CLR.L D0
00001358                          3163              
00001358  103C 000E               3164              MOVE.B #14, D0          * print out the '-(A' for start of pre decrement address register
0000135C                          3165              
0000135C  4E4F                    3166              TRAP #15
0000135E                          3167              
0000135E  4281                    3168              CLR.L D1
00001360                          3169              
00001360  1207                    3170              MOVE.B D7, D1
00001362                          3171              
00001362  103C 0003               3172              MOVE.B #3, D0
00001366                          3173              
00001366  4E4F                    3174              TRAP #15                * print out the value in the data register
00001368                          3175              
Line 3176 ERROR: Undefined symbol
00001368  43F9 004DBB8E           3176              LEA A_PD_END, A1
0000136E                          3177  
0000136E  4280                    3178              CLR.L D0
00001370                          3179              
00001370  103C 000E               3180              MOVE.B #14, D0          * print out the ')-' for end of pre decrement
00001374                          3181  
00001374  4E4F                    3182              TRAP #15
00001376                          3183              
00001376  6000 00DA               3184              BRA DONE
0000137A                          3185              
0000137A                          3186  ADDRESS_W_DISPLACEMENT
0000137A  6000 00D6               3187              BRA DONE
0000137E                          3188  
0000137E                          3189  ADDRESS_W_INDEX
0000137E  6000 00D2               3190              BRA DONE
00001382                          3191  
00001382                          3192  GROUP_111
00001382                          3193  
00001382  41F9 00001390           3194                 LEA         jmp_table_ea_111,A0    *Index into the table
00001388                          3195  
00001388  CEFC 0006               3196                 MULU        #6,D7       *Form offset     
0000138C                          3197  
0000138C  4EF0 7000               3198                 JMP         0(A0,D7)   *Jump indirect with index
00001390                          3199                 
00001390                          3200  jmp_table_ea_111   
00001390  4EF9 000013B6           3201                 JMP         reg000
00001396                          3202  
00001396  4EF9 000013BA           3203                 JMP         reg001
0000139C                          3204  
0000139C  4EF9 000013AE           3205                 JMP         reg010
000013A2                          3206  
000013A2  4EF9 000013B2           3207                 JMP         reg011
000013A8                          3208  
000013A8  4EF9 000013BE           3209                 JMP         reg100
000013AE                          3210          
000013AE                          3211  
000013AE  6000 0012               3212  reg010       BRA         PC_W_DISPLACEMENT
000013B2                          3213  
000013B2  6000 0012               3214  reg011       BRA         PC_W_INDEX
000013B6                          3215  
000013B6  6000 0012               3216  reg000       BRA         ABSOLUTE_SHORT
000013BA                          3217  
000013BA  6000 002C               3218  reg001       BRA         ABSOLUTE_LONG
000013BE                          3219  
000013BE  6000 0046               3220  reg100       BRA         IMMEDIATE
000013C2                          3221  
000013C2                          3222  
000013C2                          3223  PC_W_DISPLACEMENT
000013C2  6000 008E               3224              BRA DONE
000013C6                          3225  
000013C6                          3226  PC_W_INDEX
000013C6  6000 008A               3227              BRA DONE
000013CA                          3228  
000013CA                          3229  ABSOLUTE_SHORT
Line 3230 ERROR: Undefined symbol
000013CA  43F9 004DBB8E           3230              LEA         HEX_SIGN, A1
000013D0                          3231              
000013D0  103C 000E               3232              MOVE.B      #14, D0
000013D4                          3233              
000013D4  4E4F                    3234              TRAP #15
000013D6                          3235              
000013D6  4281                    3236              CLR.L       D1
000013D8                          3237              
000013D8  321E                    3238              MOVE.W      (A6)+, D1
000013DA                          3239              
000013DA  103C 000F               3240              MOVE.B      #15, D0
000013DE                          3241              
000013DE  143C 0010               3242              MOVE.B      #16, D2
000013E2                          3243              
000013E2  4E4F                    3244              TRAP #15
000013E4                          3245              
000013E4  6000 006C               3246              BRA DONE  
000013E8                          3247  
000013E8                          3248  
000013E8                          3249  ABSOLUTE_LONG
Line 3250 ERROR: Undefined symbol
000013E8  43F9 004DBB8E           3250              LEA         HEX_SIGN, A1
000013EE                          3251              
000013EE  103C 000E               3252              MOVE.B      #14, D0
000013F2                          3253              
000013F2  4E4F                    3254              TRAP #15
000013F4                          3255              
000013F4  4281                    3256              CLR.L       D1
000013F6                          3257              
000013F6  221E                    3258              MOVE.L      (A6)+, D1
000013F8                          3259              
000013F8  103C 000F               3260              MOVE.B      #15, D0
000013FC                          3261              
000013FC  143C 0010               3262              MOVE.B      #16, D2
00001400                          3263              
00001400  4E4F                    3264              TRAP #15
00001402                          3265                          
00001402  6000 004E               3266              BRA DONE  
00001406                          3267  
00001406                          3268  
00001406                          3269  IMMEDIATE
Line 3270 ERROR: Undefined symbol
00001406  43F9 004DBB8E           3270              LEA     POUND_SIGN, A1
0000140C                          3271              
0000140C  103C 000E               3272              MOVE.B  #14, D0
00001410                          3273              
00001410  4E4F                    3274              TRAP #15
00001412                          3275              
Line 3276 ERROR: Undefined symbol
00001412  43F9 004DBB8E           3276              LEA     HEX_SIGN, A1
00001418                          3277              
00001418  4E4F                    3278              TRAP #15
0000141A                          3279              
0000141A  BA3C 0000               3280              CMP.B   #%00, D5
0000141E                          3281              
0000141E  6700 000E               3282              BEQ     IMMEDIATE_B
00001422                          3283              
00001422  BA3C 0001               3284              CMP.B   #%01, D5
00001426                          3285              
00001426  6700 0012               3286              BEQ     IMMEDIATE_W
0000142A                          3287              
0000142A  6000 001A               3288              BRA     IMMEDIATE_L
0000142E                          3289              
0000142E                          3290  IMMEDIATE_B
0000142E  4285                    3291              CLR.L       D5
00001430                          3292     
00001430  3A1E                    3293              MOVE.W      (A6)+, D5
00001432                          3294              
00001432  4EB8 11C8               3295              JSR         HEX_TO_ASCII
00001436                          3296              
00001436  6000 001A               3297              BRA DONE
0000143A                          3298  
0000143A                          3299  IMMEDIATE_W
0000143A  4285                    3300              CLR.L       D5
0000143C                          3301  
0000143C  3A1E                    3302              MOVE.W      (A6)+, D5
0000143E                          3303              
0000143E  4EB8 11C8               3304              JSR         HEX_TO_ASCII
00001442                          3305              
00001442                          3306              *MOVE.B      #15, D0
00001442                          3307              
00001442                          3308              *MOVE.B      #16, D2
00001442                          3309              
00001442                          3310              *TRAP #15 
00001442                          3311              
00001442  6000 000E               3312              BRA DONE        
00001446                          3313  
00001446                          3314  IMMEDIATE_L 
00001446  4285                    3315              CLR.L       D5
00001448                          3316              
00001448  2A1E                    3317              MOVE.L      (A6)+, D5
0000144A                          3318      
0000144A  4EB8 11C8               3319              JSR         HEX_TO_ASCII
0000144E                          3320              
0000144E  6000 0002               3321              BRA DONE
00001452                          3322              
00001452                          3323  DONE 
00001452  4E75                    3324      RTS
00001454                          3325      
00001454                          3326   * INCLUDE 'MESSAGE_Data.X68'
00001454                          3327   * INCLUDE 'HEX_TO_ASCII_V1.X68'
00001454                          3328       
00001454                          3329          
00001454                          3330  
00001454                          3331  
00001454                          3332  
00001454                          3333  
00001454                          3334  
00001454                          3335  
00001454                          3336  
00001454                          3337  
00001454                          3338  -------------------- end include --------------------
00001454                          3339                  
00001454  4EF8 0014               3340                  JMP      PARSE_MEMORY
00001458                          3341                  
00001458                          3342  PRESS_ENTER_CONTINUE
00001458  4293                    3343                   CLR.L (A3)
Line 3344 ERROR: Undefined symbol
0000145A  267C 004DBB8E           3344                   MOVEA.L  #outputCountCurr, A3  *reset to 0
Line 3345 ERROR: Undefined symbol
00001460  43F9 004DBB8E           3345                   LEA ENTER, A1
00001466  103C 000E               3346                   MOVE.B #14, D0
0000146A  4E4F                    3347                   TRAP #15
0000146C                          3348                   
0000146C                          3349  * get ascill for entering key
0000146C  103C 0005               3350                   MOVE.B #5, D0
00001470  4E4F                    3351                   TRAP #15
00001472                          3352                   
00001472  B23C 000D               3353                   CMP.B #$D, D1
00001476                          3354  
00001476  103C 000B               3355                   MOVE.B #11, D0   *clear display
0000147A  323C FF00               3356                   MOVE.W #$FF00, D1
0000147E  4E4F                    3357                   TRAP #15
00001480                          3358  
00001480  4EF8 0022               3359                   JMP PARSE_MEMORY_FIRST    
00001484                          3360                                 
00001484                          3361  STOP
00001484                          3362  
00001484                          3363  
00001484                          3364  
00001484                          3365  
00001484                          3366  
00001484                          3367  
00001484                          3368  
00001484                          3369  
00001484                          3370  
00001484                          3371  
00001484                          3372  
00001484                          3373  
00001484                          3374  
00001484                          3375  
00001484                          3376  
00001484                          3377  
00001484                          3378  
00001484                          3379  
00001484                          3380  
00001484                          3381  
00001484                          3382  
00001484                          3383  
00001484                          3384  
00001484                          3385  
00001484                          3386  
Line 3387 WARNING: END directive missing, starting address not set

119 errors detected
1 warning generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ABSOLUTE_LONG       13E8
ABSOLUTE_SHORT      13CA
ADDA_CODE           E52
ADDI                FA
ADDI_B_SIZE         16A
ADDI_EA             1CA
ADDI_W_SIZE         19A
ADDQ                2E4
ADDQB               318
ADDQL               344
ADDQW               32E
ADDRESS_PD          1350
ADDRESS_PI          1326
ADDRESS_REGISTER    12E0
ADDRESS_W_DISPLACEMENT  137A
ADDRESS_W_INDEX     137E
ADD_ADDA            E3E
ADD_CODE            EBE
ADD_FIRST_EA        F04
AND_CODE            5E2
AND_FIRST_EA        628
ASD                 C02
ASD_MEMORY          C5C
ASL                 C18
ASR                 C3A
A_16_BIT            11AC
A_32_BIT            11BA
BIT0                992
BIT1                9A2
BIT10               A30
BIT11               A40
BIT12               A50
BIT13               A60
BIT14               A70
BIT15               A80
BIT2                9B0
BIT3                9C0
BIT4                9D0
BIT5                9E0
BIT6                9F0
BIT7                A00
BIT8                A10
BIT9                A20
CC                  105C
CHECK               8E4
CHECK_SECOND        8F6
CLR_OPCODE          3EC
CMP                 214
CODE000             12A4
CODE0000            BA
CODE0001            BE
CODE001             12A8
CODE0010            C2
CODE0011            C6
CODE010             12AC
CODE0100            CA
CODE0101            CE
CODE011             12B0
CODE0110            D2
CODE0111            D6
CODE100             12B4
CODE1000            DA
CODE1001            DE
CODE101             12B8
CODE1010            E2
CODE1011            E6
CODE110             12BC
CODE1100            EA
CODE1101            EE
CODE111             12C0
CODE1110            F2
CODE1111            F6
CONTINUE_PARSE      38
CS                  1060
DATA_REGISTER       12C4
DISPLACEMENT        1168
DIVU_CODE           49A
DIVU_OR             486
DONE                1452
DONE_MOVEM_LOOP     A90
DONE_PRINTING       F54
DR_FIELD            684
EQ                  1068
FINISH_PRINTING_SIZE  E74
GE                  107C
GET_DATA_REGISTER   F94
GET_SIZE_PURPLE     F26
GROUP_0100_CODE     548
GROUP_111           1382
GT                  1084
HEX_TO_ASCII        11C8
HI                  1054
IMMEDIATE           1406
IMMEDIATE_B         142E
IMMEDIATE_L         1446
IMMEDIATE_W         143A
INDIRECT_ADDRESS    12FC
IS_USED             90A
IS_USED_FIRST       900
JMP_TABLE           5A
JMP_TABLE_BCC       FF0
JMP_TABLE_EA        1274
JMP_TABLE_EA_111    1390
JMP_TABLE_MOVEM     932
JSR_OPCODE          3B6
LE                  1088
LETTER_1            11EA
LETTER_1_ZERO       1230
LOOP                11D4
LOOP_MOVEM          8DC
LOOP_MOVEM_SECOND   8EE
LOOP_ZERO           121A
LS                  1058
LSD                 B0E
LSD_MEMORY          B7E
LSL                 B3A
LSR                 B5C
LT                  1080
MEMORY_REGISTER     6DE
MI                  1078
MOVEAL              DD0
MOVEAW              DB6
MOVEB               D3C
MOVEL               D86
MOVEM_OPCODE        64E
MOVEQ               A92
MOVEW               D56
MULS_AND            590
MULS_CODE           5A4
NE                  1064
NEXT_INSTRUCTION    40
NOP_OPCODE          396
NOT_EXIST           1050
NUMBER_1            11F4
NUMBER_1_ZERO       123A
OPPOSITE_BIT0       7DC
OPPOSITE_BIT1       7EC
OPPOSITE_BIT10      87C
OPPOSITE_BIT11      88C
OPPOSITE_BIT12      89C
OPPOSITE_BIT13      8AC
OPPOSITE_BIT14      8BC
OPPOSITE_BIT15      8CC
OPPOSITE_BIT2       7FC
OPPOSITE_BIT3       80C
OPPOSITE_BIT4       81C
OPPOSITE_BIT5       82C
OPPOSITE_BIT6       83C
OPPOSITE_BIT7       84C
OPPOSITE_BIT8       85C
OPPOSITE_BIT9       86C
OPPOSITE_CHECK      72E
OPPOSITE_CHECK_SECOND  740
OPPOSITE_IS_USED    754
OPPOSITE_IS_USED_FIRST  74A
OPPOSITE_JMP_TABLE_MOVEM  77C
OPPOSITE_LOOP       718
OPPOSITE_LOOP_MOVEM  726
OPPOSITE_LOOP_MOVEM_SECOND  738
OPPOSITE_PRINT_REGISTER_MOVEM  76A
OR_CODE             4DC
OR_FIRST_EA         522
PARSE_MEMORY        14
PARSE_MEMORY_FIRST  22
PC_W_DISPLACEMENT   13C2
PC_W_INDEX          13C6
PL                  1074
PRESS_ENTER_CONTINUE  1458
PRINTADDQ           35A
PRINTOUT_COUNT      C8C
PRINTOUT_MEMORY_SHIFTS_EA  D0C
PRINTOUT_MOVE_EA    DEA
PRINTOUT_NIBBLE     11FE
PRINTOUT_NIBBLE_ZERO  1244
PRINTOUT_REGISTER   CD0
PRINTOUT_REGISTER_SHIFTS_EA  C66
PRINTOUT_SIZE_L     EAC
PRINTOUT_SIZE_PURPLE  F3C
PRINTOUT_SIZE_W     E9A
PRINT_ADDRESS       6B8
PRINT_B             F56
PRINT_BCC           10AC
PRINT_BCS           10BC
PRINT_BEQ           10DC
PRINT_BGE           112C
PRINT_BGT           114C
PRINT_BHI           108C
PRINT_BLE           115C
PRINT_BLS           109C
PRINT_BLT           113C
PRINT_BMI           111C
PRINT_BNE           10CC
PRINT_BPL           110C
PRINT_BVC           10EC
PRINT_BVS           10FC
PRINT_COMMA         F86
PRINT_EA            1266
PRINT_L             F76
PRINT_REGISTER_MOVEM  920
PRINT_SIZE          430
PRINT_SIZE_L_MOVEM  678
PRINT_SUB_CMP       290
PRINT_W             F66
PRINT_ZERO          1258
REG000              13B6
REG001              13BA
REG010              13AE
REG011              13B2
REG100              13BE
REGITSET_MEMORY     696
ROD                 B88
ROD_MEMORY          BF8
ROL                 BB4
ROR                 BD6
RTS                 9B0
RTS_OPCODE          3A6
SET_EA              FA6
SHIFTS              AEC
SIZE_B              468
SIZE_L              47C
SIZE_W              472
STOP                1484
SUB                 202
SUB_CMP             226
SUB_CMP_B           24E
SUB_CMP_L           27A
SUB_CMP_W           264
VC                  106C
VS                  1070
