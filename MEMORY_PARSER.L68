00000000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 6/3/2016 3:30:00 AM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : Memory parser
00000000                             3  * Written by : Samuel Williams 
00000000                             4  * Date       : 5/13/2016
00000000                             5  * Description: parse the memory address A5 holds the current 
00000000                             6  *              memory address 
00000000                             7  *-----------------------------------------------------------
00000000                             8  
Line 9 ERROR: Undefined symbol
00000000  2A79 004DBB8E              9                  MOVEA.L   STARTING_ADDR, A5
00000006  2C4D                      10                  MOVEA.L   A5, A6
00000008                            11  
Line 12 ERROR: Undefined symbol
00000008  247C 004DBB8E             12                  MOVEA.L  #outputCountMax, A2
Line 13 ERROR: Undefined symbol
0000000E  267C 004DBB8E             13                  MOVEA.L  #outputCountCurr, A3
00000014                            14  PARSE_MEMORY      
00000014  3A4E                      15                  MOVE.W   A6, A5
00000016  301E                      16                  MOVE.W   (A6)+, D0
00000018  4280                      17                  CLR.L    D0
Line 18 ERROR: Undefined symbol
0000001A  43F9 004DBB8E             18                  LEA      CR_LF, A1
00000020  103C 000E                 19                  MOVE.B   #14, D0
00000024  4E4F                      20                  TRAP #15 
00000026                            21  
00000026                            22  CATCH_BAD_OPCODES               
Line 23 ERROR: Undefined symbol
00000026  BBF9 004DBB8E             23                  CMPA.L   ENDING_ADDR, A5
0000002C  6700 1F5E                 24                  BEQ      ASK_TO_CONTINUE
Line 25 ERROR: Undefined symbol
00000030  B7FC 004DBB8E             25                  CMPA.L   #outputCountMax, A3
00000036  6700 1F28                 26                  BEQ       PRESS_ENTER_CONTINUE
0000003A  528B                      27                  ADDA.L    #1, A3
0000003C  6000 14BA                 28                  BRA      ERROR_HANDLING
00000040                            29          
00000040                            30  PARSE_MEMORY_FIRST    
Line 31 ERROR: Undefined symbol
00000040  BDF9 004DBB8E             31                  CMPA.L   ENDING_ADDR, A6
00000046  6700 1F44                 32                  BEQ      ASK_TO_CONTINUE
0000004A                            33                  
Line 34 ERROR: Undefined symbol
0000004A  B7FC 004DBB8E             34                  CMPA.L   #outputCountMax, A3
00000050  6700 1F0E                 35                  BEQ       PRESS_ENTER_CONTINUE
00000054                            36  CONTINUE_PARSE
00000054  528B                      37                  ADDA.L    #1, A3
00000056                            38                  
00000056                            39  *                MOVE.W   D0, D1   *testing
00000056                            40  *                MOVE.B #3, D0
00000056                            41  *                TRAP #15
00000056                            42  *                LEA CR_LF, A1
00000056                            43  *                MOVE.B #14, D0
00000056                            44  *                TRAP #15          *end testing
00000056                            45                  
00000056  4EF9 0000005C             46                  JMP      NEXT_INSTRUCTION
0000005C                            47                      
0000005C                            48  NEXT_INSTRUCTION
0000005C                            49                  INCLUDE 'JUMPTABLE DAMIAN-V1.X68'
0000005C                            50  CHECK_PARSE_MEMORY
Line 51 ERROR: Undefined symbol
0000005C  43F9 004DBB8E             51                    LEA       HEX_SIGN, A1
00000062  103C 000E                 52                    MOVE.B    #14, D0
00000066  4E4F                      53                    TRAP #15                 
00000068  3A0D                      54                    MOVE.W   A5, D5
0000006A  4EB9 0000126C             55                    JSR        HEX_TO_ASCII
Line 56 ERROR: Undefined symbol
00000070  43F9 004DBB8E             56                    LEA       SPACE, A1
00000076  103C 000E                 57                    MOVE.B    #14, D0
0000007A  4E4F                      58                    TRAP #15
0000007C                            59  
0000007C                            60  
0000007C                            61  
0000007C  41F9 00000094             62                   LEA     jmp_table,A0    *Index into the table
00000082                            63  
00000082  4280                      64                   CLR.L   D0              *Zero it
00000084                            65  
00000084  3015                      66                   MOVE.W  (A5),D0     *We'll play with it here
00000086                            67  
Line 68 ERROR: Undefined symbol
00000086  123C 008E                 68                   MOVE.B  #shift,D1       *Shift 12 bits to the right  
0000008A                            69  
0000008A  E268                      70                   LSR.W   D1,D0           *Move the bits
0000008C                            71  
0000008C                            72  
0000008C                            73  
0000008C                            74  
0000008C                            75   
0000008C                            76  
0000008C  C0FC 0006                 77                 MULU        #6,D0       *Form offset     
00000090                            78  
00000090  4EB0 0000                 79                 JSR         0(A0,D0)   *Jump indirect with index
00000094                            80  
00000094                            81                      
00000094                            82  
00000094  4EF9 000000F4             83  jmp_table      JMP         code0000
0000009A                            84  
0000009A  4EF9 000000F8             85                 JMP         code0001
000000A0                            86  
000000A0  4EF9 000000FC             87                 JMP         code0010
000000A6                            88  
000000A6  4EF9 00000100             89                 JMP         code0011
000000AC                            90  
000000AC  4EF9 00000104             91                 JMP         code0100
000000B2                            92  
000000B2  4EF9 00000108             93                 JMP         code0101
000000B8                            94  
000000B8  4EF9 0000010C             95                 JMP         code0110
000000BE                            96  
000000BE  4EF9 00000110             97                 JMP         code0111
000000C4                            98  
000000C4  4EF9 00000114             99                 JMP         code1000
000000CA                           100  
000000CA  4EF9 00000118            101                 JMP         code1001
000000D0                           102  
000000D0  4EF9 0000011C            103                 JMP         code1010
000000D6                           104  
000000D6  4EF9 00000120            105                 JMP         code1011
000000DC                           106  
000000DC  4EF9 00000124            107                 JMP         code1100
000000E2                           108  
000000E2  4EF9 00000128            109                 JMP         code1101
000000E8                           110  
000000E8  4EF9 0000012C            111                 JMP         code1110
000000EE                           112  
000000EE  4EF9 00000130            113                 JMP         code1111
000000F4                           114  
000000F4                           115          
000000F4                           116  
000000F4                           117   
000000F4                           118  
000000F4                           119  
000000F4                           120   
000000F4                           121  
000000F4                           122   
000000F4                           123  
000000F4  6000 01F0                124  code0000       BRA         ADDI
000000F8                           125  
000000F8  6000 0EB4                126  code0001       BRA         MOVEB
000000FC                           127  
000000FC  6000 0F02                128  code0010       BRA         MOVEL
00000100                           129  
00000100  6000 0ECA                130  code0011       BRA         MOVEW
00000104                           131  
00000104  6000 066A                132  code0100       BRA         GROUP_0100_CODE
00000108                           133  
00000108  6000 02E4                134  code0101       BRA         ADDQ   * Subroutine for ADDQ
0000010C                           135  
0000010C  6000 0FB6                136  code0110       BRA         BCC
00000110                           137  
00000110  6000 0BC4                138  code0111       BRA         MOVEQ
00000114                           139  
00000114  6000 05A4                140  code1000       BRA         DIVU_OR
00000118                           141  
00000118  6000 03DC                142  code1001       BRA         SUB    * Subroutine for SUB
0000011C                           143  
0000011C  4E72 2700                144  code1010       STOP        #$2700
00000120                           145  
00000120                           146   
00000120                           147  
00000120                           148  
00000120                           149  
00000120                           150  
00000120                           151   * another jump table to the 8 possible op-codes at the next level.
00000120                           152  
00000120                           153   
00000120                           154  
00000120  6000 039E                155  code1011       BRA        CMP  * Subroutuine for CMP
00000124                           156  
00000124  6000 06AC                157  code1100       BRA        MULS_AND
00000128                           158  
00000128  6000 000A                159  code1101       BRA         ADD_ADDA       *#$2700
0000012C                           160  
0000012C  6000 0C0E                161  code1110       BRA         SHIFTS
00000130                           162  
00000130  4E72 2700                163  code1111       STOP        #$2700
00000134                           164                   
00000134                           165  
00000134                           166                      
00000134                           167              
00000134                           168  
00000134                           169  
00000134                           170  
00000134                           171  
00000134                           172  
00000134                           173  
00000134                           174  
00000134                           175  
00000134                           176  
00000134                           177  
00000134                           178  
00000134                           179  
00000134                           180  
00000134                           181  
00000134                           182  
00000134                           183  
00000134                           184  
00000134                           185  
00000134                           186  
00000134                           187  
00000134                           188  
00000134                           189  
00000134                           190  
00000134                           191  -------------------- end include --------------------
00000134                           192                  INCLUDE 'ADD_ADDA.X68'
00000134                           193    
00000134                           194  
00000134                           195          
00000134                           196  
00000134                           197                  * INCLUDE 'CMP.X68'
00000134                           198                  * INCLUDE 'SUB.X68'
00000134                           199                  * INCLUDE 'DIVU_OR.X68'
00000134                           200                  * INCLUDE 'MULS_AND.X68'
00000134                           201    
00000134                           202  ADD_ADDA  *at this point we know the first 4 bits are 1101 -> ADD or ADDA -> compare the destination opmode
00000134                           203                   
00000134  4EB9 00000238            204                   JSR      GET_SIZE_PURPLE
0000013A                           205                                              
0000013A  BA3C 0003                206                   CMP.B    #$3, D5        *if D0 holds 3, the opcode is ADDA
0000013E                           207                   
0000013E  6700 0008                208                   BEQ      ADDA_CODE
00000142                           209                   
00000142  4EF9 000001BC            210                   JMP      ADD_CODE
00000148                           211                   
00000148                           212  ADDA_CODE 
00000148                           213                   * ADDA opcode message
Line 214 ERROR: Undefined symbol
00000148  43F9 004DBB8E            214                   LEA ADDA_MESSAGE, A1
0000014E                           215                   
0000014E  103C 000E                216                   MOVE.B #14, D0
00000152                           217                   
00000152  4E4F                     218                   TRAP #15
00000154                           219                   
00000154  4285                     220                   CLR.L D5         * clear for the size since this is not for the size purple
00000156                           221                   
00000156  4280                     222                   CLR.L D0                *clear D0
00000158                           223                   
00000158  4281                     224                   CLR.L D1                *clear D1
0000015A                           225                   
0000015A  3015                     226                   MOVE.W  (A5),D0     *D0 is the binary value to decode
0000015C                           227                   
0000015C  EF48                     228                   LSL.W   #7, D0
0000015E                           229  
0000015E  123C 000D                230                   MOVE.B  #13,D1           *8 bits is the number of times to shift to the
00000162                           231  
00000162  E268                     232                   LSR.W   D1,D0           *Shift the bits 8 times -> D0 now removes the opcode & reg#
00000164                           233                   
00000164  B03C 0003                234                   CMP.B   #%011, D0
00000168                           235                   
00000168  6700 002E                236                   BEQ     PRINTOUT_SIZE_W
0000016C                           237                   
0000016C  4EF9 000001AA            238                   JMP     PRINTOUT_SIZE_L
00000172                           239                   
00000172                           240  FINISH_PRINTING_SIZE
00000172                           241  
00000172  4EB9 000002BC            242                   JSR     Set_Ea
00000178                           243                   
00000178  4EB9 0000130A            244                   JSR     PRINT_EA *by using jmp table
0000017E                           245                   
0000017E  4EB9 0000029A            246                   JSR     PRINT_COMMA
00000184                           247                   
00000184                           248                    * for the first Dn 
00000184  4EB9 000002AA            249                   JSR     GET_Data_Register
0000018A                           250                   
0000018A  1C3C 0001                251                   MOVE.B  #%001, D6 * for mode
0000018E                           252  
0000018E  4EB9 0000130A            253                   JSR     PRINT_EA *by using jmp table
00000194                           254  
00000194  4EF8 0014                255                   JMP     PARSE_MEMORY
00000198                           256                   
00000198                           257  PRINTOUT_SIZE_W
00000198                           258                   
00000198  3A3C 0001                259                   MOVE    #%01, D5          
0000019C                           260                   
Line 261 ERROR: Undefined symbol
0000019C  43F9 004DBB8E            261                   LEA      SIZE_W_PRINT,    A1
000001A2                           262                   
000001A2  103C 000E                263                   MOVE.B   #14,             D0
000001A6                           264          
000001A6  4E4F                     265                   TRAP #15
000001A8                           266                   
000001A8  60C8                     267                   BRA     FINISH_PRINTING_SIZE
000001AA                           268                   
000001AA                           269  PRINTOUT_SIZE_L                           
000001AA  3A3C 0002                270                   MOVE    #%10, D5          
000001AE                           271                   
Line 272 ERROR: Undefined symbol
000001AE  43F9 004DBB8E            272                   LEA      SIZE_L_PRINT,    A1
000001B4                           273                   
000001B4  103C 000E                274                   MOVE.B   #14,             D0 
000001B8                           275         
000001B8  4E4F                     276                   TRAP #15
000001BA                           277                   
000001BA  60B6                     278                   BRA     FINISH_PRINTING_SIZE
000001BC                           279  
000001BC                           280  ADD_CODE
000001BC                           281                   * ADD message
Line 282 ERROR: Undefined symbol
000001BC  43F9 004DBB8E            282                   LEA      ADD_MESSAGE,    A1
000001C2  103C 000E                283                   MOVE.B   #14,            D0
000001C6  4E4F                     284                   TRAP #15
000001C8                           285                   
000001C8  4EB9 00000250            286                   JSR     PRINTOUT_SIZE_PURPLE
000001CE                           287                   
000001CE                           288                   * check for dn and ea
000001CE  4280                     289                   CLR.L D0                *clear D0
000001D0                           290                   
000001D0  4281                     291                   CLR.L D1                *clear D1
000001D2                           292                   
000001D2  3015                     293                   MOVE.W  (A5),D0     *D0 is the binary value to decode
000001D4                           294                   
000001D4                           295                   * check the bit at 7
000001D4  123C 0007                296                   MOVE.B  #7,D1           *8 bits is the number of times to shift to the left to remove opcode & register #
000001D8                           297  
000001D8  E368                     298                   LSL.W   D1,D0           *Shift the bits 8 times -> D0 now removes the opcode & reg#
000001DA                           299                   
000001DA  123C 000F                300                   MOVE.B  #15,D1          *14 bits is the number of times to shift to hold the mode number
000001DE                           301  
000001DE  E268                     302                   LSR.W   D1,D0           *Shift the bits 14 times -> D0 now holds the mode number
000001E0                           303                   
000001E0  B03C 0000                304                   CMP.B   #0, D0
000001E4                           305                   
000001E4                           306                 *  BTST    #8, D0 * if the bit at 8 is 1, the ccr of z is set to 0
000001E4                           307                   
000001E4                           308                   
000001E4  6700 002A                309                   BEQ     ADD_FIRST_EA
000001E8                           310                   
000001E8                           311                   * for the first Dn 
000001E8  4EB9 000002AA            312                   JSR     GET_Data_Register
000001EE                           313                   
000001EE  4286                     314                   CLR.L   D6
000001F0                           315                   
000001F0  1C3C 0000                316                   MOVE.B  #%000, D6 * for mode
000001F4                           317                   
000001F4  4EB9 0000130A            318                   JSR     PRINT_EA *by using jmp table
000001FA                           319                   
000001FA  4EB9 0000029A            320                   JSR     PRINT_COMMA
00000200                           321                   
00000200  4EB9 000002BC            322                   JSR     Set_Ea
00000206                           323                   
00000206  4EB9 0000130A            324                   JSR     PRINT_EA *by using jmp table
0000020C                           325                   
0000020C  4EF8 0014                326                   JMP     PARSE_MEMORY
00000210                           327                   
00000210                           328  ADD_FIRST_EA
00000210  4EB9 000002BC            329                   JSR     Set_Ea
00000216                           330                   
00000216  4EB9 0000130A            331                   JSR     PRINT_EA *by using jmp table
0000021C                           332                   
0000021C  4EB9 0000029A            333                   JSR     PRINT_COMMA
00000222                           334                   
00000222                           335                    * for the first Dn 
00000222  4EB9 000002AA            336                   JSR     GET_Data_Register
00000228                           337                   
00000228  4286                     338                   CLR.L   D6
0000022A                           339                   
0000022A  1C3C 0000                340                   MOVE.B  #%000, D6 * for mode
0000022E                           341  
0000022E  4EB9 0000130A            342                   JSR     PRINT_EA *by using jmp table
00000234                           343                   
00000234  4EF8 0014                344                   JMP     PARSE_MEMORY
00000238                           345                   
00000238                           346  GET_SIZE_PURPLE * get the op-code 
00000238                           347  
00000238  4280                     348                   CLR.L D0                *clear D0
0000023A                           349                   
0000023A  4281                     350                   CLR.L D1                *clear D1
0000023C                           351                   
0000023C  3015                     352                   MOVE.W  (A5),D0     *D0 is the binary value to decode
0000023E                           353  
0000023E  123C 0008                354                   MOVE.B  #8,D1           *8 bits is the number of times to shift to the left to remove opcode & register #
00000242                           355  
00000242  E368                     356                   LSL.W   D1,D0           *Shift the bits 8 times -> D0 now removes the opcode & reg#
00000244                           357                   
00000244  123C 000E                358                   MOVE.B  #14,D1          *14 bits is the number of times to shift to hold the mode number
00000248                           359  
00000248  E268                     360                   LSR.W   D1,D0           *Shift the bits 14 times -> D0 now holds the mode number
0000024A                           361                   
0000024A  4285                     362                   CLR.L   D5
0000024C                           363                   
0000024C  1A00                     364                   MOVE.B  D0, D5          *push the size to the Data register 5 for the future use
0000024E                           365                   
0000024E  4E75                     366                   RTS 
00000250                           367  
00000250                           368  PRINTOUT_SIZE_PURPLE * get the size for ADDI, CLR, ADDQ, OR, SUB, CMP, AND, ADD
00000250                           369                       
00000250  BA7C 0000                370                   CMP    #%00, D5          
00000254                           371                   
00000254  6700 0014                372                   BEQ    PRINT_B
00000258                           373                   
00000258  BA7C 0001                374                   CMP    #%01, D5          
0000025C                           375                   
0000025C  6700 001C                376                   BEQ    PRINT_W
00000260                           377                   
00000260  BA7C 0002                378                   CMP    #%10, D5          
00000264                           379                   
00000264  6700 0024                380                   BEQ    PRINT_L
00000268                           381                   
00000268                           382  DONE_PRINTING
00000268  4E75                     383                   RTS 
0000026A                           384                   
0000026A                           385  PRINT_B          
Line 386 ERROR: Undefined symbol
0000026A  43F9 004DBB8E            386                   LEA      SIZE_B_PRINT,    A1
00000270  103C 000E                387                   MOVE.B   #14,            D0          
00000274  4E4F                     388                   TRAP #15
00000276                           389  
00000276  4EF8 0268                390                   JMP      DONE_PRINTING
0000027A                           391                   
0000027A                           392  PRINT_W     
Line 393 ERROR: Undefined symbol
0000027A  43F9 004DBB8E            393                   LEA      SIZE_W_PRINT,    A1
00000280  103C 000E                394                   MOVE.B   #14,             D0          
00000284  4E4F                     395                   TRAP #15
00000286                           396  
00000286  4EF8 0268                397                   JMP      DONE_PRINTING
0000028A                           398  
0000028A                           399  
0000028A                           400  PRINT_L          
Line 401 ERROR: Undefined symbol
0000028A  43F9 004DBB8E            401                   LEA      SIZE_L_PRINT,    A1
00000290  103C 000E                402                   MOVE.B   #14,             D0          
00000294  4E4F                     403                   TRAP #15   
00000296                           404                      
00000296  4EF8 0268                405                   JMP    DONE_PRINTING
0000029A                           406                   
0000029A                           407  PRINT_COMMA
Line 408 ERROR: Undefined symbol
0000029A  43F9 004DBB8E            408                   LEA COMMA, A1
000002A0  103C 000E                409                   MOVE.B #14, D0
000002A4  4E4F                     410                   TRAP #15
000002A6                           411                   
000002A6  4EF8 0268                412                   JMP    DONE_PRINTING
000002AA                           413                   
000002AA                           414  GET_Data_Register
000002AA  4280                     415                   CLR.L D0                *clear D0
000002AC                           416                   
000002AC  4281                     417                   CLR.L D1                *clear D1
000002AE                           418                   
000002AE  3015                     419                   MOVE.W  (A5),D0     *D0 is the binary value to decode
000002B0                           420  
000002B0  E948                     421                   LSL.W   #4,D0           *Shift the bits 4 times -> D0 now removes the opcode & reg#
000002B2                           422                   
000002B2  123C 000D                423                   MOVE.B  #13,D1          *14 bits is the number of times to shift to hold the mode number
000002B6                           424  
000002B6  E268                     425                   LSR.W   D1,D0           *Shift the bits 13 times -> D0 now holds the size number
000002B8                           426  
000002B8  1E00                     427                   MOVE.B  D0, D7          *put D0 to data register into D7 for future printing
000002BA                           428                   
000002BA  4E75                     429                   RTS
000002BC                           430                   
000002BC                           431  Set_Ea
000002BC                           432  
000002BC                           433                   * set register
000002BC  4280                     434                   CLR.L D0                *clear D0
000002BE                           435                   
000002BE  4281                     436                   CLR.L D1                *clear D1
000002C0                           437                   
000002C0  3015                     438                   MOVE.W  (A5),D0     *D0 is the binary value to decode
000002C2                           439                 
000002C2  123C 000D                440                   MOVE.B  #13,D1           *8 bits is the number of times to shift to the left to remove opcode & register #
000002C6                           441  
000002C6  E368                     442                   LSL.W   D1,D0           *Shift the bits 8 times -> D0 now removes the opcode & reg#
000002C8                           443  
000002C8  E268                     444                   LSR.W   D1,D0           *Shift the bits 13 times -> D0 now holds the size number
000002CA                           445                   
000002CA  4287                     446                   CLR.L D7                *clear D7 
000002CC                           447  
000002CC  1E00                     448                   MOVE.B  D0, D7          *put D0 to data register into D7 for future printing
000002CE                           449                   
000002CE                           450                   * set mode
000002CE  4280                     451                   CLR.L D0                *clear D0
000002D0                           452                   
000002D0  4281                     453                   CLR.L D1                *clear D1
000002D2                           454                   
000002D2  3015                     455                   MOVE.W  (A5),D0     *D0 is the binary value to decode
000002D4                           456                 
000002D4  123C 000A                457                   MOVE.B  #10,D1           *8 bits is the number of times to shift to the left to remove opcode & register #
000002D8                           458  
000002D8  E368                     459                   LSL.W   D1,D0           *Shift the bits 8 times -> D0 now removes the opcode & reg#
000002DA                           460  
000002DA  123C 000D                461                   MOVE.B  #13,D1          *14 bits is the number of times to shift to hold the mode number
000002DE                           462  
000002DE  E268                     463                   LSR.W   D1,D0           *Shift the bits 13 times -> D0 now holds the size number
000002E0                           464                   
000002E0  4286                     465                   CLR.L D6                *clear D6
000002E2                           466  
000002E2  1C00                     467                   MOVE.B  D0, D6          *put D0 to data register into D7 for future printing
000002E4                           468                   
000002E4  4E75                     469                   RTS
000002E6                           470                   
000002E6                           471                  
000002E6                           472  
000002E6                           473  
000002E6                           474  
000002E6                           475  
000002E6                           476  
000002E6                           477  
000002E6                           478  
000002E6                           479  
000002E6                           480  
000002E6                           481  
000002E6                           482  
000002E6                           483  
000002E6                           484  
000002E6                           485  
000002E6                           486  
000002E6                           487  
000002E6                           488  
000002E6                           489  
000002E6                           490  
000002E6                           491  
000002E6                           492  
000002E6                           493  
000002E6                           494  
000002E6                           495  
000002E6                           496  
000002E6                           497  
000002E6                           498  
000002E6                           499  
000002E6                           500  
000002E6                           501  
000002E6                           502  
000002E6                           503  
000002E6                           504  -------------------- end include --------------------
000002E6                           505                  INCLUDE 'ADDI.X68'
000002E6                           506    
000002E6                           507  ADDI           * first check the first 4 bits after the op-code
000002E6  4280                     508                 CLR.L       D0
000002E8                           509  
000002E8  4281                     510                 CLR.L       D1
000002EA                           511                 
000002EA  3015                     512                 MOVE.W      (A5),D0
000002EC                           513                 
000002EC  123C 0008                514                 MOVE.B      #8, D1 * for shifting to the right by 8 bits
000002F0                           515                 
000002F0  E268                     516                 LSR.W       D1, D0
000002F2                           517                 
000002F2  B07C 0006                518                 CMP.W       #6, D0 * checking the first 4 bits 
000002F6                           519                 
Line 520 ERROR: Undefined symbol
000002F6  6600 B896                520                 BNE         ERROR  * go to error 
000002FA                           521                 
000002FA                           522                 * print the op-code 
000002FA  4280                     523                 CLR.L       D0
000002FC                           524  
000002FC  4281                     525                 CLR.L       D1
000002FE                           526                 
Line 527 ERROR: Undefined symbol
000002FE  43F9 004DBB8E            527                 LEA         ADDI_MESSAGE, A1    * NOTE - how do you know this is of size B ????? 
00000304                           528                 
00000304  103C 000E                529                 MOVE.B      #14, D0
00000308                           530                 
00000308  4E4F                     531                 TRAP #15
0000030A                           532                                
0000030A                           533                 * print the size
0000030A  4280                     534                 CLR.L       D0
0000030C                           535  
0000030C  4281                     536                 CLR.L       D1
0000030E                           537                 
0000030E  3015                     538                 MOVE.W      (A5),D0
00000310                           539                
00000310  E148                     540                 LSL.W       #8, D0
00000312                           541  
00000312  123C 000E                542                 MOVE.B      #14, D1 * for shifting to the right by 8 bits
00000316                           543                 
00000316  E268                     544                 LSR.W       D1, D0
00000318                           545                 
00000318                           546                 * D1 holds the size
00000318                           547    *             CLR.L       D1
00000318                           548                 
00000318                           549    *             MOVE.B      D0, D1
00000318                           550                   
00000318  B03C 0000                551                 CMP.B       #%00, D0
0000031C                           552                 
0000031C  6700 0038                553                 BEQ         ADDI_B_SIZE
00000320                           554                 
00000320  B03C 0001                555                 CMP.B       #%01, D0
00000324                           556                 
00000324  6700 0060                557                 BEQ         ADDI_W_SIZE
00000328                           558                 
00000328                           559                 *print size L
Line 560 ERROR: Undefined symbol
00000328  43F9 004DBB8E            560                 LEA         SIZE_L_PRINT, A1     
0000032E                           561                 
0000032E  103C 000E                562                 MOVE.B      #14, D0
00000332                           563                 
00000332  4E4F                     564                 TRAP #15
00000334                           565                 
00000334                           566                * print out pound sign and hex sign
Line 567 ERROR: Undefined symbol
00000334  43F9 004DBB8E            567                 LEA     POUND_SIGN, A1
0000033A                           568              
0000033A  103C 000E                569                 MOVE.B  #14, D0
0000033E                           570              
0000033E  4E4F                     571                 TRAP #15
00000340                           572              
Line 573 ERROR: Undefined symbol
00000340  43F9 004DBB8E            573                 LEA     HEX_SIGN, A1
00000346                           574              
00000346  4E4F                     575                 TRAP #15
00000348                           576                 
00000348  4285                     577                 CLR.L  D5
0000034A                           578          
0000034A  2A1E                     579                 MOVE.L (A6)+, D5 * we mimght change it later
0000034C                           580          
0000034C  4EB9 0000126C            581                 JSR  HEX_TO_ASCII
00000352                           582                 
00000352  6000 0062                583                 BRA         ADDI_EA   
00000356                           584                      
00000356                           585  ADDI_B_SIZE
Line 586 ERROR: Undefined symbol
00000356  43F9 004DBB8E            586                 LEA         SIZE_B_PRINT, A1     
0000035C                           587                 
0000035C  103C 000E                588                 MOVE.B      #14, D0
00000360                           589                 
00000360  4E4F                     590                 TRAP #15
00000362                           591                 
00000362                           592                * print out pound sign and hex sign
Line 593 ERROR: Undefined symbol
00000362  43F9 004DBB8E            593                 LEA     POUND_SIGN, A1
00000368                           594              
00000368  103C 000E                595                 MOVE.B  #14, D0
0000036C                           596              
0000036C  4E4F                     597                 TRAP #15
0000036E                           598              
Line 599 ERROR: Undefined symbol
0000036E  43F9 004DBB8E            599                 LEA     HEX_SIGN, A1
00000374                           600              
00000374  4E4F                     601                 TRAP #15
00000376                           602                 
00000376  4280                     603                 CLR.L D0
00000378                           604  
00000378  301E                     605                 MOVE.W (A6)+, D0 * we mimght change it later
0000037A                           606                 
0000037A  1A00                     607                 MOVE.B D0, D5
0000037C                           608     
0000037C  4EB9 0000126C            609                 JSR  HEX_TO_ASCII
00000382                           610                 
00000382  6000 0032                611                 BRA         ADDI_EA 
00000386                           612                  
00000386                           613  
00000386                           614  ADDI_W_SIZE
Line 615 ERROR: Undefined symbol
00000386  43F9 004DBB8E            615                 LEA         SIZE_W_PRINT, A1     
0000038C                           616                 
0000038C  103C 000E                617                 MOVE.B      #14, D0
00000390                           618                 
00000390  4E4F                     619                 TRAP #15
00000392                           620                 
00000392                           621                 * print out pound sign and hex sign
Line 622 ERROR: Undefined symbol
00000392  43F9 004DBB8E            622                 LEA     POUND_SIGN, A1
00000398                           623              
00000398  103C 000E                624                 MOVE.B  #14, D0
0000039C                           625              
0000039C  4E4F                     626                 TRAP #15
0000039E                           627              
Line 628 ERROR: Undefined symbol
0000039E  43F9 004DBB8E            628                 LEA     HEX_SIGN, A1
000003A4                           629              
000003A4  4E4F                     630                 TRAP #15
000003A6                           631  
000003A6  4285                     632                 CLR.L  D5
000003A8                           633          
000003A8  3A1E                     634                 MOVE.W (A6)+, D5
000003AA                           635          
000003AA  4EB9 0000126C            636                 JSR  HEX_TO_ASCII
000003B0                           637          
000003B0  4EF9 000003B6            638                 JMP  ADDI_EA
000003B6                           639  
000003B6                           640  
000003B6                           641  ADDI_EA      
000003B6  4EB8 029A                642                  JSR     PRINT_COMMA
000003BA                           643                  
000003BA  4280                     644                  CLR.L   D0
000003BC                           645                  
000003BC  4281                     646                  CLR.L   D1
000003BE                           647                  
000003BE                           648                  * set register
000003BE                           649                   
000003BE  3015                     650                   MOVE.W  (A5),D0     *D0 is the binary value to decode
000003C0                           651                 
000003C0  123C 000D                652                   MOVE.B  #13,D1           *8 bits is the number of times to shift to the left to remove opcode & register #
000003C4                           653  
000003C4  E368                     654                   LSL.W   D1,D0           *Shift the bits 8 times -> D0 now removes the opcode & reg#
000003C6                           655  
000003C6  123C 000D                656                   MOVE.B  #13,D1          *14 bits is the number of times to shift to hold the mode number
000003CA                           657  
000003CA  E268                     658                   LSR.W   D1,D0           *Shift the bits 13 times -> D0 now holds the size number
000003CC                           659  
000003CC  1E00                     660                   MOVE.B  D0, D7          *put D0 to data register into D7 for future printing
000003CE                           661                   
000003CE                           662                   * set mode
000003CE  4280                     663                   CLR.L D0                *clear D0
000003D0                           664                   
000003D0  4281                     665                   CLR.L D1                *clear D1
000003D2                           666                   
000003D2  3015                     667                   MOVE.W  (A5),D0     *D0 is the binary value to decode
000003D4                           668                 
000003D4  123C 000A                669                   MOVE.B  #10,D1           *8 bits is the number of times to shift to the left to remove opcode & register #
000003D8                           670  
000003D8  E368                     671                   LSL.W   D1,D0           *Shift the bits 8 times -> D0 now removes the opcode & reg#
000003DA                           672  
000003DA  123C 000D                673                   MOVE.B  #13,D1          *14 bits is the number of times to shift to hold the mode number
000003DE                           674  
000003DE  E268                     675                   LSR.W   D1,D0           *Shift the bits 13 times -> D0 now holds the size number
000003E0                           676                   
000003E0  4286                     677                   CLR.L D6
000003E2                           678  
000003E2  1C00                     679                   MOVE.B  D0, D6          *put D0 to data register into D7 for future printing
000003E4                           680  
000003E4                           681   
000003E4                           682                 * JSR     Set_Ea
000003E4                           683                   
000003E4  4EB9 0000130A            684                  JSR     PRINT_EA *by using jmp table
000003EA                           685                  
000003EA  4EF8 0014                686                  JMP     PARSE_MEMORY
000003EE                           687                  
000003EE                           688                  
000003EE                           689                   
000003EE                           690                   
000003EE                           691  
000003EE                           692  
000003EE                           693                 
000003EE                           694  
000003EE                           695  
000003EE                           696  
000003EE                           697  
000003EE                           698  
000003EE                           699  
000003EE                           700  
000003EE                           701  
000003EE                           702  
000003EE                           703  
000003EE                           704  
000003EE                           705  
000003EE                           706  
000003EE                           707  
000003EE                           708  
000003EE                           709  
000003EE                           710  
000003EE                           711  
000003EE                           712  
000003EE                           713  
000003EE                           714  
000003EE                           715  
000003EE                           716  
000003EE                           717  
000003EE                           718  
000003EE                           719  
000003EE                           720  -------------------- end include --------------------
000003EE                           721                  INCLUDE 'ADDQ.X68'
000003EE                           722  
000003EE                           723  
000003EE                           724  ADDQ
000003EE                           725  
Line 726 ERROR: Undefined symbol
000003EE  43F9 004DBB8E            726      LEA ADDQ_MESSAGE, A1  *print ADDQ
000003F4                           727                   
000003F4  103C 000E                728      MOVE.B #14, D0
000003F8                           729                   
000003F8  4E4F                     730      TRAP #15
000003FA                           731      
000003FA  3015                     732      MOVE.W (A5), D0
000003FC                           733      
000003FC  123C 0008                734      MOVE.B  #8,D1     
00000400                           735  
00000400  E368                     736      LSL.W   D1,D0
00000402                           737                   
00000402  123C 000E                738      MOVE.B  #14,D1
00000406                           739  
00000406  E268                     740      LSR.W   D1,D0  *DO now holds size
00000408                           741                                              
00000408  B03C 0002                742      CMP.B    #$2, D0        *if D0 holds 2, size is L
0000040C                           743      
0000040C  6700 003A                744      BEQ      ADDQL
00000410                           745                   
00000410  B03C 0001                746      CMP.B    #$1, D0        *if D0 holds 1, size is W
00000414                           747                                   
00000414  6700 001C                748      BEQ      ADDQW
00000418                           749  
00000418  6000 0002                750      BRA      ADDQB
0000041C                           751  
0000041C                           752  ADDQB  *Print B
0000041C                           753  
Line 754 ERROR: Undefined symbol
0000041C  43F9 004DBB8E            754      LEA SIZE_B_PRINT, A1  *print B
00000422                           755                   
00000422  103C 000E                756      MOVE.B #14, D0
00000426                           757                   
00000426  4E4F                     758      TRAP #15
00000428                           759      
00000428  1A3C 0000                760      MOVE.B #%00, D5
0000042C                           761      
0000042C  4EF9 0000045E            762      JMP PRINTADDQ
00000432                           763      
00000432                           764  ADDQW  *Print W
00000432                           765  
Line 766 ERROR: Undefined symbol
00000432  43F9 004DBB8E            766      LEA SIZE_W_PRINT, A1  *print W
00000438                           767                   
00000438  103C 000E                768      MOVE.B #14, D0
0000043C                           769                                    
0000043C  4E4F                     770      TRAP #15
0000043E                           771      
0000043E  1A3C 0001                772      MOVE.B #%01, D5
00000442                           773  
00000442  4EF9 0000045E            774      JMP PRINTADDQ
00000448                           775  
00000448                           776  ADDQL   *Print L
00000448                           777  
Line 778 ERROR: Undefined symbol
00000448  43F9 004DBB8E            778      LEA SIZE_L_PRINT, A1  *print L
0000044E                           779                   
0000044E  103C 000E                780      MOVE.B #14, D0
00000452                           781                   
00000452  4E4F                     782      TRAP #15
00000454                           783  
00000454  1A3C 0002                784      MOVE.B #%10, D5
00000458                           785      
00000458  4EF9 0000045E            786      JMP PRINTADDQ
0000045E                           787      
0000045E                           788  PRINTADDQ
0000045E                           789  
Line 790 ERROR: Undefined symbol
0000045E  43F9 004DBB8E            790      LEA POUND_SIGN, A1  *print W
00000464                           791                   
00000464  103C 000E                792      MOVE.B #14, D0
00000468                           793                                    
00000468  4E4F                     794      TRAP #15
0000046A                           795      
0000046A  3015                     796      MOVE.W (A5), D0
0000046C                           797  
0000046C  123C 0004                798      MOVE.B  #4,D1     
00000470                           799  
00000470  E368                     800      LSL.W   D1,D0
00000472                           801                   
00000472  123C 000D                802      MOVE.B  #13,D1
00000476                           803  
00000476  E268                     804      LSR.W   D1,D0  *D0 now holds Dn
00000478                           805      
00000478  4281                     806      CLR.L D1
0000047A                           807                                              
0000047A  3200                     808      MOVE.W D0, D1 *D6 holds Dn   
0000047C                           809  
0000047C  103C 0003                810      MOVE.B #3, D0
00000480                           811                 
00000480  4E4F                     812      TRAP #15
00000482                           813      
Line 814 ERROR: Undefined symbol
00000482  43F9 004DBB8E            814      LEA COMMA, A1  *print W
00000488                           815                   
00000488  103C 000E                816      MOVE.B #14, D0
0000048C                           817                                    
0000048C  4E4F                     818      TRAP #15
0000048E                           819      
0000048E  4286                     820      CLR.L D6
00000490                           821      
00000490  4287                     822      CLR.L D7
00000492                           823      
00000492  3015                     824      MOVE.W (A5), D0
00000494                           825  
00000494  123C 000A                826      MOVE.B  #10,D1     
00000498                           827  
00000498  E368                     828      LSL.W   D1,D0
0000049A                           829                   
0000049A  123C 000D                830      MOVE.B  #13,D1
0000049E                           831  
0000049E  E268                     832      LSR.W   D1,D0  *D0 now holds MODE
000004A0                           833                                              
000004A0  3C00                     834      MOVE.W D0, D6 *D6 holds mode
000004A2                           835      
000004A2  4281                     836      CLR.L D1
000004A4                           837      
000004A4  4280                     838      CLR.L D0
000004A6                           839      
000004A6  3015                     840      MOVE.W (A5), D0
000004A8                           841  
000004A8  123C 000D                842      MOVE.B  #13,D1     
000004AC                           843  
000004AC  E368                     844      LSL.W   D1,D0
000004AE                           845                   
000004AE  123C 000D                846      MOVE.B  #13,D1
000004B2                           847  
000004B2  E268                     848      LSR.W   D1,D0  *D0 now holds MODE
000004B4                           849                                              
000004B4  3E00                     850      MOVE.W D0, D7 *D6 holds Register   
000004B6                           851      
000004B6  4EB9 0000130A            852      JSR PRINT_EA
000004BC                           853      
000004BC  6000 FB56                854      BRA PARSE_MEMORY
000004C0                           855  
000004C0                           856      
000004C0                           857  
000004C0                           858  
000004C0                           859  
000004C0                           860  
000004C0                           861  
000004C0                           862  
000004C0                           863  
000004C0                           864  
000004C0                           865  
000004C0                           866  
000004C0                           867  
000004C0                           868  
000004C0                           869  
000004C0                           870  -------------------- end include --------------------
000004C0                           871                  INCLUDE 'CMP.X68'
000004C0                           872     
000004C0                           873  CMP
000004C0                           874                   * ADD message
Line 875 ERROR: Undefined symbol
000004C0  43F9 004DBB8E            875                   LEA      CMP_MESSAGE,    A1
000004C6  103C 000E                876                   MOVE.B   #14,            D0
000004CA  4E4F                     877                   TRAP #15
000004CC                           878                   
000004CC  4EB8 0238                879                   JSR GET_SIZE_PURPLE
000004D0                           880                   
000004D0  4EB8 0250                881                   JSR     PRINTOUT_SIZE_PURPLE
000004D4                           882                   
000004D4                           883                   
000004D4  4EB8 02BC                884                   JSR     Set_Ea
000004D8                           885                   
000004D8  4EB9 0000130A            886                   JSR     PRINT_EA *by using jmp table
000004DE                           887                   
000004DE  4EB8 029A                888                   JSR     PRINT_COMMA
000004E2                           889                   
000004E2                           890                    * for the first Dn 
000004E2  4EB8 02AA                891                   JSR     GET_Data_Register
000004E6                           892                   
000004E6  4286                     893                   CLR.L   D6
000004E8                           894                   
000004E8  1C3C 0000                895                   MOVE.B  #%000, D6 * for mode
000004EC                           896  
000004EC  4EB9 0000130A            897                   JSR     PRINT_EA *by using jmp table
000004F2                           898                   
000004F2  4EF8 0014                899                   JMP     PARSE_MEMORY
000004F6                           900  
000004F6                           901                   
000004F6                           902   *                JMP     NEXT
000004F6                           903  
000004F6                           904  
000004F6                           905  
000004F6                           906  
000004F6                           907  
000004F6                           908  -------------------- end include --------------------
000004F6                           909                  INCLUDE 'SUB.X68'
000004F6                           910  
000004F6                           911  SUB
000004F6                           912                   * ADD message
Line 913 ERROR: Undefined symbol
000004F6  43F9 004DBB8E            913                   LEA      SUB_MESSAGE,    A1
000004FC  103C 000E                914                   MOVE.B   #14,            D0
00000500  4E4F                     915                   TRAP #15
00000502                           916                   
00000502  4EB8 0238                917                   JSR    GET_SIZE_PURPLE
00000506                           918                   
00000506  4EB8 0250                919                   JSR     PRINTOUT_SIZE_PURPLE
0000050A                           920                   
0000050A                           921                   
0000050A  4280                     922                   CLR.L D0                *clear D0
0000050C                           923                   
0000050C  4281                     924                   CLR.L D1                *clear D1
0000050E                           925                   
0000050E  3015                     926                   MOVE.W  (A5),D0     *D0 is the binary value to decode
00000510                           927                   
00000510                           928                   * check the bit at 7
00000510  123C 0007                929                   MOVE.B  #7,D1           *8 bits is the number of times to shift to the left to remove opcode & register #
00000514                           930  
00000514  E368                     931                   LSL.W   D1,D0           *Shift the bits 8 times -> D0 now removes the opcode & reg#
00000516                           932                   
00000516  123C 000F                933                   MOVE.B  #15,D1          *14 bits is the number of times to shift to hold the mode number
0000051A                           934  
0000051A  E268                     935                   LSR.W   D1,D0           *Shift the bits 14 times -> D0 now holds the mode number
0000051C                           936                   
0000051C  B03C 0000                937                   CMP.B   #0, D0
00000520                           938  
00000520                           939                   
00000520                           940                *   BTST    #8, D0
00000520                           941                   
00000520  6700 0024                942                   BEQ     SUB_FIRST_EA
00000524                           943                   
00000524                           944                   * for the first Dn 
00000524  4EB8 02AA                945                   JSR     GET_Data_Register
00000528                           946                   
00000528  4286                     947                   CLR.L   D6
0000052A                           948                   
0000052A  1C3C 0000                949                   MOVE.B  #%000, D6 * for mode
0000052E                           950                   
0000052E  4EB9 0000130A            951                   JSR     PRINT_EA *by using jmp table
00000534                           952                   
00000534  4EB8 029A                953                   JSR     PRINT_COMMA
00000538                           954                   
00000538  4EB8 02BC                955                   JSR     Set_Ea
0000053C                           956                   
0000053C  4EB9 0000130A            957                   JSR     PRINT_EA *by using jmp table
00000542                           958                   
00000542  4EF8 0014                959                   JMP     PARSE_MEMORY
00000546                           960                   
00000546                           961  SUB_FIRST_EA
00000546  4EB8 02BC                962                   JSR     Set_Ea
0000054A                           963                   
0000054A  4EB9 0000130A            964                   JSR     PRINT_EA *by using jmp table
00000550                           965                   
00000550  4EB8 029A                966                   JSR     PRINT_COMMA
00000554                           967                   
00000554                           968                    * for the first Dn 
00000554  4EB8 02AA                969                   JSR     GET_Data_Register
00000558                           970                   
00000558  4286                     971                   CLR.L   D6
0000055A                           972                   
0000055A  1C3C 0000                973                   MOVE.B  #%000, D6 * for mode
0000055E                           974  
0000055E  4EB9 0000130A            975                   JSR     PRINT_EA *by using jmp table
00000564                           976                   
00000564  4EF8 0014                977                   JMP     PARSE_MEMORY
00000568                           978  
00000568                           979  
00000568                           980  
00000568                           981  
00000568                           982  
00000568                           983  -------------------- end include --------------------
00000568                           984                  INCLUDE 'TRYING_NOP.X68'
00000568                           985  LEA_OPCODE
00000568                           986      
Line 987 ERROR: Undefined symbol
00000568  43F9 004DBB8E            987      LEA         LEA_MESSAGE, A1     * print out message for 'NOP'
0000056E                           988      
0000056E  103C 000E                989      MOVE.B      #14, D0
00000572                           990      
00000572  4E4F                     991      TRAP #15  
00000574                           992      
00000574  3015                     993      MOVE.W  (A5),D0     *D0 is the binary value to decode
00000576                           994      
00000576  123C 000D                995      MOVE.B  #13,D1     
0000057A                           996  
0000057A  E368                     997      LSL.W   D1,D0
0000057C                           998                   
0000057C  123C 000D                999      MOVE.B  #13,D1
00000580                          1000  
00000580  E268                    1001      LSR.W   D1,D0  *D0 now holds Register
00000582                          1002                                              
00000582  3E00                    1003      MOVE.W D0, D7 *D7 holds Register  
00000584                          1004  
00000584  3015                    1005      MOVE.W  (A5),D0     *D0 is the binary value to decode
00000586                          1006  
00000586  123C 000A               1007      MOVE.B  #10,D1     
0000058A                          1008  
0000058A  E368                    1009      LSL.W   D1,D0
0000058C                          1010                   
0000058C  123C 000D               1011      MOVE.B  #13,D1
00000590                          1012  
00000590  E268                    1013      LSR.W   D1,D0  *D0 now holds MODE
00000592                          1014                                              
00000592  3C00                    1015      MOVE.W D0, D6 *D6 holds MODE  
00000594                          1016      
00000594  4EB9 0000130A           1017      JSR PRINT_EA
0000059A                          1018  
Line 1019 ERROR: Undefined symbol
0000059A  43F9 004DBB8E           1019      LEA         COMMA, A1     * print out message for 'NOP'
000005A0                          1020      
000005A0  103C 000E               1021      MOVE.B      #14, D0
000005A4                          1022      
000005A4  4E4F                    1023      TRAP #15 
000005A6                          1024                                    
000005A6  3015                    1025      MOVE.W  (A5),D0     *D0 is the binary value to decode 
000005A8                          1026  
000005A8  7C01                    1027      MOVE.L #%001, D6
000005AA                          1028  
000005AA  123C 0004               1029      MOVE.B  #4,D1     
000005AE                          1030  
000005AE  E368                    1031      LSL.W   D1,D0
000005B0                          1032                   
000005B0  123C 000D               1033      MOVE.B  #13,D1
000005B4                          1034  
000005B4  E268                    1035      LSR.W   D1,D0  
000005B6                          1036                                              
000005B6  3E00                    1037      MOVE.W D0, D7 
000005B8                          1038      
000005B8  4EB9 0000130A           1039      JSR PRINT_EA
000005BE                          1040      
000005BE  4EF8 0014               1041      JMP     PARSE_MEMORY       
000005C2                          1042            
000005C2                          1043  NOP_OPCODE
Line 1044 ERROR: Undefined symbol
000005C2  43F9 004DBB8E           1044      LEA         NOP_MESSAGE, A1     * print out message for 'NOP'
000005C8                          1045      
000005C8  103C 000E               1046      MOVE.B      #14, D0
000005CC                          1047      
000005CC  4E4F                    1048      TRAP #15
000005CE                          1049      
000005CE  6000 FA44               1050      BRA PARSE_MEMORY
000005D2                          1051  RTS_OPCODE 
Line 1052 ERROR: Undefined symbol
000005D2  43F9 004DBB8E           1052      LEA         RTS_MESSAGE, A1     * print out message for 'RTS'
000005D8                          1053      
000005D8  103C 000E               1054      MOVE.B      #14, D0
000005DC                          1055      
000005DC  4E4F                    1056      TRAP #15
000005DE                          1057      
000005DE  6000 FA34               1058      BRA PARSE_MEMORY
000005E2                          1059      
000005E2                          1060  JSR_OPCODE 
Line 1061 ERROR: Undefined symbol
000005E2  43F9 004DBB8E           1061      LEA         JSR_MESSAGE, A1     * print out message for 'JSR'
000005E8                          1062      
000005E8  103C 000E               1063      MOVE.B      #14, D0
000005EC                          1064      
000005EC  4E4F                    1065      TRAP #15
000005EE                          1066      
Line 1067 ERROR: Undefined symbol
000005EE  43F9 004DBB8E           1067      LEA     SPACE, A1
000005F4                          1068      
000005F4  4E4F                    1069      TRAP #15
000005F6                          1070      
000005F6  3015                    1071      MOVE.W (A5), D0
000005F8                          1072  
000005F8  123C 000D               1073      MOVE.B  #13,D1     
000005FC                          1074  
000005FC  E368                    1075      LSL.W   D1,D0
000005FE                          1076                   
000005FE  123C 000D               1077      MOVE.B  #13,D1
00000602                          1078  
00000602  E268                    1079      LSR.W   D1,D0  *D0 now holds Register
00000604                          1080                                              
00000604  3E00                    1081      MOVE.W D0, D7 *D7 holds Register  
00000606                          1082  
00000606  3015                    1083      MOVE.W (A5), D0
00000608                          1084  
00000608  123C 000A               1085      MOVE.B  #10,D1     
0000060C                          1086  
0000060C  E368                    1087      LSL.W   D1,D0
0000060E                          1088                   
0000060E  123C 000D               1089      MOVE.B  #13,D1
00000612                          1090  
00000612  E268                    1091      LSR.W   D1,D0  *D0 now holds MODE
00000614                          1092                                              
00000614  3C00                    1093      MOVE.W D0, D6 *D6 holds MODE  
00000616                          1094      
00000616  4EB9 0000130A           1095      JSR PRINT_EA
0000061C                          1096      
0000061C  6000 F9F6               1097      BRA PARSE_MEMORY
00000620                          1098         
00000620                          1099  CLR_OPCODE 
Line 1100 ERROR: Undefined symbol
00000620  43F9 004DBB8E           1100      LEA         CLR_MESSAGE, A1     * print out message for 'CLR'
00000626                          1101      
00000626  103C 000E               1102      MOVE.B      #14, D0
0000062A                          1103      
0000062A  4E4F                    1104      TRAP #15
0000062C                          1105                     
Line 1106 ERROR: Undefined symbol
0000062C  43F9 004DBB8E           1106      LEA      PERIOD, A1
00000632                          1107      
00000632  103C 000E               1108      MOVE.B   #14, D0
00000636                          1109      
00000636  4E4F                    1110      TRAP #15 
00000638                          1111                
00000638  3015                    1112      MOVE.W      (A5), D0
0000063A                          1113               
0000063A  123C 0006               1114      MOVE.B      #6, D1
0000063E                          1115                 
0000063E  E268                    1116      LSR.W       D1, D0  *shift right 6 
00000640                          1117                 
00000640  123C 000E               1118      MOVE.B      #14, D1
00000644                          1119                 
00000644  E368                    1120      LSL.W       D1, D0  *shift left 15, only size is left
00000646                          1121      
00000646  123C 000E               1122      MOVE.B      #14, D1
0000064A                          1123                 
0000064A  E268                    1124      LSR.W       D1, D0  *shift right 15, size is left   
0000064C                          1125      
0000064C  B07C 0000               1126      CMP.W       #00, D0
00000650                          1127  
00000650  6700 004A               1128      BEQ         SIZE_B
00000654                          1129      
00000654  B07C 0001               1130      CMP.W       #01, D0
00000658                          1131                 
00000658  6700 004C               1132      BEQ         SIZE_W 
0000065C                          1133      
0000065C  B07C 0002               1134      CMP.W       #2, D0
00000660                          1135                 
00000660  6700 004E               1136      BEQ         SIZE_L
00000664                          1137  
00000664                          1138  PRINT_SIZE
00000664                          1139  
00000664  103C 000E               1140      MOVE.B      #14, D0
00000668                          1141      
00000668  4E4F                    1142      TRAP #15
0000066A                          1143  
0000066A  4280                    1144      CLR.L   D0
0000066C                          1145                  
0000066C  4281                    1146      CLR.L   D1
0000066E                          1147                       * set register
0000066E                          1148                   
0000066E  3015                    1149      MOVE.W  (A5),D0     *D0 is the binary value to decode
00000670                          1150                 
00000670  123C 000D               1151      MOVE.B  #13,D1           *8 bits is the number of times to shift to the left to remove opcode & register #
00000674                          1152  
00000674  E368                    1153      LSL.W   D1,D0           *Shift the bits 8 times -> D0 now removes the opcode & reg#
00000676                          1154  
00000676  123C 000D               1155      MOVE.B  #13,D1          *14 bits is the number of times to shift to hold the mode number
0000067A                          1156  
0000067A  E268                    1157      LSR.W   D1,D0           *Shift the bits 13 times -> D0 now holds the size number
0000067C                          1158  
0000067C  1E00                    1159      MOVE.B  D0, D7          *put D0 to data register into D7 for future printing
0000067E                          1160                   
0000067E                          1161                   * set mode
0000067E  4280                    1162      CLR.L D0                *clear D0
00000680                          1163                   
00000680  4281                    1164      CLR.L D1                *clear D1
00000682                          1165                   
00000682  3015                    1166      MOVE.W  (A5),D0     *D0 is the binary value to decode
00000684                          1167                 
00000684  123C 000A               1168      MOVE.B  #10,D1           *8 bits is the number of times to shift to the left to remove opcode & register #
00000688                          1169  
00000688  E368                    1170      LSL.W   D1,D0           *Shift the bits 8 times -> D0 now removes the opcode & reg#
0000068A                          1171  
0000068A  123C 000D               1172      MOVE.B  #13,D1          *14 bits is the number of times to shift to hold the mode number
0000068E                          1173  
0000068E  E268                    1174      LSR.W   D1,D0           *Shift the bits 13 times -> D0 now holds the size number
00000690                          1175  
00000690  2C00                    1176      MOVE.L  D0, D6          *put D0 to data register into D7 for future printing
00000692                          1177                   
00000692  4EB9 0000130A           1178      JSR     PRINT_EA *by using jmp table
00000698                          1179  
00000698  6000 F97A               1180      BRA PARSE_MEMORY
0000069C                          1181      
0000069C                          1182  SIZE_B 
0000069C                          1183                
Line 1184 ERROR: Undefined symbol
0000069C  43F9 004DBB8E           1184      LEA         SIZE_B_PRINT, A1 
000006A2                          1185      
000006A2  4EF8 0664               1186      JMP PRINT_SIZE
000006A6                          1187      
000006A6                          1188  SIZE_W 
000006A6                          1189                
Line 1190 ERROR: Undefined symbol
000006A6  43F9 004DBB8E           1190      LEA         SIZE_W_PRINT, A1 
000006AC                          1191      
000006AC  4EF8 0664               1192      JMP PRINT_SIZE
000006B0                          1193      
000006B0                          1194  SIZE_L 
000006B0                          1195                
Line 1196 ERROR: Undefined symbol
000006B0  43F9 004DBB8E           1196      LEA         SIZE_L_PRINT, A1 
000006B6                          1197      
000006B6  4EF8 0664               1198      JMP PRINT_SIZE
000006BA                          1199  
000006BA                          1200  
000006BA                          1201  
000006BA                          1202  -------------------- end include --------------------
000006BA                          1203                  INCLUDE 'DIVU_OR.X68'
000006BA                          1204      
000006BA  4EB8 0238               1205  DIVU_OR          JSR      GET_SIZE_PURPLE  
000006BE                          1206                                            
000006BE  BA3C 0003               1207                   CMP.B    #$3, D5        *if D0 holds 3, the opcode is DIVU
000006C2                          1208                   
000006C2  6700 0008               1209                   BEQ      DIVU_CODE
000006C6                          1210                   
000006C6  4EF9 00000702           1211                   JMP      OR_CODE
000006CC                          1212                   
000006CC                          1213  DIVU_CODE  
000006CC                          1214                   * OP_CODE message
Line 1215 ERROR: Undefined symbol
000006CC  43F9 004DBB8E           1215                   LEA      DIVU_MESSAGE, A1
000006D2  103C 000E               1216                   MOVE.B   #14, D0
000006D6  4E4F                    1217                   TRAP #15
000006D8                          1218  
000006D8  3A3C 0001               1219                   MOVE    #%01, D5          
000006DC                          1220                   
000006DC                          1221              *     LEA      SIZE_W_PRINT,    A1
000006DC                          1222                   
000006DC                          1223              *     MOVE.B   #14,             D0
000006DC                          1224          
000006DC                          1225              *     TRAP #15
000006DC                          1226                   
000006DC  4EB8 02BC               1227                   JSR     Set_Ea
000006E0                          1228                   
000006E0  1A3C 0001               1229                   MOVE.B  #%01, D5
000006E4                          1230                   
000006E4  4EB9 0000130A           1231                   JSR     PRINT_EA *by using jmp table
000006EA                          1232                   
000006EA  4EB8 029A               1233                   JSR     PRINT_COMMA
000006EE                          1234                   
000006EE                          1235                    * for the first Dn 
000006EE  4EB8 02AA               1236                   JSR     GET_Data_Register
000006F2                          1237                   
000006F2  4286                    1238                   CLR.L   D6
000006F4                          1239                   
000006F4  1C3C 0000               1240                   MOVE.B  #%000, D6 * for mode
000006F8                          1241  
000006F8  4EB9 0000130A           1242                   JSR     PRINT_EA *by using jmp table
000006FE                          1243  
000006FE  4EF8 0014               1244                   JMP     PARSE_MEMORY
00000702                          1245  
00000702                          1246  OR_CODE    
00000702                          1247                   * OP_CODE message
Line 1248 ERROR: Undefined symbol
00000702  43F9 004DBB8E           1248                   LEA      OR_MESSAGE, A1
00000708  103C 000E               1249                   MOVE.B   #14, D0
0000070C  4E4F                    1250                   TRAP #15
0000070E                          1251  
0000070E  4EB8 0250               1252                   JSR PRINTOUT_SIZE_PURPLE
00000712                          1253                   
00000712                          1254                     * check for dn and ea
00000712  4280                    1255                   CLR.L D0                *clear D0
00000714                          1256                   
00000714  4281                    1257                   CLR.L D1                *clear D1
00000716                          1258                   
00000716  3015                    1259                   MOVE.W  (A5),D0     *D0 is the binary value to decode
00000718                          1260                   
00000718                          1261                   * check the bit at 7
00000718  123C 0007               1262                   MOVE.B  #7,D1           *8 bits is the number of times to shift to the left to remove opcode & register #
0000071C                          1263  
0000071C  E368                    1264                   LSL.W   D1,D0           *Shift the bits 8 times -> D0 now removes the opcode & reg#
0000071E                          1265                   
0000071E  123C 000F               1266                   MOVE.B  #15,D1          *14 bits is the number of times to shift to hold the mode number
00000722                          1267  
00000722  E268                    1268                   LSR.W   D1,D0           *Shift the bits 14 times -> D0 now holds the mode number
00000724                          1269                   
00000724  B03C 0000               1270                   CMP.B   #0, D0
00000728                          1271                   
00000728                          1272                  * BTST    #7, D0
00000728                          1273                   
00000728  6700 0024               1274                   BEQ     OR_FIRST_EA
0000072C                          1275                   
0000072C                          1276                   * for the first Dn 
0000072C  4EB8 02AA               1277                   JSR     GET_Data_Register
00000730                          1278                   
00000730  4286                    1279                   CLR.L   D6
00000732                          1280                   
00000732  1C3C 0000               1281                   MOVE.B  #%000, D6 * for mode
00000736                          1282                   
00000736  4EB9 0000130A           1283                   JSR     PRINT_EA *by using jmp table
0000073C                          1284                   
0000073C  4EB8 029A               1285                   JSR     PRINT_COMMA
00000740                          1286                   
00000740  4EB8 02BC               1287                   JSR     Set_Ea
00000744                          1288                   
00000744  4EB9 0000130A           1289                   JSR     PRINT_EA *by using jmp table
0000074A                          1290                   
0000074A  4EF8 0014               1291                   JMP     PARSE_MEMORY
0000074E                          1292                   
0000074E                          1293  OR_FIRST_EA
0000074E  4EB8 02BC               1294                   JSR     Set_Ea
00000752                          1295                   
00000752  4EB9 0000130A           1296                   JSR     PRINT_EA *by using jmp table
00000758                          1297                   
00000758  4EB8 029A               1298                   JSR     PRINT_COMMA
0000075C                          1299                   
0000075C                          1300                    * for the first Dn 
0000075C  4EB8 02AA               1301                   JSR     GET_Data_Register
00000760                          1302                   
00000760  4286                    1303                   CLR.L   D6
00000762                          1304                   
00000762  1C3C 0000               1305                   MOVE.B  #%000, D6 * for mode
00000766                          1306  
00000766  4EB9 0000130A           1307                   JSR     PRINT_EA *by using jmp table
0000076C                          1308                   
0000076C  4EF8 0014               1309                   JMP     PARSE_MEMORY
00000770                          1310  
00000770                          1311  
00000770                          1312  
00000770                          1313  
00000770                          1314  
00000770                          1315  
00000770                          1316  
00000770                          1317  
00000770                          1318  
00000770                          1319  
00000770                          1320  
00000770                          1321  
00000770                          1322  
00000770                          1323  -------------------- end include --------------------
00000770                          1324                  INCLUDE 'GROUP_0100_CODE.X68'
00000770                          1325  GROUP_0100_CODE          *at this point we know the first 4 bits are 0100 -> NOP, RTS, JSR,  MOVEM, CLR
00000770                          1326  
00000770  4280                    1327                   CLR.L D0                *clear D0
00000772                          1328                   
00000772  4281                    1329                   CLR.L D1                *clear D1
00000774                          1330                   
00000774  3015                    1331                   MOVE.W  (A5),D0     *D0 is the binary value to decode
00000776                          1332  
00000776  123C 0004               1333                   MOVE.B  #4,D1           *4 bits is the number of times to shift to the left to remove opcode
0000077A                          1334  
0000077A  E368                    1335                   LSL.W   D1,D0           *Shift the bits 4 times -> D0 now removes the opcode
0000077C                          1336                   
0000077C  123C 0004               1337                   MOVE.B  #4,D1           *4 bits is the number of times to shift to hold everything except the opcode
00000780                          1338  
00000780  E268                    1339                   LSR.W   D1,D0           *Shift the bits 4 times -> D0 now holds everything except opcode
00000782                          1340                   
00000782                          1341                                              
00000782  B07C 0E71               1342                   CMP.W    #$E71, D0      *if D0 holds E71, the opcode is NOP
00000786                          1343                   
00000786  6700 FE3A               1344                   BEQ      NOP_OPCODE       *Branch to NOP_CODE if the opcode is NOP
0000078A                          1345                   
0000078A                          1346                   
0000078A  B07C 0E75               1347                   CMP.W    #$E75, D0      *if D0 holds E75, the opcode is RTS
0000078E                          1348                   
0000078E  6700 FE42               1349                   BEQ      RTS_OPCODE       *Branch to RTS_CODE if the opcode is RTS
00000792                          1350                   
00000792                          1351                   
00000792  4280                    1352                   CLR.L D0                *clear D0
00000794                          1353                   
00000794                          1354                   
00000794  4281                    1355                   CLR.L D1                *clear D1
00000796                          1356                   
00000796                          1357                   
00000796  3015                    1358                   MOVE.W  (A5),D0     *D0 is the binary value to decode
00000798                          1359  
00000798                          1360  
00000798  123C 0004               1361                   MOVE.B  #4,D1           *4 bits is the number of times to shift to the left to remove opcode
0000079C                          1362  
0000079C                          1363  
0000079C  E368                    1364                   LSL.W   D1,D0           *Shift the bits 4 times -> D0 now removes the opcode
0000079E                          1365                   
0000079E  123C 000C               1366                   MOVE.B  #12,D1           *12 bits is the number of times to shift to hold the 4th-8th bits (counting left to right, non-inclusive)
000007A2                          1367  
000007A2  E268                    1368                   LSR.W   D1,D0           *Shift the bits 4 times -> D0 now holds 4th-8th bits (counting left to right, non-inclusive)
000007A4                          1369                   
000007A4  B07C 0002               1370                   CMP.W    #$2, D0        *if D0 holds #2, the opcode is CLR
000007A8                          1371                   
000007A8  6700 FE76               1372                   BEQ      CLR_OPCODE       *Branch to NOP_CODE if the opcode is CLR
000007AC                          1373                   
000007AC                          1374          
000007AC  B07C 000E               1375                   CMP.W    #$E, D0        *if D0 holds $E = 14, the opcode is JSR
000007B0                          1376                   
000007B0  6700 FE30               1377                   BEQ      JSR_OPCODE       *Branch to NOP_CODE if the opcode is CLR
000007B4                          1378                   
000007B4  4280                    1379                   CLR.L D0                *clear D0
000007B6                          1380                   
000007B6  4281                    1381                   CLR.L D1                *clear D1
000007B8                          1382                   
000007B8  3015                    1383                   MOVE.W  (A5),D0     *D0 is the binary value to decode
000007BA                          1384  
000007BA  123C 0007               1385                   MOVE.B  #7,D1 
000007BE                          1386  
000007BE  E368                    1387                   LSL.W   D1,D0 
000007C0                          1388                   
000007C0  123C 000D               1389                   MOVE.B  #13,D1 
000007C4                          1390  
000007C4  E268                    1391                   LSR.W   D1,D0     
000007C6                          1392                   
000007C6  B07C 0007               1393                   CMP.W    #%111, D0  
000007CA                          1394                   
000007CA  6700 FD9C               1395                   BEQ LEA_OPCODE
000007CE                          1396                   
000007CE  6000 00B4               1397                   BRA      MOVEM_OPCODE     *else it is a MOVEM
000007D2                          1398  
000007D2                          1399      
000007D2                          1400  
000007D2                          1401  
000007D2                          1402  
000007D2                          1403  
000007D2                          1404  
000007D2                          1405  -------------------- end include --------------------
000007D2                          1406                  INCLUDE 'MULS_AND.X68'
000007D2                          1407   
000007D2  4EB8 0238               1408  MULS_AND         JSR      GET_SIZE_PURPLE
000007D6                          1409                                              
000007D6  BA3C 0003               1410                   CMP.B    #$3, D5        *if D0 holds 3, the opcode is DIVU
000007DA                          1411                   
000007DA  6700 0008               1412                   BEQ      MULS_CODE
000007DE                          1413                   
000007DE  4EF9 00000816           1414                   JMP      AND_CODE
000007E4                          1415                   
000007E4                          1416  MULS_CODE
000007E4                          1417                   * OP_CODE message
Line 1418 ERROR: Undefined symbol
000007E4  43F9 004DBB8E           1418                   LEA MULS_MESSAGE, A1
000007EA                          1419                   
000007EA  103C 000E               1420                   MOVE.B #14, D0
000007EE                          1421                   
000007EE  4E4F                    1422                   TRAP #15
000007F0                          1423  
000007F0                          1424             *      LEA      SIZE_W_PRINT,    A1
000007F0                          1425                   
000007F0                          1426             *      MOVE.B   #14,             D0
000007F0                          1427          
000007F0                          1428             *      TRAP #15
000007F0                          1429                   
000007F0  4EB8 02BC               1430                   JSR     Set_Ea
000007F4                          1431                   
000007F4  1A3C 0001               1432                   MOVE.B  #%01, D5
000007F8                          1433                   
000007F8  4EB9 0000130A           1434                   JSR     PRINT_EA *by using jmp table
000007FE                          1435                   
000007FE  4EB8 029A               1436                   JSR     PRINT_COMMA
00000802                          1437                   
00000802                          1438                    * for the first Dn 
00000802  4EB8 02AA               1439                   JSR     GET_Data_Register
00000806                          1440                   
00000806  4286                    1441                   CLR.L   D6
00000808                          1442                   
00000808  1C3C 0000               1443                   MOVE.B  #%000, D6 * for mode
0000080C                          1444  
0000080C  4EB9 0000130A           1445                   JSR     PRINT_EA *by using jmp table
00000812                          1446  
00000812  4EF8 0014               1447                   JMP      PARSE_MEMORY
00000816                          1448  
00000816                          1449  AND_CODE
00000816                          1450                   * OP_CODE message
Line 1451 ERROR: Undefined symbol
00000816  43F9 004DBB8E           1451                   LEA AND_MESSAGE, A1
0000081C  103C 000E               1452                   MOVE.B #14, D0
00000820  4E4F                    1453                   TRAP #15
00000822                          1454                   
00000822  4EB8 0250               1455                   JSR PRINTOUT_SIZE_PURPLE
00000826                          1456                   
00000826                          1457                     * check for dn and ea
00000826  4280                    1458                   CLR.L D0                *clear D0
00000828                          1459                   
00000828  4281                    1460                   CLR.L D1                *clear D1
0000082A                          1461                   
0000082A  3015                    1462                   MOVE.W  (A5),D0     *D0 is the binary value to decode
0000082C                          1463                   
0000082C                          1464                   * check the bit at 7
0000082C  123C 0007               1465                   MOVE.B  #7,D1           *8 bits is the number of times to shift to the left to remove opcode & register #
00000830                          1466  
00000830  E368                    1467                   LSL.W   D1,D0           *Shift the bits 8 times -> D0 now removes the opcode & reg#
00000832                          1468                   
00000832  123C 000F               1469                   MOVE.B  #15,D1          *14 bits is the number of times to shift to hold the mode number
00000836                          1470  
00000836  E268                    1471                   LSR.W   D1,D0           *Shift the bits 14 times -> D0 now holds the mode number
00000838                          1472                   
00000838  B03C 0000               1473                   CMP.B   #0, D0
0000083C                          1474  
0000083C                          1475                *   BTST    #8, D0
0000083C                          1476                   
0000083C  6700 0024               1477                   BEQ     AND_FIRST_EA
00000840                          1478                   
00000840                          1479                   * for the first Dn 
00000840  4EB8 02AA               1480                   JSR     GET_Data_Register
00000844                          1481                   
00000844  4286                    1482                   CLR.L   D6
00000846                          1483                   
00000846  1C3C 0000               1484                   MOVE.B  #%000, D6 * for mode
0000084A                          1485                   
0000084A  4EB9 0000130A           1486                   JSR     PRINT_EA *by using jmp table
00000850                          1487                   
00000850  4EB8 029A               1488                   JSR     PRINT_COMMA
00000854                          1489                   
00000854  4EB8 02BC               1490                   JSR     Set_Ea
00000858                          1491                   
00000858  4EB9 0000130A           1492                   JSR     PRINT_EA *by using jmp table
0000085E                          1493                   
0000085E  4EF8 0014               1494                   JMP      PARSE_MEMORY
00000862                          1495                   
00000862                          1496  AND_FIRST_EA
00000862  4EB8 02BC               1497                   JSR     Set_Ea
00000866                          1498                   
00000866  4EB9 0000130A           1499                   JSR     PRINT_EA *by using jmp table
0000086C                          1500                   
0000086C  4EB8 029A               1501                   JSR     PRINT_COMMA
00000870                          1502                   
00000870                          1503                    * for the first Dn 
00000870  4EB8 02AA               1504                   JSR     GET_Data_Register
00000874                          1505                   
00000874  4286                    1506                   CLR.L   D6
00000876                          1507                   
00000876  1C3C 0000               1508                   MOVE.B  #%000, D6 * for mode
0000087A                          1509  
0000087A  4EB9 0000130A           1510                   JSR     PRINT_EA *by using jmp table
00000880                          1511                   
00000880  4EF8 0014               1512                   JMP      PARSE_MEMORY
00000884                          1513  
00000884                          1514  
00000884                          1515  
00000884                          1516  
00000884                          1517  
00000884                          1518  
00000884                          1519  
00000884                          1520  
00000884                          1521  
00000884                          1522  
00000884                          1523  
00000884                          1524  
00000884                          1525  -------------------- end include --------------------
00000884                          1526                  INCLUDE 'MOVEM.X68'
00000884                          1527     
00000884                          1528  
00000884                          1529  MOVEM_OPCODE
00000884                          1530  
00000884  4280                    1531     CLR.L       D0               *Zero it
00000886                          1532     
00000886  4286                    1533     CLR.L       D6
00000888                          1534  
00000888  3015                    1535     MOVE.W      (A5), D0     *We'll play with it here
0000088A                          1536  
Line 1537 ERROR: Undefined symbol
0000088A  43F9 004DBB8E           1537     LEA MOVEM_MESSAGE, A1
00000890                          1538            
00000890  103C 000E               1539     MOVE.B #14, D0
00000894                          1540                   
00000894  4E4F                    1541     TRAP #15    
00000896                          1542  
00000896  3015                    1543    MOVE.W     (A5), D0
00000898                          1544  
00000898  0800 0006               1545    BTST       #6,  D0      
0000089C                          1546  
0000089C  6600 0012               1547    BNE        PRINT_SIZE_L_MOVEM
000008A0                          1548  
Line 1549 ERROR: Undefined symbol
000008A0  43F9 004DBB8E           1549    LEA SIZE_W_PRINT, A1
000008A6                          1550            
000008A6  103C 000E               1551    MOVE.B #14, D0
000008AA                          1552                   
000008AA  4E4F                    1553    TRAP #15    
000008AC                          1554   
000008AC  6000 000E               1555    BRA          DR_FIELD
000008B0                          1556      
000008B0                          1557    * Print out size for W
000008B0                          1558  PRINT_SIZE_L_MOVEM
000008B0                          1559  
Line 1560 ERROR: Undefined symbol
000008B0  43F9 004DBB8E           1560    LEA SIZE_L_PRINT, A1
000008B6                          1561            
000008B6  103C 000E               1562    MOVE.B #14, D0
000008BA                          1563                   
000008BA  4E4F                    1564    TRAP #15    
000008BC                          1565  
000008BC                          1566  DR_FIELD
000008BC                          1567                 
000008BC  0800 000A               1568    BTST        #10,  D0    * BIT TEST
000008C0                          1569  
000008C0  6700 000C               1570    BEQ         Regitset_Memory *if D0 holds a 1
000008C4                          1571  
000008C4  6000 0062               1572    BRA         Memory_Register *If D0 hollds a 0
000008C8                          1573  
000008C8  4284                    1574    CLR.L D4
000008CA                          1575  
000008CA  183C 000F               1576    MOVE.B #15, D4
000008CE                          1577  
000008CE                          1578  Regitset_Memory
000008CE  361E                    1579      MOVE.W      (A6)+, D3
000008D0                          1580      
000008D0                          1581      * CHECK IF PRE DECREMEMNT
000008D0  3015                    1582      MOVE.W (A5), D0
000008D2                          1583      
000008D2  123C 000A               1584      MOVE.B      #10, D1
000008D6                          1585      
000008D6  E368                    1586      LSL.W       D1, D0
000008D8                          1587  
000008D8  123C 000D               1588      MOVE.B      #13, D1
000008DC                          1589  
000008DC  E268                    1590      LSR.W       D1, D0
000008DE                          1591  
000008DE  B03C 0004               1592      CMP.B       #%100, D0
000008E2                          1593  
000008E2  6700 0064               1594      BEQ         OPPOSITE_LOOP 
000008E6                          1595      * NOW IT CAN BE IN REGULAR ORDER
000008E6                          1596      
000008E6  183C 000F               1597      MOVE.B      #15, D4
000008EA                          1598      
000008EA  4EB9 00000B1E           1599      JSR         LOOP_MOVEM
000008F0                          1600      
Line 1601 ERROR: Undefined symbol
000008F0  43F9 004DBB8E           1601      LEA COMMA, A1
000008F6                          1602      
000008F6  103C 000E               1603      MOVE.B      #14, D0
000008FA                          1604      
000008FA  4E4F                    1605      TRAP #15
000008FC                          1606      
000008FC  4EB9 00000906           1607      JSR PRINT_ADDRESS
00000902                          1608      
00000902  6000 F710               1609      BRA PARSE_MEMORY
00000906                          1610  
00000906                          1611  PRINT_ADDRESS 
00000906  3015                    1612      MOVE.W      (A5), D0
00000908                          1613  
00000908  123C 000A               1614      MOVE.B      #10, D1
0000090C                          1615      
0000090C  E368                    1616      LSL.W       D1, D0
0000090E                          1617      
0000090E  123C 000D               1618      MOVE.B      #13, D1
00000912                          1619  
00000912  E268                    1620      LSR.W       D1, D0
00000914                          1621      
00000914  1C00                    1622      MOVE.B      D0, D6
00000916                          1623      
00000916  3015                    1624      MOVE.W      (A5), D0
00000918                          1625      
00000918  E368                    1626      LSL.W       D1, D0
0000091A                          1627      
0000091A  E268                    1628      LSR.W       D1, D0
0000091C                          1629      
0000091C  4287                    1630      CLR.L       D7
0000091E                          1631      
0000091E  1E00                    1632      MOVE.B      D0, D7
00000920                          1633      
00000920  4EB9 0000130A           1634      JSR PRINT_EA
00000926                          1635      
00000926  4E75                    1636      RTS
00000928                          1637  
00000928                          1638  Memory_Register
00000928  361E                    1639      MOVE.W (A6)+, D3
0000092A                          1640      
0000092A  4EB8 0906               1641      JSR         PRINT_ADDRESS
0000092E                          1642      
Line 1643 ERROR: Undefined symbol
0000092E  43F9 004DBB8E           1643      LEA         COMMA, A1
00000934                          1644      
00000934  103C 000E               1645      MOVE.B      #14, D0
00000938                          1646      
00000938  4E4F                    1647      TRAP #15
0000093A                          1648          
0000093A                          1649      *MOVE.W      (A6)+, D3
0000093A                          1650      
0000093A  183C 000F               1651      MOVE.B      #15, D4
0000093E                          1652      
0000093E  4EB9 00000B1E           1653      JSR         LOOP_MOVEM
00000944                          1654      
00000944  6000 F6CE               1655      BRA PARSE_MEMORY
00000948                          1656  
00000948                          1657  
00000948                          1658  OPPOSITE_LOOP
00000948  4241                    1659      CLR         D1
0000094A                          1660  
0000094A                          1661      *MOVE.W      (A6)+, D3
0000094A                          1662      
0000094A  183C 000F               1663      MOVE.B      #15, D4
0000094E                          1664      
0000094E  4EB9 00000968           1665      JSR OPPOSITE_LOOP_MOVEM
00000954                          1666      
Line 1667 ERROR: Undefined symbol
00000954  43F9 004DBB8E           1667      LEA COMMA, A1
0000095A                          1668      
0000095A  103C 000E               1669      MOVE.B      #14, D0
0000095E                          1670      
0000095E  4E4F                    1671      TRAP #15
00000960                          1672      
00000960  4EB8 0906               1673      JSR PRINT_ADDRESS
00000964                          1674      
00000964  6000 F6AE               1675      BRA PARSE_MEMORY
00000968                          1676  
00000968                          1677          
00000968                          1678  OPPOSITE_LOOP_MOVEM
00000968                          1679          
00000968  0903                    1680      BTST        D4, D3     * BIT TEST
0000096A                          1681  
0000096A  6600 0020               1682      BNE         OPPOSITE_IS_USED_FIRST
0000096E                          1683  
0000096E  5304                    1684      SUB.B       #1, D4
00000970                          1685      
00000970                          1686  OPPOSITE_CHECK
00000970  B83C 00FF               1687      CMP.B       #-1,  D4
00000974                          1688  
00000974  6700 0B80               1689      BEQ         DONE
00000978                          1690  
00000978  60EE                    1691      BRA         OPPOSITE_LOOP_MOVEM
0000097A                          1692      
0000097A                          1693  OPPOSITE_LOOP_MOVEM_SECOND               * FOR ALL REGISTERS PRINTED AFTER THE FIRST
0000097A  0903                    1694      BTST        D4, D3     * BIT TEST
0000097C                          1695  
0000097C  6600 0018               1696      BNE         OPPOSITE_IS_USED
00000980                          1697  
00000980  5304                    1698      SUB.B       #1, D4
00000982                          1699      
00000982                          1700  OPPOSITE_CHECK_SECOND
00000982  B83C 00FF               1701      CMP.B       #-1,  D4
00000986                          1702  
00000986  6700 0B6E               1703      BEQ         DONE
0000098A                          1704  
0000098A  60EE                    1705      BRA         OPPOSITE_LOOP_MOVEM_SECOND
0000098C                          1706  
0000098C                          1707  OPPOSITE_IS_USED_FIRST
0000098C  4EB9 000009AC           1708      JSR         OPPOSITE_PRINT_REGISTER_MOVEM
00000992                          1709  
00000992  5304                    1710      SUB.B       #1, D4
00000994                          1711  
00000994  60EC                    1712      BRA         OPPOSITE_CHECK_SECOND
00000996                          1713  
00000996                          1714  
00000996                          1715  OPPOSITE_IS_USED
Line 1716 ERROR: Undefined symbol
00000996  43F9 004DBB8E           1716      LEA         SLASH, A1
0000099C                          1717  
0000099C  103C 000E               1718      MOVE.B      #14, D0
000009A0                          1719  
000009A0  4E4F                    1720      TRAP #15
000009A2                          1721      
000009A2  4EB9 000009AC           1722      JSR         OPPOSITE_PRINT_REGISTER_MOVEM
000009A8                          1723  
000009A8  5304                    1724      SUB.B       #1, D4
000009AA                          1725  
000009AA  60D6                    1726      BRA         OPPOSITE_CHECK_SECOND
000009AC                          1727  
000009AC                          1728      
000009AC                          1729      
000009AC                          1730  OPPOSITE_PRINT_REGISTER_MOVEM
000009AC  41F9 000009BE           1731      LEA        OPPOSITE_jmp_table_MOVEM, A0
000009B2  4242                    1732      CLR        D2
000009B4  143C 0006               1733      MOVE.B     #6, D2
000009B8  C4C4                    1734      MULU       D4, D2                           
000009BA  4EF0 2000               1735      JMP        0(A0,D2)   *Jump indirect with index
000009BE                          1736                      
000009BE                          1737  OPPOSITE_jmp_table_MOVEM      
000009BE  4EF9 00000A1E           1738      JMP         OPPOSITE_bit0
000009C4  4EF9 00000A2E           1739                 JMP         OPPOSITE_bit1
000009CA  4EF9 00000A3E           1740                 JMP         OPPOSITE_bit2
000009D0  4EF9 00000A4E           1741                 JMP         OPPOSITE_bit3
000009D6  4EF9 00000A5E           1742                 JMP         OPPOSITE_bit4
000009DC  4EF9 00000A6E           1743                 JMP         OPPOSITE_bit5
000009E2  4EF9 00000A7E           1744                 JMP         OPPOSITE_bit6
000009E8  4EF9 00000A8E           1745                 JMP         OPPOSITE_bit7
000009EE  4EF9 00000A9E           1746                 JMP         OPPOSITE_bit8
000009F4  4EF9 00000AAE           1747                 JMP         OPPOSITE_bit9
000009FA  4EF9 00000ABE           1748                 JMP         OPPOSITE_bit10
00000A00  4EF9 00000ACE           1749                 JMP         OPPOSITE_bit11
00000A06  4EF9 00000ADE           1750                 JMP         OPPOSITE_bit12
00000A0C  4EF9 00000AEE           1751                 JMP         OPPOSITE_bit13
00000A12  4EF9 00000AFE           1752                 JMP         OPPOSITE_bit14
00000A18  4EF9 00000B0E           1753                 JMP         OPPOSITE_bit15
00000A1E                          1754          
00000A1E                          1755   
00000A1E                          1756   
00000A1E                          1757   
00000A1E                          1758  OPPOSITE_bit0    * D0
00000A1E  1E3C 0007               1759      MOVE.B    #%111, D7    * REGISTER
00000A22                          1760      
00000A22  1C3C 0001               1761      MOVE.B    #%001, D6    * MODE
00000A26                          1762  
00000A26  4EB9 0000130A           1763      JSR        PRINT_EA
00000A2C                          1764  
00000A2C  4E75                    1765      RTS    
00000A2E                          1766  
00000A2E                          1767  OPPOSITE_bit1    * D1
00000A2E  1E3C 0006               1768      MOVE.B    #%110, D7    * REGISTER
00000A32                          1769      
00000A32  1C3C 0001               1770      MOVE.B    #%001, D6    * MODE
00000A36                          1771  
00000A36  4EB9 0000130A           1772      JSR        PRINT_EA
00000A3C                          1773  
00000A3C  4E75                    1774      RTS    
00000A3E                          1775  
00000A3E                          1776  OPPOSITE_bit2    * D2
00000A3E  1E3C 0005               1777      MOVE.B    #%101, D7    * REGISTER
00000A42                          1778      
00000A42  1C3C 0001               1779      MOVE.B    #%001, D6    * MODE
00000A46                          1780  
00000A46  4EB9 0000130A           1781      JSR        PRINT_EA    
00000A4C                          1782  
00000A4C  4E75                    1783      RTS
00000A4E                          1784  
00000A4E                          1785  OPPOSITE_bit3    * D3
00000A4E  1E3C 0004               1786      MOVE.B    #%100, D7    * REGISTER
00000A52                          1787      
00000A52  1C3C 0001               1788      MOVE.B    #%001, D6    * MODE
00000A56                          1789  
00000A56  4EB9 0000130A           1790      JSR        PRINT_EA
00000A5C                          1791  
00000A5C  4E75                    1792      RTS    
00000A5E                          1793  
00000A5E                          1794  OPPOSITE_bit4    * D4
00000A5E  1E3C 0003               1795      MOVE.B    #%011, D7    * REGISTER
00000A62                          1796  
00000A62  1C3C 0001               1797      MOVE.B    #%001, D6    * MODE
00000A66                          1798  
00000A66  4EB9 0000130A           1799      JSR        PRINT_EA
00000A6C                          1800  
00000A6C  4E75                    1801      RTS    
00000A6E                          1802  
00000A6E                          1803  
00000A6E                          1804  OPPOSITE_bit5    * D5
00000A6E  1E3C 0002               1805      MOVE.B    #%010, D7    * REGISTER
00000A72                          1806      
00000A72  1C3C 0001               1807      MOVE.B    #%001, D6    * MODE
00000A76                          1808  
00000A76  4EB9 0000130A           1809      JSR        PRINT_EA
00000A7C                          1810  
00000A7C  4E75                    1811      RTS    
00000A7E                          1812  
00000A7E                          1813  OPPOSITE_bit6    * D6
00000A7E  1E3C 0001               1814      MOVE.B    #%001, D7    * REGISTER
00000A82                          1815      
00000A82  1C3C 0001               1816      MOVE.B    #%001, D6    * MODE
00000A86                          1817  
00000A86  4EB9 0000130A           1818      JSR        PRINT_EA
00000A8C                          1819  
00000A8C  4E75                    1820      RTS    
00000A8E                          1821  
00000A8E                          1822  OPPOSITE_bit7    * D7
00000A8E  1E3C 0000               1823      MOVE.B    #%000, D7    * REGISTER
00000A92                          1824      
00000A92  1C3C 0001               1825      MOVE.B    #%001, D6    * MODE
00000A96                          1826  
00000A96  4EB9 0000130A           1827      JSR        PRINT_EA
00000A9C                          1828  
00000A9C  4E75                    1829      RTS    
00000A9E                          1830  
00000A9E                          1831  OPPOSITE_bit8    * A0
00000A9E  1E3C 0007               1832      MOVE.B    #%111, D7    * REGISTER
00000AA2                          1833      
00000AA2  1C3C 0000               1834      MOVE.B    #%000, D6    * MODE
00000AA6                          1835  
00000AA6  4EB9 0000130A           1836      JSR        PRINT_EA
00000AAC                          1837  
00000AAC  4E75                    1838      RTS    
00000AAE                          1839  
00000AAE                          1840  OPPOSITE_bit9    * A1
00000AAE  1E3C 0006               1841      MOVE.B    #%110, D7    * REGISTER
00000AB2                          1842      
00000AB2  1C3C 0000               1843      MOVE.B    #%000, D6    * MODE
00000AB6                          1844  
00000AB6  4EB9 0000130A           1845      JSR        PRINT_EA
00000ABC                          1846  
00000ABC  4E75                    1847      RTS    
00000ABE                          1848  
00000ABE                          1849  OPPOSITE_bit10    * A2
00000ABE  1E3C 0005               1850      MOVE.B    #%101, D7    * REGISTER
00000AC2                          1851      
00000AC2  1C3C 0000               1852      MOVE.B    #%000, D6    * MODE
00000AC6                          1853  
00000AC6  4EB9 0000130A           1854      JSR        PRINT_EA
00000ACC                          1855  
00000ACC  4E75                    1856      RTS    
00000ACE                          1857  
00000ACE                          1858  
00000ACE                          1859  OPPOSITE_bit11    * A5
00000ACE  1E3C 0002               1860      MOVE.B    #%010, D7    * REGISTER
00000AD2                          1861      
00000AD2  1C3C 0000               1862      MOVE.B    #%000, D6    * MODE
00000AD6                          1863  
00000AD6  4EB9 0000130A           1864      JSR        PRINT_EA
00000ADC                          1865  
00000ADC  4E75                    1866      RTS    
00000ADE                          1867  
00000ADE                          1868  OPPOSITE_bit12    * A4
00000ADE  1E3C 0003               1869      MOVE.B    #%011, D7    * REGISTER
00000AE2                          1870      
00000AE2  1C3C 0000               1871      MOVE.B    #%000, D6    * MODE
00000AE6                          1872  
00000AE6  4EB9 0000130A           1873      JSR        PRINT_EA
00000AEC                          1874  
00000AEC  4E75                    1875      RTS    
00000AEE                          1876  
00000AEE                          1877  
00000AEE                          1878  OPPOSITE_bit13    * A5
00000AEE  1E3C 0002               1879      MOVE.B    #%010, D7    * REGISTER
00000AF2                          1880      
00000AF2  1C3C 0000               1881      MOVE.B    #%000, D6    * MODE
00000AF6                          1882  
00000AF6  4EB9 0000130A           1883      JSR        PRINT_EA
00000AFC                          1884  
00000AFC  4E75                    1885      RTS    
00000AFE                          1886  
00000AFE                          1887  
00000AFE                          1888  OPPOSITE_bit14     * A6
00000AFE  1E3C 0001               1889      MOVE.B    #%001, D7    * REGISTER
00000B02                          1890      
00000B02  1C3C 0000               1891      MOVE.B    #%000, D6    * MODE
00000B06                          1892  
00000B06  4EB9 0000130A           1893      JSR        PRINT_EA
00000B0C                          1894  
00000B0C  4E75                    1895      RTS        
00000B0E                          1896  
00000B0E                          1897  
00000B0E                          1898  OPPOSITE_bit15    * A7
00000B0E  1E3C 0000               1899      MOVE.B    #%000, D7    * REGISTER
00000B12                          1900      
00000B12  1C3C 0000               1901      MOVE.B    #%000, D6    * MODE
00000B16                          1902  
00000B16  4EB9 0000130A           1903      JSR        PRINT_EA
00000B1C                          1904  
00000B1C  4E75                    1905      RTS    
00000B1E                          1906  
00000B1E                          1907  
00000B1E                          1908  
00000B1E                          1909  
00000B1E                          1910  
00000B1E                          1911  LOOP_MOVEM
00000B1E                          1912          
00000B1E  0903                    1913      BTST        D4, D3     * BIT TEST
00000B20                          1914  
00000B20  6600 0020               1915      BNE         IS_USED_FIRST
00000B24                          1916  
00000B24  5304                    1917      SUB.B       #1, D4
00000B26                          1918      
00000B26                          1919  CHECK
00000B26  B83C 00FF               1920      CMP.B       #-1,  D4
00000B2A                          1921  
00000B2A  6700 09CA               1922      BEQ         DONE
00000B2E                          1923  
00000B2E  60EE                    1924      BRA         LOOP_MOVEM
00000B30                          1925      
00000B30                          1926  LOOP_MOVEM_SECOND               * FOR ALL REGISTERS PRINTED AFTER THE FIRST
00000B30  0903                    1927      BTST        D4, D3     * BIT TEST
00000B32                          1928  
00000B32  6600 0018               1929      BNE         IS_USED
00000B36                          1930  
00000B36  5304                    1931      SUB.B       #1, D4
00000B38                          1932      
00000B38                          1933  CHECK_SECOND
00000B38  B83C 00FF               1934      CMP.B       #-1,  D4
00000B3C                          1935  
00000B3C  6700 09B8               1936      BEQ         DONE
00000B40                          1937  
00000B40  60EE                    1938      BRA         LOOP_MOVEM_SECOND
00000B42                          1939  
00000B42                          1940  IS_USED_FIRST
00000B42  4EB9 00000B62           1941      JSR         PRINT_REGISTER_MOVEM
00000B48                          1942  
00000B48  5304                    1943      SUB.B       #1, D4
00000B4A                          1944  
00000B4A  60EC                    1945      BRA         CHECK_SECOND
00000B4C                          1946  
00000B4C                          1947  
00000B4C                          1948  IS_USED
Line 1949 ERROR: Undefined symbol
00000B4C  43F9 004DBB8E           1949      LEA         SLASH, A1
00000B52                          1950  
00000B52  103C 000E               1951      MOVE.B      #14, D0
00000B56                          1952  
00000B56  4E4F                    1953      TRAP #15
00000B58                          1954      
00000B58  4EB9 00000B62           1955      JSR         PRINT_REGISTER_MOVEM
00000B5E                          1956  
00000B5E  5304                    1957      SUB.B       #1, D4
00000B60                          1958  
00000B60  60D6                    1959      BRA         CHECK_SECOND
00000B62                          1960  
00000B62                          1961  
00000B62                          1962  
00000B62                          1963  
00000B62                          1964  
00000B62                          1965  PRINT_REGISTER_MOVEM
00000B62  41F9 00000B74           1966      LEA         jmp_table_MOVEM, A0
00000B68  4242                    1967      CLR         D2
00000B6A  143C 0006               1968      MOVE.B      #6, D2
00000B6E  C4C4                    1969      MULU        D4, D2                           
00000B70  4EF0 2000               1970      JMP         0(A0,D2)   *Jump indirect with index
00000B74                          1971                      
00000B74                          1972  jmp_table_MOVEM      
00000B74  4EF9 00000BD4           1973      JMP         bit0
00000B7A  4EF9 00000BE4           1974                 JMP         bit1
00000B80  4EF9 00000BF4           1975                 JMP         bit2
00000B86  4EF9 00000C04           1976                 JMP         bit3
00000B8C  4EF9 00000C14           1977                 JMP         bit4
00000B92  4EF9 00000C24           1978                 JMP         bit5
00000B98  4EF9 00000C34           1979                 JMP         bit6
00000B9E  4EF9 00000C44           1980                 JMP         bit7
00000BA4  4EF9 00000C54           1981                 JMP         bit8
00000BAA  4EF9 00000C64           1982                 JMP         bit9
00000BB0  4EF9 00000C74           1983                 JMP         bit10
00000BB6  4EF9 00000C84           1984                 JMP         bit11
00000BBC  4EF9 00000C94           1985                 JMP         bit12
00000BC2  4EF9 00000CA4           1986                 JMP         bit13
00000BC8  4EF9 00000CB4           1987                 JMP         bit14
00000BCE  4EF9 00000CC4           1988                 JMP         bit15
00000BD4                          1989          
00000BD4                          1990   
00000BD4                          1991   
00000BD4                          1992   
00000BD4                          1993  bit0    * D0
00000BD4  1E3C 0000               1994      MOVE.B    #%000, D7    * REGISTER
00000BD8                          1995      
00000BD8  1C3C 0000               1996      MOVE.B    #%000, D6    * MODE
00000BDC                          1997  
00000BDC  4EB9 0000130A           1998      JSR        PRINT_EA
00000BE2                          1999  
00000BE2  4E75                    2000      RTS    
00000BE4                          2001  
00000BE4                          2002  bit1    * D1
00000BE4  1E3C 0001               2003      MOVE.B    #%001, D7    * REGISTER
00000BE8                          2004      
00000BE8  1C3C 0000               2005      MOVE.B    #%000, D6    * MODE
00000BEC                          2006  
00000BEC  4EB9 0000130A           2007      JSR        PRINT_EA
00000BF2                          2008  
00000BF2  4E75                    2009      RTS    
00000BF4                          2010  
00000BF4                          2011  bit2    * D2
00000BF4  1E3C 0002               2012      MOVE.B    #%010, D7    * REGISTER
00000BF8                          2013      
00000BF8  1C3C 0000               2014      MOVE.B    #%000, D6    * MODE
00000BFC                          2015  
00000BFC  4EB9 0000130A           2016      JSR        PRINT_EA    
00000C02                          2017  
00000C02  4E75                    2018      RTS
00000C04                          2019  
00000C04                          2020  bit3    * D3
00000C04  1E3C 0003               2021      MOVE.B    #%011, D7    * REGISTER
00000C08                          2022      
00000C08  1C3C 0000               2023      MOVE.B    #%000, D6    * MODE
00000C0C                          2024  
00000C0C  4EB9 0000130A           2025      JSR        PRINT_EA
00000C12                          2026  
00000C12  4E75                    2027      RTS    
00000C14                          2028  
00000C14                          2029  bit4    * D4
00000C14  1E3C 0004               2030      MOVE.B    #%100, D7    * REGISTER
00000C18                          2031  
00000C18  1C3C 0000               2032      MOVE.B    #%000, D6    * MODE
00000C1C                          2033  
00000C1C  4EB9 0000130A           2034      JSR        PRINT_EA
00000C22                          2035  
00000C22  4E75                    2036      RTS    
00000C24                          2037  
00000C24                          2038  
00000C24                          2039  bit5    * D5
00000C24  1E3C 0005               2040      MOVE.B    #%101, D7    * REGISTER
00000C28                          2041      
00000C28  1C3C 0000               2042      MOVE.B    #%000, D6    * MODE
00000C2C                          2043  
00000C2C  4EB9 0000130A           2044      JSR        PRINT_EA
00000C32                          2045  
00000C32  4E75                    2046      RTS    
00000C34                          2047  
00000C34                          2048  bit6    * D6
00000C34  1E3C 0006               2049      MOVE.B    #%110, D7    * REGISTER
00000C38                          2050      
00000C38  1C3C 0000               2051      MOVE.B    #%000, D6    * MODE
00000C3C                          2052  
00000C3C  4EB9 0000130A           2053      JSR        PRINT_EA
00000C42                          2054  
00000C42  4E75                    2055      RTS    
00000C44                          2056  
00000C44                          2057  bit7    * D7
00000C44  1E3C 0007               2058      MOVE.B    #%111, D7    * REGISTER
00000C48                          2059      
00000C48  1C3C 0000               2060      MOVE.B    #%000, D6    * MODE
00000C4C                          2061  
00000C4C  4EB9 0000130A           2062      JSR        PRINT_EA
00000C52                          2063  
00000C52  4E75                    2064      RTS    
00000C54                          2065  
00000C54                          2066  bit8    * A0
00000C54  1E3C 0000               2067      MOVE.B    #%000, D7    * REGISTER
00000C58                          2068      
00000C58  1C3C 0001               2069      MOVE.B    #%001, D6    * MODE
00000C5C                          2070  
00000C5C  4EB9 0000130A           2071      JSR        PRINT_EA
00000C62                          2072  
00000C62  4E75                    2073      RTS    
00000C64                          2074  
00000C64                          2075  bit9    * A1
00000C64  1E3C 0001               2076      MOVE.B    #%001, D7    * REGISTER
00000C68                          2077      
00000C68  1C3C 0001               2078      MOVE.B    #%001, D6    * MODE
00000C6C                          2079  
00000C6C  4EB9 0000130A           2080      JSR        PRINT_EA
00000C72                          2081  
00000C72  4E75                    2082      RTS    
00000C74                          2083  
00000C74                          2084  bit10    * A2
00000C74  1E3C 0002               2085      MOVE.B    #%010, D7    * REGISTER
00000C78                          2086      
00000C78  1C3C 0001               2087      MOVE.B    #%001, D6    * MODE
00000C7C                          2088  
00000C7C  4EB9 0000130A           2089      JSR        PRINT_EA
00000C82                          2090  
00000C82  4E75                    2091      RTS    
00000C84                          2092  
00000C84                          2093  
00000C84                          2094  bit11    * A5
00000C84  1E3C 0003               2095      MOVE.B    #%011, D7    * REGISTER
00000C88                          2096      
00000C88  1C3C 0001               2097      MOVE.B    #%001, D6    * MODE
00000C8C                          2098  
00000C8C  4EB9 0000130A           2099      JSR        PRINT_EA
00000C92                          2100  
00000C92  4E75                    2101      RTS    
00000C94                          2102  
00000C94                          2103  bit12    * A4
00000C94  1E3C 0004               2104      MOVE.B    #%100, D7    * REGISTER
00000C98                          2105      
00000C98  1C3C 0001               2106      MOVE.B    #%001, D6    * MODE
00000C9C                          2107  
00000C9C  4EB9 0000130A           2108      JSR        PRINT_EA
00000CA2                          2109  
00000CA2  4E75                    2110      RTS    
00000CA4                          2111  
00000CA4                          2112  
00000CA4                          2113  bit13    * A5
00000CA4  1E3C 0005               2114      MOVE.B    #%101, D7    * REGISTER
00000CA8                          2115      
00000CA8  1C3C 0001               2116      MOVE.B    #%001, D6    * MODE
00000CAC                          2117  
00000CAC  4EB9 0000130A           2118      JSR        PRINT_EA
00000CB2                          2119  
00000CB2  4E75                    2120      RTS    
00000CB4                          2121  
00000CB4                          2122  
00000CB4                          2123  bit14     * A6
00000CB4  1E3C 0006               2124      MOVE.B    #%110, D7    * REGISTER
00000CB8                          2125      
00000CB8  1C3C 0001               2126      MOVE.B    #%001, D6    * MODE
00000CBC                          2127  
00000CBC  4EB9 0000130A           2128      JSR        PRINT_EA
00000CC2                          2129  
00000CC2  4E75                    2130      RTS        
00000CC4                          2131  
00000CC4                          2132  
00000CC4                          2133  bit15    * A7
00000CC4  1E3C 0007               2134      MOVE.B    #%111, D7    * REGISTER
00000CC8                          2135      
00000CC8  1C3C 0001               2136      MOVE.B    #%001, D6    * MODE
00000CCC                          2137  
00000CCC  4EB9 0000130A           2138      JSR        PRINT_EA
00000CD2                          2139  
00000CD2  4E75                    2140      RTS    
00000CD4                          2141  
00000CD4                          2142  DONE_MOVEM_LOOP
00000CD4  4E75                    2143      RTS
00000CD6                          2144  
00000CD6                          2145     * SIMHALT             ; halt simulator
00000CD6                          2146      *INCLUDE 'MESSAGE_Data.X68'
00000CD6                          2147     * INCLUDE 'JUMPTABLE EA.X68'
00000CD6                          2148  
00000CD6                          2149  
00000CD6                          2150     * END    START        ; last line of source
00000CD6                          2151  
00000CD6                          2152  
00000CD6                          2153  
00000CD6                          2154  
00000CD6                          2155  
00000CD6                          2156  
00000CD6                          2157  
00000CD6                          2158  
00000CD6                          2159  
00000CD6                          2160  
00000CD6                          2161  
00000CD6                          2162  
00000CD6                          2163  
00000CD6                          2164  
00000CD6                          2165  
00000CD6                          2166  
00000CD6                          2167  
00000CD6                          2168  
00000CD6                          2169  
00000CD6                          2170  
00000CD6                          2171  
00000CD6                          2172  
00000CD6                          2173  
00000CD6                          2174  
00000CD6                          2175  
00000CD6                          2176  
00000CD6                          2177  
00000CD6                          2178  
00000CD6                          2179  
00000CD6                          2180  
00000CD6                          2181  
00000CD6                          2182  
00000CD6                          2183  
00000CD6                          2184  
00000CD6                          2185  
00000CD6                          2186  
00000CD6                          2187  
00000CD6                          2188  
00000CD6                          2189  -------------------- end include --------------------
00000CD6                          2190                  INCLUDE 'MOVEQ.X68'
00000CD6                          2191  
00000CD6                          2192  MOVEQ 
00000CD6                          2193  
00000CD6                          2194                   * ADD message
Line 2195 ERROR: Undefined symbol
00000CD6  43F9 004DBB8E           2195                   LEA      MOVEQ_MESSAGE,    A1
00000CDC  103C 000E               2196                   MOVE.B   #14,            D0
00000CE0  4E4F                    2197                   TRAP #15
00000CE2                          2198                   
00000CE2                          2199                   * print out size L
Line 2200 ERROR: Undefined symbol
00000CE2  43F9 004DBB8E           2200                   LEA      SIZE_L_PRINT,    A1
00000CE8  103C 000E               2201                   MOVE.B   #14,             D0          
00000CEC  4E4F                    2202                   TRAP #15   
00000CEE                          2203                   
00000CEE                          2204                   * print out immediate Data
00000CEE                          2205                   
Line 2206 ERROR: Undefined symbol
00000CEE  43F9 004DBB8E           2206                  LEA     POUND_SIGN, A1
00000CF4                          2207              
00000CF4  103C 000E               2208                  MOVE.B  #14, D0
00000CF8                          2209              
00000CF8  4E4F                    2210                  TRAP #15
00000CFA                          2211              
Line 2212 ERROR: Undefined symbol
00000CFA  43F9 004DBB8E           2212                  LEA     HEX_SIGN, A1
00000D00                          2213              
00000D00  4E4F                    2214                  TRAP #15
00000D02                          2215                  
00000D02  4280                    2216                  CLR.L       D0              *Zero it
00000D04                          2217  
00000D04  3015                    2218                  MOVE.W      (A5),D0     *We'll play with it here
00000D06                          2219                 
00000D06  123C 0008               2220                  MOVE.B      #8, D1
00000D0A                          2221                 
00000D0A  E368                    2222                  LSL.W       D1, D0
00000D0C                          2223  
00000D0C  123C 0008               2224                  MOVE.B      #8,D1       *Shift 12 bits to the right  
00000D10                          2225  
00000D10  E268                    2226                  LSR.W       D1,D0           *Move the bits -> D0 holds DATA
00000D12                          2227                      
00000D12  4285                    2228                  CLR.L D5
00000D14                          2229                 
00000D14  3A00                    2230                  MOVE.W D0, D5      
00000D16                          2231          
00000D16  4EB9 0000126C           2232                  JSR         HEX_TO_ASCII
00000D1C                          2233                  
Line 2234 ERROR: Undefined symbol
00000D1C  43F9 004DBB8E           2234                  LEA      COMMA,    A1
00000D22  103C 000E               2235                  MOVE.B   #14,            D0
00000D26  4E4F                    2236                  TRAP #15
00000D28                          2237                   
00000D28                          2238                  * for the first Dn 
00000D28  4286                    2239                  CLR.L D6
00000D2A                          2240                  
00000D2A  4EB8 02AA               2241                  JSR     GET_Data_Register
00000D2E                          2242                  
00000D2E  1C3C 0000               2243                  MOVE.B  #%000, D6 * for mode
00000D32                          2244                   
00000D32  4EB9 0000130A           2245                  JSR     PRINT_EA *by using jmp table
00000D38                          2246                   
00000D38  6000 F2DA               2247                  BRA PARSE_MEMORY
00000D3C                          2248          
00000D3C                          2249  
00000D3C                          2250  
00000D3C                          2251  
00000D3C                          2252  
00000D3C                          2253  
00000D3C                          2254  
00000D3C                          2255  
00000D3C                          2256  
00000D3C                          2257  
00000D3C                          2258  
00000D3C                          2259  
00000D3C                          2260  
00000D3C                          2261  -------------------- end include --------------------
00000D3C                          2262                  INCLUDE 'DAMIAN_OP_CODE.X68'
00000D3C  4280                    2263  SHIFTS           CLR.L D0
00000D3E                          2264                      
00000D3E  4286                    2265                   CLR.L D6
00000D40                          2266  
00000D40  4281                    2267                   CLR.L D1
00000D42                          2268                   
00000D42  3015                    2269                   MOVE.W (A5), D0
00000D44                          2270                   
00000D44  E148                    2271                   LSL.W #8, D0
00000D46                          2272                   
00000D46  123C 000E               2273                   MOVE.B #14, D1
00000D4A                          2274                   
00000D4A  E268                    2275                   LSR.W D1, D0
00000D4C                          2276                   
00000D4C  B03C 0003               2277                   CMP.B  #%11, D0            * check to see if its memory shift
00000D50                          2278                   
00000D50  6700 0024               2279                   BEQ MEMORY_SHIFTS
00000D54                          2280                   
00000D54  3015                    2281                   MOVE.W     (A5), D0
00000D56                          2282                   
00000D56  123C 000B               2283                   MOVE.B     #11, D1
00000D5A                          2284                   
00000D5A  E368                    2285                   LSL.W      D1, D0
00000D5C                          2286                   
00000D5C  123C 000E               2287                   MOVE.B     #14, D1
00000D60                          2288                   
00000D60  E268                    2289                   LSR.W      D1, D0
00000D62                          2290                   
00000D62  B03C 0000               2291                   CMP.B      #%00, D0
00000D66                          2292                   
00000D66  6700 010A               2293                   BEQ        ASD
00000D6A                          2294                   
00000D6A  B03C 0001               2295                   CMP.B      #%01, D0
00000D6E                          2296                   
00000D6E  6700 0032               2297                   BEQ        LSD
00000D72                          2298                   
00000D72  6000 0096               2299                   BRA        ROD
00000D76                          2300                   
00000D76                          2301                   
00000D76                          2302  MEMORY_SHIFTS
00000D76  3015                    2303                   MOVE.W (A5),D0
00000D78                          2304                   
00000D78  E948                    2305                   LSL.W #4,D0            *shift out the opcode
00000D7A                          2306                   
00000D7A  123C 000D               2307                   MOVE.B #13,D1          
00000D7E                          2308                   
00000D7E  E268                    2309                   LSR.W D1,D0            *shift out everything, so only three bits after opcode are there
00000D80                          2310                   
00000D80  B03C 0001               2311                   CMP.B #1,D0            
00000D84                          2312                   
00000D84  6700 001C               2313                   BEQ LSD                *if the bits are 1, it is a logical shift
00000D88                          2314                   
00000D88  B03C 0003               2315                   CMP.B #3,D0
00000D8C                          2316                   
00000D8C  6700 007C               2317                   BEQ ROD                *if the bits are 3, it is a rotation
00000D90                          2318                   
00000D90  3015                    2319                   MOVE.W (A5),D0
00000D92                          2320                   
00000D92  E948                    2321                   LSL.W #4,D0            *shift out the opcode
00000D94                          2322                   
00000D94  123C 000D               2323                   MOVE.B #13,D1          
00000D98                          2324                   
00000D98  E268                    2325                   LSR.W D1,D0            *shift out everything, so only three bits after opcode are there   
00000D9A                          2326                      
00000D9A  B03C 0000               2327                   CMP.B  #0, D0
00000D9E                          2328                   
00000D9E  6700 00D2               2329                   BEQ    ASD
00000DA2                          2330                   
00000DA2                          2331  
00000DA2  4280                    2332  LSD              CLR.L D0               *still need to do checks, since an asd shift could still be a possibility
00000DA4                          2333                   
00000DA4  4281                    2334                   CLR.L D1
00000DA6                          2335                                                 
00000DA6  3015                    2336                   MOVE.W (A5), D0
00000DA8                          2337                   
00000DA8  EF48                    2338                   LSL.W  #7, D0
00000DAA                          2339                   
00000DAA  123C 000F               2340                   MOVE.B #15, D1
00000DAE                          2341                   
00000DAE  E268                    2342                   LSR.W  D1, D0
00000DB0                          2343                   
00000DB0  B03C 0001               2344                   CMP.B  #1, D0
00000DB4                          2345                   
00000DB4  6700 0006               2346                   BEQ LSL
00000DB8                          2347                   
00000DB8  6000 0024               2348                   BRA LSR
00000DBC                          2349                   
00000DBC                          2350  
00000DBC                          2351  LSL
Line 2352 ERROR: Undefined symbol
00000DBC  43F9 004DBB8E           2352                   LEA LSL_MESSAGE, A1    * print message
00000DC2                          2353                   
00000DC2  103C 000E               2354                   MOVE.B #14, D0
00000DC6                          2355                   
00000DC6  4E4F                    2356                   TRAP #15
00000DC8                          2357              
00000DC8  3015                    2358                   MOVE.W (A5), D0
00000DCA                          2359                   
00000DCA  E148                    2360                   LSL.W #8, D0
00000DCC                          2361                   
00000DCC  123C 000E               2362                   MOVE.B #14, D1
00000DD0                          2363                   
00000DD0  E268                    2364                   LSR.W D1, D0
00000DD2                          2365                   
00000DD2  B03C 0003               2366                   CMP.B  #%11, D0        * check to see if it is memory and not register shift
00000DD6                          2367                   
00000DD6  6700 0028               2368                   BEQ LSD_MEMORY
00000DDA                          2369                   
00000DDA  6000 00FA               2370                   BRA PRINTOUT_REGISTER_SHIFTS_EA
00000DDE                          2371  
00000DDE                          2372  LSR              
Line 2373 ERROR: Undefined symbol
00000DDE  43F9 004DBB8E           2373                   LEA LSR_MESSAGE, A1            * print message
00000DE4                          2374                   
00000DE4  103C 000E               2375                   MOVE.B #14, D0
00000DE8                          2376                   
00000DE8  4E4F                    2377                   TRAP #15
00000DEA                          2378          
00000DEA  3015                    2379                   MOVE.W (A5), D0
00000DEC                          2380                   
00000DEC  E148                    2381                   LSL.W #8, D0
00000DEE                          2382                   
00000DEE  123C 000E               2383                   MOVE.B #14, D1
00000DF2                          2384                   
00000DF2  E268                    2385                   LSR.W D1, D0
00000DF4                          2386                   
00000DF4  B03C 0003               2387                   CMP.B  #%11, D0            * check to see if memory shift
00000DF8                          2388                   
00000DF8  6700 0006               2389                   BEQ LSD_MEMORY
00000DFC                          2390                   
00000DFC  6000 00D8               2391                   BRA PRINTOUT_REGISTER_SHIFTS_EA
00000E00                          2392                   
00000E00                          2393  LSD_MEMORY
00000E00  4EB9 00000F7E           2394                   JSR    PRINTOUT_MEMORY_SHIFTS_EA
00000E06                          2395                   
00000E06  6000 F20C               2396                   BRA PARSE_MEMORY
00000E0A                          2397              
00000E0A                          2398  
00000E0A  4280                    2399  ROD              CLR.L D0               *same check as logical shift, since an arithmetic shift could still be possible
00000E0C                          2400                   
00000E0C  4281                    2401                   CLR.L D1
00000E0E                          2402                   
00000E0E  3015                    2403                   MOVE.W (A5), D0
00000E10                          2404                   
00000E10  EF48                    2405                   LSL.W  #7, D0
00000E12                          2406                   
00000E12  123C 000F               2407                   MOVE.B #15, D1
00000E16                          2408                   
00000E16  E268                    2409                   LSR.W  D1, D0
00000E18                          2410                   
00000E18  B03C 0001               2411                   CMP.B  #1, D0
00000E1C                          2412                   
00000E1C  6700 0006               2413                   BEQ ROL
00000E20                          2414                   
00000E20  6000 0024               2415                   BRA ROR
00000E24                          2416  
00000E24                          2417  ROL              
Line 2418 ERROR: Undefined symbol
00000E24  43F9 004DBB8E           2418                   LEA ROL_MESSAGE, A1
00000E2A                          2419                   
00000E2A  103C 000E               2420                   MOVE.B #14, D0
00000E2E                          2421                   
00000E2E  4E4F                    2422                   TRAP #15
00000E30                          2423  
00000E30  3015                    2424                   MOVE.W (A5), D0
00000E32                          2425                   
00000E32  E148                    2426                   LSL.W #8, D0
00000E34                          2427                   
00000E34  123C 000E               2428                   MOVE.B #14, D1
00000E38                          2429                   
00000E38  E268                    2430                   LSR.W D1, D0
00000E3A                          2431                   
00000E3A  B03C 0003               2432                   CMP.B  #%11, D0            * check to see if its memory shift
00000E3E                          2433                   
00000E3E  6700 0028               2434                   BEQ ROD_MEMORY
00000E42                          2435                   
00000E42  6000 0092               2436                   BRA PRINTOUT_REGISTER_SHIFTS_EA
00000E46                          2437  
00000E46                          2438  ROR       
Line 2439 ERROR: Undefined symbol
00000E46  43F9 004DBB8E           2439                   LEA ROR_MESSAGE, A1
00000E4C                          2440                   
00000E4C  103C 000E               2441                   MOVE.B #14, D0
00000E50                          2442                   
00000E50  4E4F                    2443                   TRAP #15
00000E52                          2444                   
00000E52  3015                    2445                   MOVE.W (A5), D0
00000E54                          2446                   
00000E54  E148                    2447                   LSL.W #8, D0
00000E56                          2448                   
00000E56  123C 000E               2449                   MOVE.B #14, D1
00000E5A                          2450                   
00000E5A  E268                    2451                   LSR.W D1, D0
00000E5C                          2452                   
00000E5C  B03C 0003               2453                   CMP.B  #%11, D0            * check to see if its memory shift
00000E60                          2454                   
00000E60  6700 0006               2455                   BEQ ROD_MEMORY
00000E64                          2456                   
00000E64  6000 0070               2457                   BRA PRINTOUT_REGISTER_SHIFTS_EA
00000E68                          2458  
00000E68                          2459  ROD_MEMORY       
00000E68  4EB9 00000F7E           2460                   JSR    PRINTOUT_MEMORY_SHIFTS_EA
00000E6E                          2461                   
00000E6E  6000 F1A4               2462                   BRA PARSE_MEMORY
00000E72                          2463                   
00000E72                          2464                   
00000E72  3015                    2465  ASD              MOVE.W (A5), D0
00000E74                          2466                   
00000E74  EF48                    2467                   LSL.W  #7, D0
00000E76                          2468                   
00000E76  123C 000F               2469                   MOVE.B #15, D1
00000E7A                          2470                   
00000E7A  E268                    2471                   LSR.W  D1, D0
00000E7C                          2472                   
00000E7C  B03C 0001               2473                   CMP.B  #1, D0
00000E80                          2474                   
00000E80  6700 0006               2475                   BEQ ASL
00000E84                          2476                   
00000E84  6000 0024               2477                   BRA ASR
00000E88                          2478                   
00000E88                          2479  ASL
Line 2480 ERROR: Undefined symbol
00000E88  43F9 004DBB8E           2480                   LEA ASL_MESSAGE, A1
00000E8E                          2481                   
00000E8E  103C 000E               2482                   MOVE.B #14, D0
00000E92                          2483                   
00000E92  4E4F                    2484                   TRAP #15
00000E94                          2485                   
00000E94  3015                    2486                   MOVE.W (A5), D0
00000E96                          2487                   
00000E96  E148                    2488                   LSL.W #8, D0
00000E98                          2489                   
00000E98  123C 000E               2490                   MOVE.B #14, D1
00000E9C                          2491                   
00000E9C  E268                    2492                   LSR.W D1, D0
00000E9E                          2493                   
00000E9E  B03C 0003               2494                   CMP.B  #%11, D0            * check to see if its memory shift
00000EA2                          2495                   
00000EA2  6700 0028               2496                   BEQ ASD_MEMORY
00000EA6                          2497                   
00000EA6  6000 002E               2498                   BRA PRINTOUT_REGISTER_SHIFTS_EA
00000EAA                          2499                                    
00000EAA                          2500  
00000EAA                          2501  ASR              
Line 2502 ERROR: Undefined symbol
00000EAA  43F9 004DBB8E           2502                   LEA ASR_MESSAGE, A1
00000EB0                          2503                   
00000EB0  103C 000E               2504                   MOVE.B #14, D0
00000EB4                          2505                   
00000EB4  4E4F                    2506                   TRAP #15
00000EB6                          2507                   
00000EB6  3015                    2508                   MOVE.W (A5), D0
00000EB8                          2509                   
00000EB8  E148                    2510                   LSL.W #8, D0
00000EBA                          2511                   
00000EBA  123C 000E               2512                   MOVE.B #14, D1
00000EBE                          2513                   
00000EBE  E268                    2514                   LSR.W D1, D0
00000EC0                          2515                   
00000EC0  B03C 0003               2516                   CMP.B  #%11, D0            * check to see if its memory shift
00000EC4                          2517                   
00000EC4  6700 0006               2518                   BEQ ASD_MEMORY
00000EC8                          2519                   
00000EC8  6000 000C               2520                   BRA PRINTOUT_REGISTER_SHIFTS_EA
00000ECC                          2521  
00000ECC                          2522  ASD_MEMORY
00000ECC  4EB9 00000F7E           2523                   JSR    PRINTOUT_MEMORY_SHIFTS_EA
00000ED2                          2524                   
00000ED2  6000 F140               2525                   BRA PARSE_MEMORY
00000ED6                          2526                   
00000ED6                          2527  PRINTOUT_REGISTER_SHIFTS_EA
Line 2528 ERROR: Undefined symbol
00000ED6  43F9 004DBB8E           2528                   LEA PERIOD, A1
00000EDC                          2529                   
00000EDC  103C 000E               2530                   MOVE.B #14, D0
00000EE0                          2531                   
00000EE0  4E4F                    2532                   TRAP #15
00000EE2                          2533                  
00000EE2  4EB8 0238               2534                   JSR GET_SIZE_PURPLE
00000EE6                          2535                   
00000EE6  4EB8 0250               2536                   JSR PRINTOUT_SIZE_PURPLE
00000EEA                          2537  
00000EEA  3015                    2538                   MOVE.W (A5), D0
00000EEC                          2539                   
00000EEC  123C 000A               2540                   MOVE.B #10, D1
00000EF0                          2541                   
00000EF0  E368                    2542                   LSL.W D1, D0
00000EF2                          2543                   
00000EF2  123C 000F               2544                   MOVE.B #15, D1
00000EF6                          2545                   
00000EF6  E268                    2546                   LSR.W D1, D0
00000EF8                          2547                   
00000EF8  B03C 0001               2548                   CMP.B #1, D0
00000EFC                          2549                   
00000EFC  6700 0048               2550                   BEQ PRINTOUT_REGISTER
00000F00                          2551                   
00000F00  6000 0002               2552                   BRA PRINTOUT_COUNT
00000F04                          2553  
00000F04                          2554                   
00000F04                          2555  PRINTOUT_COUNT
Line 2556 ERROR: Undefined symbol
00000F04  43F9 004DBB8E           2556                   LEA POUND_SIGN, A1
00000F0A                          2557  
00000F0A  103C 000E               2558                   MOVE.B #14, D0
00000F0E                          2559  
00000F0E  4E4F                    2560                   TRAP #15     
00000F10                          2561                 
00000F10  3015                    2562                   MOVE.W (A5), D0
00000F12                          2563                   
00000F12  E948                    2564                   LSL.W #4, D0
00000F14                          2565                   
00000F14  123C 000D               2566                   MOVE.B #13, D1
00000F18                          2567                   
00000F18  E268                    2568                   LSR.W D1, D0
00000F1A                          2569                   
00000F1A  1200                    2570                   MOVE.B D0, D1
00000F1C                          2571                   
00000F1C  103C 0003               2572                   MOVE.B #3, D0
00000F20                          2573                   
00000F20  4E4F                    2574                   TRAP #15                  * print out the amount that the ea is being shifted by
00000F22                          2575                   
Line 2576 ERROR: Undefined symbol
00000F22  43F9 004DBB8E           2576                   LEA COMMA, A1
00000F28                          2577                   
00000F28  103C 000E               2578                   MOVE.B #14, D0
00000F2C                          2579                   
00000F2C  4E4F                    2580                   TRAP #15
00000F2E                          2581                   
00000F2E  3015                    2582                   MOVE.W (A5), D0
00000F30                          2583                   
00000F30  123C 000D               2584                   MOVE.B #13, D1                * to print out the ea that is being shifted
00000F34                          2585                   
00000F34  E368                    2586                   LSL.W D1, D0
00000F36                          2587                   
00000F36  E268                    2588                   LSR.W D1, D0
00000F38                          2589                   
00000F38  1E00                    2590                   MOVE.B D0, D7
00000F3A                          2591                   
00000F3A  7C00                    2592                   MOVE.L #%000, D6              * we know it is a data register
00000F3C                          2593                   
00000F3C  4EB9 0000130A           2594                   JSR PRINT_EA
00000F42                          2595                   
00000F42  6000 F0D0               2596                   BRA PARSE_MEMORY
00000F46                          2597                   
00000F46                          2598  
00000F46                          2599  PRINTOUT_REGISTER
00000F46  3015                    2600                   MOVE.W (A5), D0
00000F48                          2601                   
00000F48  E948                    2602                   LSL.W #4, D0
00000F4A                          2603                   
00000F4A  123C 000D               2604                   MOVE.B #13, D1
00000F4E                          2605                   
00000F4E  E268                    2606                   LSR.W D1, D0
00000F50                          2607                   
00000F50  1E00                    2608                   MOVE.B D0, D7
00000F52                          2609                   
00000F52  7C00                    2610                   MOVE.L #%000, D6
00000F54                          2611                   
00000F54  4EB9 0000130A           2612                   JSR PRINT_EA                  * to print out the data register
00000F5A                          2613                   
Line 2614 ERROR: Undefined symbol
00000F5A  43F9 004DBB8E           2614                   LEA COMMA, A1
00000F60                          2615                   
00000F60  103C 000E               2616                   MOVE.B #14, D0
00000F64                          2617                   
00000F64  4E4F                    2618                   TRAP #15
00000F66                          2619                   
00000F66  3015                    2620                   MOVE.W (A5), D0
00000F68                          2621                   
00000F68  123C 000D               2622                   MOVE.B #13, D1                * to print out the ea that is being shifted
00000F6C                          2623                   
00000F6C  E368                    2624                   LSL.W D1, D0
00000F6E                          2625                   
00000F6E  E268                    2626                   LSR.W D1, D0
00000F70                          2627                   
00000F70  1E00                    2628                   MOVE.B D0, D7
00000F72                          2629                   
00000F72  7C00                    2630                   MOVE.L #%000, D6              * we know it is a data register
00000F74                          2631                   
00000F74  4EB9 0000130A           2632                   JSR PRINT_EA
00000F7A                          2633                   
00000F7A  6000 F098               2634                   BRA PARSE_MEMORY
00000F7E                          2635                                   
00000F7E                          2636  
00000F7E                          2637  PRINTOUT_MEMORY_SHIFTS_EA   * gets the mode and register of the memory ea, and prints it out
00000F7E                          2638                   *JSR GET_SIZE_PURPLE
00000F7E                          2639                   
00000F7E                          2640                   *JSR PRINTOUT_SIZE_PURPLE
00000F7E                          2641                   
Line 2642 ERROR: Undefined symbol
00000F7E  43F9 004DBB8E           2642                   LEA SPACE, A1
00000F84                          2643                   
00000F84  103C 000E               2644                   MOVE.B #14, D0
00000F88                          2645                   
00000F88  4E4F                    2646                   TRAP #15
00000F8A                          2647  
00000F8A  3015                    2648                   MOVE.W (A5), D0
00000F8C                          2649                   
00000F8C  123C 000A               2650                   MOVE.B #10, D1
00000F90                          2651                   
00000F90  E368                    2652                   LSL.W D1, D0
00000F92                          2653                   
00000F92  123C 000D               2654                   MOVE.B #13, D1
00000F96                          2655                   
00000F96  E268                    2656                   LSR.W D1, D0
00000F98                          2657                   
00000F98  2C00                    2658                   MOVE.L D0, D6
00000F9A                          2659                   
00000F9A  3015                    2660                   MOVE.W (A5), D0
00000F9C                          2661                   
00000F9C  123C 000D               2662                   MOVE.B #13, D1
00000FA0                          2663                   
00000FA0  E368                    2664                   LSL.W D1, D0
00000FA2                          2665                   
00000FA2  E268                    2666                   LSR.W D1, D0
00000FA4                          2667                   
00000FA4  2E00                    2668                   MOVE.L D0, D7
00000FA6                          2669                   
00000FA6  4EB9 0000130A           2670                   JSR PRINT_EA
00000FAC                          2671                   
00000FAC  4E75                    2672                   RTS
00000FAE                          2673                                   
00000FAE                          2674                
Line 2675 ERROR: Undefined symbol
00000FAE  43F9 004DBB8E           2675  MOVEB            LEA MOVE_MESSAGE, A1   * printing out the opcode and size
00000FB4                          2676  
00000FB4  4280                    2677                   CLR.L  D0
00000FB6                          2678                   
00000FB6  103C 000E               2679                   MOVE.B #14, D0
00000FBA                          2680                   
00000FBA  4E4F                    2681                   TRAP #15
00000FBC                          2682                   
Line 2683 ERROR: Undefined symbol
00000FBC  43F9 004DBB8E           2683                   LEA SIZE_B_PRINT, A1
00000FC2                          2684                   
00000FC2  4E4F                    2685                   TRAP #15               * done printing opcode and size
00000FC4                          2686                   
00000FC4  1A3C 0000               2687                   MOVE.B     #%00, D5
00000FC8                          2688                   
00000FC8  6000 00A6               2689                   BRA PRINTOUT_MOVE_EA
00000FCC                          2690  
00000FCC  4280                    2691  MOVEW            CLR.L D0
00000FCE                          2692                   
00000FCE  4281                    2693                   CLR.L D1
00000FD0                          2694                   
00000FD0  3015                    2695                   MOVE.W (A5),D0
00000FD2                          2696                   
00000FD2  EF48                    2697                   LSL.W #7,D0
00000FD4                          2698                   
00000FD4  123C 000D               2699                   MOVE.B #13,D1
00000FD8                          2700                   
00000FD8  E268                    2701                   LSR.W D1,D0
00000FDA                          2702                   
00000FDA  B03C 0001               2703                   CMP.B #1,D0            *check to see if the mode of the destination is an address register
00000FDE                          2704                   
00000FDE  6700 0054               2705                   BEQ MOVEAW             *if the destination is an address, it is MOVEA
00000FE2                          2706                   
Line 2707 ERROR: Undefined symbol
00000FE2  43F9 004DBB8E           2707                   LEA MOVE_MESSAGE, A1   * printing out the opcode and size
00000FE8                          2708                   
00000FE8  4280                    2709                   CLR.L D0
00000FEA                          2710                   
00000FEA  103C 000E               2711                   MOVE.B #14, D0
00000FEE                          2712                   
00000FEE  4E4F                    2713                   TRAP #15
00000FF0                          2714                   
Line 2715 ERROR: Undefined symbol
00000FF0  43F9 004DBB8E           2715                   LEA SIZE_W_PRINT, A1
00000FF6                          2716                   
00000FF6  4E4F                    2717                   TRAP #15               * done printing opcode and size
00000FF8                          2718                   
00000FF8  1A3C 0001               2719                   MOVE.B     #%01, D5
00000FFC                          2720                      
00000FFC  6000 0072               2721                   BRA PRINTOUT_MOVE_EA
00001000                          2722                
00001000                          2723  
00001000  4280                    2724  MOVEL            CLR.L D0
00001002                          2725                   
00001002  4281                    2726                   CLR.L D1
00001004                          2727                   
00001004  3015                    2728                   MOVE.W (A5),D0
00001006                          2729                   
00001006  EF48                    2730                   LSL.W #7,D0
00001008                          2731                   
00001008  123C 000D               2732                   MOVE.B #13,D1
0000100C                          2733                   
0000100C  E268                    2734                   LSR.W D1,D0
0000100E                          2735                   
0000100E  B03C 0001               2736                   CMP.B #1,D0            *check to see if the mode of the destination is equal to 1
00001012                          2737                   
00001012  6700 003E               2738                   BEQ MOVEAL             *if the mode is 1, then it is an address register, and the opcode is MOVEA
00001016                          2739                   
Line 2740 ERROR: Undefined symbol
00001016  43F9 004DBB8E           2740                   LEA MOVE_MESSAGE, A1   * printing out opcode and size
0000101C                          2741                   
0000101C  4280                    2742                   CLR.L D0
0000101E                          2743                   
0000101E  103C 000E               2744                   MOVE.B #14, D0
00001022                          2745                   
00001022  4E4F                    2746                   TRAP #15
00001024                          2747                   
Line 2748 ERROR: Undefined symbol
00001024  43F9 004DBB8E           2748                   LEA SIZE_L_PRINT, A1
0000102A                          2749                   
0000102A  4E4F                    2750                   TRAP #15               * done printing opcode and size
0000102C                          2751                   
0000102C  1A3C 0002               2752                   MOVE.B     #%10, D5
00001030                          2753                   
00001030  6000 003E               2754                   BRA PRINTOUT_MOVE_EA
00001034                          2755                   
00001034                          2756                   
Line 2757 ERROR: Undefined symbol
00001034  43F9 004DBB8E           2757  MOVEAW           LEA MOVEA_MESSAGE, A1  * start printing out opcode and size
0000103A                          2758  
0000103A  4280                    2759                   CLR.L D0
0000103C                          2760                   
0000103C  103C 000E               2761                   MOVE.B #14, D0
00001040                          2762                   
00001040  4E4F                    2763                   TRAP #15
00001042                          2764                   
Line 2765 ERROR: Undefined symbol
00001042  43F9 004DBB8E           2765                   LEA SIZE_W_PRINT, A1
00001048                          2766                   
00001048  4E4F                    2767                   TRAP #15               * done printing out opcode and size
0000104A                          2768                   
0000104A  1A3C 0001               2769                   MOVE.B     #%01, D5
0000104E                          2770                   
0000104E  6000 0020               2771                   BRA PRINTOUT_MOVE_EA
00001052                          2772  
Line 2773 ERROR: Undefined symbol
00001052  43F9 004DBB8E           2773  MOVEAL           LEA MOVEA_MESSAGE, A1  * start printing out opcode and size
00001058                          2774  
00001058  4280                    2775                   CLR.L D0
0000105A                          2776                   
0000105A  103C 000E               2777                   MOVE.B #14, D0
0000105E                          2778                   
0000105E  4E4F                    2779                   TRAP #15
00001060                          2780                   
Line 2781 ERROR: Undefined symbol
00001060  43F9 004DBB8E           2781                   LEA SIZE_L_PRINT, A1
00001066                          2782                   
00001066  4E4F                    2783                   TRAP #15               * done printing out opcode and size
00001068                          2784                   
00001068  1A3C 0002               2785                   MOVE.B     #%10, D5
0000106C                          2786                   
0000106C  6000 0002               2787                   BRA PRINTOUT_MOVE_EA
00001070                          2788  
00001070                          2789  PRINTOUT_MOVE_EA
00001070  4247                    2790                   CLR    D7 
00001072                          2791                   
00001072  4246                    2792                   CLR    D6               
00001074                          2793                   
00001074  3015                    2794                   MOVE.W (A5), D0
00001076                          2795                   
00001076  123C 000A               2796                   MOVE.B #10, D1
0000107A                          2797                   
0000107A  E368                    2798                   LSL.W D1, D0
0000107C                          2799                   
0000107C  123C 000D               2800                   MOVE.B #13, D1
00001080                          2801                   
00001080  E268                    2802                   LSR.W D1, D0
00001082                          2803                   
00001082  1C00                    2804                   MOVE.B D0, D6          * getting the mode of the second ea
00001084                          2805                   
00001084  3015                    2806                   MOVE.W (A5), D0
00001086                          2807                   
00001086  123C 000D               2808                   MOVE.B #13, D1
0000108A                          2809                   
0000108A  E368                    2810                   LSL.W D1, D0
0000108C                          2811                   
0000108C  E268                    2812                   LSR.W D1, D0
0000108E                          2813                   
0000108E  1E00                    2814                   MOVE.B D0, D7          * getting the register of the second ea
00001090                          2815                   
00001090  4EB9 0000130A           2816                   JSR PRINT_EA
00001096                          2817                   
Line 2818 ERROR: Undefined symbol
00001096  43F9 004DBB8E           2818                   LEA COMMA, A1
0000109C                          2819                   
0000109C  103C 000E               2820                   MOVE.B #14, D0
000010A0                          2821                   
000010A0  4E4F                    2822                   TRAP #15
000010A2                          2823                   
000010A2  3015                    2824                   MOVE.W (A5), D0
000010A4                          2825                   
000010A4  E948                    2826                   LSL.W #4, D0
000010A6                          2827                   
000010A6  123C 000D               2828                   MOVE.B #13, D1
000010AA                          2829                   
000010AA  E268                    2830                   LSR.W D1, D0
000010AC                          2831                   
000010AC  1E00                    2832                   MOVE.B D0, D7          * getting the register of the first ea
000010AE                          2833                   
000010AE  3015                    2834                   MOVE.W (A5), D0
000010B0                          2835                   
000010B0  EF48                    2836                   LSL.W #7, D0
000010B2                          2837                   
000010B2  123C 000D               2838                   MOVE.B #13, D1
000010B6                          2839                   
000010B6  E268                    2840                   LSR.W D1, D0
000010B8                          2841                   
000010B8  1C00                    2842                   MOVE.B D0, D6          * getting the mode of the first ea
000010BA                          2843                   
000010BA  4EB9 0000130A           2844                   JSR PRINT_EA
000010C0                          2845                   
000010C0  6000 EF52               2846                   BRA PARSE_MEMORY
000010C4                          2847  
000010C4                          2848  
000010C4                          2849  
000010C4                          2850  
000010C4                          2851  
000010C4                          2852  
000010C4                          2853  -------------------- end include --------------------
000010C4                          2854                  INCLUDE 'BCC.X68'
000010C4                          2855  
000010C4                          2856  
000010C4                          2857  BCC           
000010C4  4240                    2858                 CLR       D0              *Zero it
000010C6                          2859  
000010C6  3015                    2860                 MOVE.W      (A5),D0     *We'll play with it here
000010C8                          2861                 
000010C8  4241                    2862                 CLR       D1
000010CA                          2863  
000010CA                          2864                 
000010CA  123C 0004               2865                 MOVE.B      #4, D1
000010CE                          2866                 
000010CE  E368                    2867                 LSL.W       D1, D0
000010D0                          2868  
000010D0  123C 000C               2869                 MOVE.B      #12,D1       *Shift 12 bits to the right  
000010D4                          2870  
000010D4  E268                    2871                 LSR.W       D1,D0           *Move the bi
000010D6                          2872                 
000010D6  B03C 0004               2873                 CMP.B       #%0100, D0
000010DA                          2874                 
000010DA  6700 001A               2875                 BEQ         CC
000010DE                          2876                 
000010DE  B03C 000E               2877                 CMP.B       #%1110, D0
000010E2                          2878                 
000010E2  6700 003A               2879                 BEQ         GT
000010E6                          2880                 
000010E6  B03C 000F               2881                 CMP.B       #%1111, D0
000010EA                          2882                 
000010EA  6700 0036               2883                 BEQ         LE
000010EE                          2884                 
000010EE                          2885  
000010EE                          2886                      
000010EE                          2887  
000010EE  6000 0036               2888  HI             BRA         PRINT_BHI 
000010F2                          2889  
000010F2  6000 0042               2890  LS             BRA         PRINT_BLS  
000010F6                          2891  
000010F6  6000 004E               2892  CC             BRA         PRINT_BCC
000010FA                          2893  
000010FA  6000 005A               2894  CS             BRA         PRINT_BCS 
000010FE                          2895  
000010FE  6000 0066               2896  NE             BRA         PRINT_BNE 
00001102                          2897  
00001102  6000 0072               2898  EQ             BRA         PRINT_BEQ
00001106                          2899  
00001106  6000 007E               2900  VC             BRA         PRINT_BVC
0000110A                          2901  
0000110A  6000 008A               2902  VS             BRA         PRINT_BVS
0000110E                          2903  
0000110E  6000 0096               2904  PL             BRA         PRINT_BPL
00001112                          2905  
00001112  6000 00A2               2906  MI             BRA         PRINT_BMI 
00001116                          2907  
00001116  6000 00AE               2908  GE             BRA         PRINT_BGE 
0000111A                          2909  
0000111A  6000 00BA               2910  LT             BRA         PRINT_BLT
0000111E                          2911  
0000111E  6000 00C6               2912  GT             BRA         PRINT_BGT      
00001122                          2913  
00001122  6000 00D2               2914  LE             BRA         PRINT_BLE 
00001126                          2915  
00001126                          2916  
00001126                          2917  PRINT_BHI      
Line 2918 ERROR: Undefined symbol
00001126  43F9 004DBB8E           2918                 LEA BHI_MESSAGE, A1
0000112C                          2919            
0000112C  103C 000E               2920                 MOVE.B #14, D0
00001130                          2921                   
00001130  4E4F                    2922                 TRAP #15    
00001132                          2923                 
00001132  6000 00CE               2924                 BRA DISPLACEMENT
00001136                          2925                 
00001136                          2926  PRINT_BLS
Line 2927 ERROR: Undefined symbol
00001136  43F9 004DBB8E           2927                 LEA BLS_MESSAGE, A1
0000113C                          2928                   
0000113C  103C 000E               2929                 MOVE.B #14, D0
00001140                          2930                   
00001140  4E4F                    2931                 TRAP #15
00001142                          2932                 
00001142  6000 00BE               2933                 BRA DISPLACEMENT
00001146                          2934  PRINT_BCC
Line 2935 ERROR: Undefined symbol
00001146  43F9 004DBB8E           2935                 LEA BCC_MESSAGE, A1
0000114C                          2936                   
0000114C  103C 000E               2937                 MOVE.B #14, D0
00001150                          2938                   
00001150  4E4F                    2939                 TRAP #15
00001152                          2940                 
00001152  6000 00AE               2941                 BRA DISPLACEMENT
00001156                          2942  PRINT_BCS
Line 2943 ERROR: Undefined symbol
00001156  43F9 004DBB8E           2943                 LEA BCS_MESSAGE, A1
0000115C                          2944                   
0000115C  103C 000E               2945                 MOVE.B #14, D0
00001160                          2946                   
00001160  4E4F                    2947                 TRAP #15
00001162                          2948                 
00001162  6000 009E               2949                 BRA DISPLACEMENT
00001166                          2950  PRINT_BNE
Line 2951 ERROR: Undefined symbol
00001166  43F9 004DBB8E           2951                 LEA BNE_MESSAGE, A1
0000116C                          2952                   
0000116C  103C 000E               2953                 MOVE.B #14, D0
00001170                          2954                   
00001170  4E4F                    2955                 TRAP #15
00001172                          2956                 
00001172  6000 008E               2957                 BRA DISPLACEMENT
00001176                          2958  PRINT_BEQ
Line 2959 ERROR: Undefined symbol
00001176  43F9 004DBB8E           2959                 LEA BEQ_MESSAGE, A1
0000117C                          2960                   
0000117C  103C 000E               2961                 MOVE.B #14, D0
00001180                          2962                   
00001180  4E4F                    2963                 TRAP #15
00001182                          2964                 
00001182  6000 007E               2965                 BRA DISPLACEMENT
00001186                          2966  PRINT_BVC
Line 2967 ERROR: Undefined symbol
00001186  43F9 004DBB8E           2967                 LEA BVC_MESSAGE, A1
0000118C                          2968                   
0000118C  103C 000E               2969                 MOVE.B #14, D0
00001190                          2970                   
00001190  4E4F                    2971                 TRAP #15     
00001192                          2972                 
00001192  6000 006E               2973                 BRA DISPLACEMENT
00001196                          2974  PRINT_BVS
Line 2975 ERROR: Undefined symbol
00001196  43F9 004DBB8E           2975                 LEA BVS_MESSAGE, A1
0000119C                          2976                   
0000119C  103C 000E               2977                 MOVE.B #14, D0
000011A0                          2978                   
000011A0  4E4F                    2979                 TRAP #15
000011A2                          2980                 
000011A2  6000 005E               2981                 BRA DISPLACEMENT
000011A6                          2982  PRINT_BPL
Line 2983 ERROR: Undefined symbol
000011A6  43F9 004DBB8E           2983                 LEA BPL_MESSAGE, A1
000011AC                          2984                   
000011AC  103C 000E               2985                 MOVE.B #14, D0
000011B0                          2986                   
000011B0  4E4F                    2987                 TRAP #15
000011B2                          2988                 
000011B2  6000 004E               2989                 BRA DISPLACEMENT
000011B6                          2990  PRINT_BMI
Line 2991 ERROR: Undefined symbol
000011B6  43F9 004DBB8E           2991                 LEA BMI_MESSAGE, A1
000011BC                          2992                   
000011BC  103C 000E               2993                 MOVE.B #14, D0
000011C0                          2994                   
000011C0  4E4F                    2995                 TRAP #15
000011C2                          2996                 
000011C2  6000 003E               2997                 BRA DISPLACEMENT
000011C6                          2998  PRINT_BGE
Line 2999 ERROR: Undefined symbol
000011C6  43F9 004DBB8E           2999                 LEA BGE_MESSAGE, A1
000011CC                          3000                   
000011CC  103C 000E               3001                 MOVE.B #14, D0
000011D0                          3002                   
000011D0  4E4F                    3003                 TRAP #15
000011D2                          3004                 
000011D2  6000 002E               3005                 BRA DISPLACEMENT
000011D6                          3006  PRINT_BLT
Line 3007 ERROR: Undefined symbol
000011D6  43F9 004DBB8E           3007                 LEA BLT_MESSAGE, A1
000011DC                          3008                   
000011DC  103C 000E               3009                 MOVE.B #14, D0
000011E0                          3010                   
000011E0  4E4F                    3011                 TRAP #15
000011E2                          3012                 
000011E2  6000 001E               3013                 BRA DISPLACEMENT
000011E6                          3014  PRINT_BGT
Line 3015 ERROR: Undefined symbol
000011E6  43F9 004DBB8E           3015                 LEA BGT_MESSAGE, A1
000011EC                          3016                   
000011EC  103C 000E               3017                 MOVE.B #14, D0
000011F0                          3018                   
000011F0  4E4F                    3019                 TRAP #15
000011F2                          3020                 
000011F2  6000 000E               3021                 BRA DISPLACEMENT
000011F6                          3022  PRINT_BLE
Line 3023 ERROR: Undefined symbol
000011F6  43F9 004DBB8E           3023                 LEA BLE_MESSAGE, A1
000011FC                          3024                   
000011FC  103C 000E               3025                 MOVE.B #14, D0
00001200                          3026                   
00001200  4E4F                    3027                 TRAP #15
00001202                          3028                 
00001202                          3029  DISPLACEMENT   
00001202                          3030  
Line 3031 ERROR: Undefined symbol
00001202  43F9 004DBB8E           3031                 LEA     SPACE, A1
00001208                          3032  
00001208  103C 000E               3033                 MOVE.B #14, D0
0000120C                          3034  
0000120C  4E4F                    3035                 TRAP #15 
0000120E                          3036  
Line 3037 ERROR: Undefined symbol
0000120E  43F9 004DBB8E           3037                 LEA     POUND_SIGN, A1
00001214                          3038              
00001214  103C 000E               3039                 MOVE.B  #14, D0
00001218                          3040              
00001218  4E4F                    3041                 TRAP #15
0000121A                          3042              
Line 3043 ERROR: Undefined symbol
0000121A  43F9 004DBB8E           3043                 LEA     HEX_SIGN, A1
00001220                          3044              
00001220  4E4F                    3045                 TRAP #15
00001222                          3046  
00001222  4280                    3047                 CLR.L       D0              *Zero it
00001224                          3048  
00001224  3015                    3049                 MOVE.W      (A5),D0     *We'll play with it here
00001226                          3050                 
00001226  123C 0008               3051                 MOVE.B      #8, D1
0000122A                          3052                 
0000122A  E368                    3053                 LSL.W       D1, D0
0000122C                          3054  
0000122C  123C 0008               3055                 MOVE.B      #8,D1       *Shift 12 bits to the right  
00001230                          3056  
00001230  E268                    3057                 LSR.W       D1,D0           *Move the bits
00001232                          3058                 
00001232                          3059                 *chk the D0 for 8, 16, or 32 but displacement
00001232                          3060                  
00001232  B03C 0000               3061                 CMP.B  #$00, D0
00001236                          3062  
00001236  6700 0018               3063                 BEQ  a_16_BIT 
0000123A                          3064  
0000123A  B03C 00FF               3065                 CMP.B #$FF, D0   
0000123E                          3066  
0000123E  6700 001E               3067                 BEQ  a_32_BIT
00001242                          3068                  
00001242                          3069                  *else 
00001242                          3070                  
00001242  4285                    3071                 CLR.L D5
00001244                          3072                 
00001244  3A00                    3073                 MOVE.W D0, D5      
00001246                          3074          
00001246  4EB9 0000126C           3075                 JSR  HEX_TO_ASCII
0000124C                          3076                 
0000124C  4EF8 0014               3077                 JMP PARSE_MEMORY
00001250                          3078                            
00001250                          3079  a_16_BIT
00001250  4285                    3080          CLR.L  D5
00001252                          3081          
00001252  3A1E                    3082          MOVE.W (A6)+, D5
00001254                          3083          
00001254  4EB9 0000126C           3084          JSR  HEX_TO_ASCII
0000125A                          3085          
0000125A  4EF8 0014               3086          JMP PARSE_MEMORY
0000125E                          3087  a_32_BIT
0000125E                          3088  
0000125E  4285                    3089          CLR.L  D5
00001260                          3090          
00001260  2A1E                    3091          MOVE.L (A6)+, D5
00001262                          3092          
00001262  4EB9 0000126C           3093          JSR  HEX_TO_ASCII
00001268                          3094          
00001268  4EF8 0014               3095          JMP PARSE_MEMORY
0000126C                          3096            
0000126C                          3097  
0000126C                          3098  
0000126C                          3099  
0000126C                          3100  
0000126C                          3101  
0000126C                          3102  
0000126C                          3103  
0000126C                          3104  
0000126C                          3105  
0000126C                          3106  
0000126C                          3107  
0000126C                          3108  -------------------- end include --------------------
0000126C                          3109                  INCLUDE 'HEX_TO_ASCII_V1.X68'
0000126C                          3110      *ORG    $5000
0000126C                          3111  
0000126C                          3112  
0000126C                          3113  HEX_TO_ASCII      
0000126C  4283                    3114       CLR.L      D3
0000126E                          3115       
0000126E  BABC 00000000           3116       CMP.L       #0, D5
00001274                          3117       
00001274  6700 0086               3118       BEQ         PRINT_ZERO
00001278                          3119      
00001278                          3120       *MOVE.L     #$ABCDEF, D5
00001278                          3121       
00001278                          3122  LOOP     
00001278  2C05                    3123       MOVE.L     D5, D6                  * put the data in a register so we can manipulate it
0000127A                          3124       
0000127A  4282                    3125       CLR.L      D2
0000127C                          3126       
0000127C  143C 001C               3127       MOVE.B     #28, D2
00001280                          3128  
00001280  E4AE                    3129       LSR.L      D2, D6                  * shift out everything to the right of the last nibble, we print backwards so it shows up the correct order in the console
00001282                          3130       
00001282  BC3C 000A               3131       CMP.B      #10, D6
00001286                          3132       
00001286  6C00 0006               3133       BGE        LETTER_1                  * determine if a letter or a number
0000128A                          3134       
0000128A  6000 000C               3135       BRA        NUMBER_1
0000128E                          3136       
0000128E                          3137  LETTER_1
0000128E  0606 0037               3138       ADD.B      #55, D6
00001292                          3139       
00001292  1206                    3140       MOVE.B     D6, D1                  * add the amount to change to ascii and move to D1 to prepare for printing
00001294                          3141       
00001294  6000 000C               3142       BRA        PRINTOUT_NIBBLE
00001298                          3143  
00001298                          3144  NUMBER_1     
00001298  0606 0030               3145       ADD.B      #48, D6
0000129C                          3146       
0000129C  1206                    3147       MOVE.B     D6, D1                  * add the amount to change to ascii and move to D1 to prepare for printing
0000129E                          3148       
0000129E  6000 0002               3149       BRA        PRINTOUT_NIBBLE
000012A2                          3150  
000012A2                          3151  
000012A2                          3152  PRINTOUT_NIBBLE
000012A2  E98D                    3153      LSL.L      #4, D5                   * shift out the nibble you just read from the source
000012A4                          3154      
000012A4  5203                    3155      ADD.B      #1, D3
000012A6                          3156      
000012A6  BC3C 0030               3157      CMP.B      #$30, D6
000012AA                          3158  
000012AA  67CC                    3159      BEQ        LOOP             
000012AC                          3160      
000012AC  103C 0006               3161      MOVE.B     #6, D0                      * use TRAP task #6 to print a single character from D1  
000012B0                          3162      
000012B0  4E4F                    3163      TRAP #15
000012B2                          3164       
000012B2  B63C 0008               3165      CMP.B      #8, D3                   * compare to the counter to check if you are done
000012B6                          3166       
000012B6  6700 023E               3167      BEQ        DONE
000012BA                          3168          
000012BA  6000 0002               3169      BRA LOOP_ZERO                            * continue the loop and print next nibble
000012BE                          3170      
000012BE                          3171      
000012BE                          3172  LOOP_ZERO    
000012BE  2C05                    3173       MOVE.L     D5, D6                  * put the data in a register so we can manipulate it
000012C0                          3174       
000012C0  4282                    3175       CLR.L      D2
000012C2                          3176       
000012C2  143C 001C               3177       MOVE.B     #28, D2
000012C6                          3178  
000012C6  E4AE                    3179       LSR.L      D2, D6                  * shift out everything to the right of the last nibble, we print backwards so it shows up the correct order in the console
000012C8                          3180       
000012C8  BC3C 000A               3181       CMP.B      #10, D6
000012CC                          3182       
000012CC  6C00 0006               3183       BGE        LETTER_1_ZERO                  * determine if a letter or a number
000012D0                          3184       
000012D0  6000 000C               3185       BRA        NUMBER_1_ZERO
000012D4                          3186       
000012D4                          3187  LETTER_1_ZERO
000012D4  0606 0037               3188       ADD.B      #55, D6
000012D8                          3189       
000012D8  1206                    3190       MOVE.B     D6, D1                  * add the amount to change to ascii and move to D1 to prepare for printing
000012DA                          3191       
000012DA  6000 000C               3192       BRA        PRINTOUT_NIBBLE_ZERO
000012DE                          3193  
000012DE                          3194  NUMBER_1_ZERO    
000012DE  0606 0030               3195       ADD.B      #48, D6
000012E2                          3196       
000012E2  1206                    3197       MOVE.B     D6, D1                  * add the amount to change to ascii and move to D1 to prepare for printing
000012E4                          3198       
000012E4  6000 0002               3199       BRA        PRINTOUT_NIBBLE_ZERO
000012E8                          3200  
000012E8                          3201  
000012E8                          3202  PRINTOUT_NIBBLE_ZERO
000012E8  E98D                    3203      LSL.L      #4, D5                   * shift out the nibble you just read from the source
000012EA                          3204      
000012EA  5203                    3205      ADD.B      #1, D3            
000012EC                          3206      
000012EC  103C 0006               3207      MOVE.B     #6, D0                      * use TRAP task #6 to print a single character from D1  
000012F0                          3208      
000012F0  4E4F                    3209      TRAP #15
000012F2                          3210       
000012F2  B63C 0008               3211      CMP.B      #8, D3                   * compare to the counter to check if you are done
000012F6                          3212       
000012F6  6700 01FE               3213      BEQ        DONE
000012FA                          3214      
000012FA  60C2                    3215      BRA LOOP_ZERO                            * continue the loop and print next nibble
000012FC                          3216          
000012FC                          3217  
000012FC                          3218       
000012FC                          3219  PRINT_ZERO
000012FC  123C 0030               3220      MOVE.B      #$30, D1
00001300                          3221  
00001300  103C 0006               3222      MOVE.B      #6, D0  
00001304                          3223  
00001304  4E4F                    3224      TRAP #15 
00001306                          3225  
00001306  6000 01EE               3226      BRA DONE  
0000130A                          3227  
0000130A                          3228  
0000130A                          3229      *SIMHALT             ; halt simulator
0000130A                          3230  
0000130A                          3231  
0000130A                          3232      *END    START       ; last line of source
0000130A                          3233  -------------------- end include --------------------
0000130A                          3234                  INCLUDE 'JUMPTABLE-EA.X68'
0000130A                          3235   *ORG     $400
0000130A                          3236  
0000130A                          3237  
0000130A                          3238  
0000130A                          3239  
0000130A                          3240  
0000130A                          3241                 *MOVE.B       #%00, D5         *SIZE
0000130A                          3242                
0000130A                          3243                 *MOVE.B       #%111,D6         *MODE
0000130A                          3244                 
0000130A                          3245                 *MOVE.B       #%100,D7         *REGISTER
0000130A                          3246                 
0000130A                          3247                 *MOVE.L       #$4000, A5
0000130A                          3248  
0000130A                          3249                 *MOVE.B       #$0040, (A5)  
0000130A                          3250  PRINT_EA 
0000130A                          3251                 
0000130A  41F9 00001318           3252                 LEA     jmp_table_ea,A0      *Index into the table
00001310                          3253  
00001310  CCFC 0006               3254                 MULU        #6,D6            *Form offset     
00001314                          3255  
00001314  4EF0 6000               3256                 JMP         0(A0,D6)         *Jump indirect with index
00001318                          3257   
00001318  4EF9 00001348           3258  jmp_table_ea   JMP         code000
0000131E                          3259  
0000131E  4EF9 0000134C           3260                 JMP         code001
00001324                          3261  
00001324  4EF9 00001350           3262                 JMP         code010
0000132A                          3263  
0000132A  4EF9 00001354           3264                 JMP         code011
00001330                          3265  
00001330  4EF9 00001358           3266                 JMP         code100
00001336                          3267  
00001336  4EF9 0000135C           3268                 JMP         code101
0000133C                          3269  
0000133C  4EF9 00001360           3270                 JMP         code110
00001342                          3271  
00001342  4EF9 00001364           3272                 JMP         code111
00001348                          3273          
00001348                          3274  
00001348                          3275   
00001348                          3276  
00001348                          3277  
00001348                          3278   
00001348                          3279  
00001348                          3280   
00001348                          3281  
00001348  6000 001E               3282  code000       BRA         DATA_REGISTER
0000134C                          3283  
0000134C  6000 0036               3284  code001       BRA         ADDRESS_REGISTER
00001350                          3285  
00001350  6000 004E               3286  code010       BRA         INDIRECT_ADDRESS
00001354                          3287  
00001354  6000 0074               3288  code011       BRA         ADDRESS_PI    * post increment
00001358                          3289  
00001358  6000 009A               3290  code100       BRA         ADDRESS_PD    * pre decrement
0000135C                          3291  
0000135C  6000 00C0               3292  code101       BRA         ADDRESS_W_DISPLACEMENT
00001360                          3293  
00001360  6000 00C0               3294  code110       BRA         ADDRESS_W_INDEX
00001364                          3295  
00001364  6000 00C0               3296  code111       BRA         GROUP_111
00001368                          3297  
00001368                          3298   
00001368                          3299  DATA_REGISTER
00001368                          3300  
Line 3301 ERROR: Undefined symbol
00001368  43F9 004DBB8E           3301              LEA D_REGISTER, A1
0000136E                          3302              
0000136E  4280                    3303              CLR.L D0
00001370                          3304              
00001370  103C 000E               3305              MOVE.B #14, D0
00001374                          3306              
00001374  4E4F                    3307              TRAP #15                * print out 'D' for data register
00001376                          3308              
00001376  4281                    3309              CLR.L D1
00001378                          3310              
00001378  1207                    3311              MOVE.B D7, D1
0000137A                          3312              
0000137A  103C 0003               3313              MOVE.B #3, D0           * print out the number in the register
0000137E                          3314              
0000137E  4E4F                    3315              TRAP #15
00001380                          3316              
00001380  6000 0174               3317              BRA DONE
00001384                          3318              
00001384                          3319  
00001384                          3320  ADDRESS_REGISTER
Line 3321 ERROR: Undefined symbol
00001384  43F9 004DBB8E           3321              LEA A_REGISTER, A1
0000138A                          3322              
0000138A  4280                    3323              CLR.L D0
0000138C                          3324              
0000138C  103C 000E               3325              MOVE.B #14, D0          * print out the 'A' for address register
00001390                          3326              
00001390  4E4F                    3327              TRAP #15
00001392                          3328              
00001392  4281                    3329              CLR.L D1
00001394                          3330              
00001394  1207                    3331              MOVE.B D7, D1
00001396                          3332              
00001396  103C 0003               3333              MOVE.B #3, D0
0000139A                          3334              
0000139A  4E4F                    3335              TRAP #15                * print out the value in the data register
0000139C                          3336  
0000139C  6000 0158               3337              BRA DONE
000013A0                          3338              
000013A0                          3339  INDIRECT_ADDRESS
Line 3340 ERROR: Undefined symbol
000013A0  43F9 004DBB8E           3340              LEA IA_START, A1
000013A6                          3341              
000013A6  4280                    3342              CLR.L D0
000013A8                          3343              
000013A8  103C 000E               3344              MOVE.B #14, D0          * print out the '(A' for start of indirect address register
000013AC                          3345              
000013AC  4E4F                    3346              TRAP #15
000013AE                          3347              
000013AE  4281                    3348              CLR.L D1
000013B0                          3349              
000013B0  1207                    3350              MOVE.B D7, D1
000013B2                          3351              
000013B2  103C 0003               3352              MOVE.B #3, D0
000013B6                          3353              
000013B6  4E4F                    3354              TRAP #15                * print out the value in the data register
000013B8                          3355              
Line 3356 ERROR: Undefined symbol
000013B8  43F9 004DBB8E           3356              LEA IA_END, A1
000013BE                          3357  
000013BE  4280                    3358              CLR.L D0
000013C0                          3359              
000013C0  103C 000E               3360              MOVE.B #14, D0          * print out the ')' for end of post increment address register
000013C4                          3361              
000013C4  4E4F                    3362              TRAP #15
000013C6                          3363              
000013C6  6000 012E               3364              BRA DONE
000013CA                          3365  
000013CA                          3366  ADDRESS_PI
Line 3367 ERROR: Undefined symbol
000013CA  43F9 004DBB8E           3367              LEA A_PI_START, A1
000013D0                          3368              
000013D0  4280                    3369              CLR.L D0
000013D2                          3370              
000013D2  103C 000E               3371              MOVE.B #14, D0          * print out the '(A' for start of post increment address register
000013D6                          3372              
000013D6  4E4F                    3373              TRAP #15
000013D8                          3374              
000013D8  4281                    3375              CLR.L D1
000013DA                          3376              
000013DA  1207                    3377              MOVE.B D7, D1
000013DC                          3378              
000013DC  103C 0003               3379              MOVE.B #3, D0
000013E0                          3380              
000013E0  4E4F                    3381              TRAP #15                * print out the value in the data register
000013E2                          3382              
Line 3383 ERROR: Undefined symbol
000013E2  43F9 004DBB8E           3383              LEA A_PI_END, A1
000013E8                          3384  
000013E8  4280                    3385              CLR.L D0
000013EA                          3386              
000013EA  103C 000E               3387              MOVE.B #14, D0          * print out the ')+' for end of post increment address register
000013EE                          3388     
000013EE  4E4F                    3389              TRAP #15
000013F0                          3390              
000013F0  6000 0104               3391              BRA DONE  
000013F4                          3392         
000013F4                          3393  ADDRESS_PD
000013F4                          3394  
Line 3395 ERROR: Undefined symbol
000013F4  43F9 004DBB8E           3395              LEA A_PD_START, A1
000013FA                          3396              
000013FA  4280                    3397              CLR.L D0
000013FC                          3398              
000013FC  103C 000E               3399              MOVE.B #14, D0          * print out the '-(A' for start of pre decrement address register
00001400                          3400              
00001400  4E4F                    3401              TRAP #15
00001402                          3402              
00001402  4281                    3403              CLR.L D1
00001404                          3404              
00001404  1207                    3405              MOVE.B D7, D1
00001406                          3406              
00001406  103C 0003               3407              MOVE.B #3, D0
0000140A                          3408              
0000140A  4E4F                    3409              TRAP #15                * print out the value in the data register
0000140C                          3410              
Line 3411 ERROR: Undefined symbol
0000140C  43F9 004DBB8E           3411              LEA A_PD_END, A1
00001412                          3412  
00001412  4280                    3413              CLR.L D0
00001414                          3414              
00001414  103C 000E               3415              MOVE.B #14, D0          * print out the ')-' for end of pre decrement
00001418                          3416  
00001418  4E4F                    3417              TRAP #15
0000141A                          3418              
0000141A  6000 00DA               3419              BRA DONE
0000141E                          3420              
0000141E                          3421  ADDRESS_W_DISPLACEMENT
0000141E  6000 00D6               3422              BRA DONE
00001422                          3423  
00001422                          3424  ADDRESS_W_INDEX
00001422  6000 00D2               3425              BRA DONE
00001426                          3426  
00001426                          3427  GROUP_111
00001426                          3428  
00001426  41F9 00001434           3429                 LEA         jmp_table_ea_111,A0    *Index into the table
0000142C                          3430  
0000142C  CEFC 0006               3431                 MULU        #6,D7       *Form offset     
00001430                          3432  
00001430  4EF0 7000               3433                 JMP         0(A0,D7)   *Jump indirect with index
00001434                          3434                 
00001434                          3435  jmp_table_ea_111   
00001434  4EF9 0000145A           3436                 JMP         reg000
0000143A                          3437  
0000143A  4EF9 0000145E           3438                 JMP         reg001
00001440                          3439  
00001440  4EF9 00001452           3440                 JMP         reg010
00001446                          3441  
00001446  4EF9 00001456           3442                 JMP         reg011
0000144C                          3443  
0000144C  4EF9 00001462           3444                 JMP         reg100
00001452                          3445          
00001452                          3446  
00001452  6000 0012               3447  reg010       BRA         PC_W_DISPLACEMENT
00001456                          3448  
00001456  6000 0012               3449  reg011       BRA         PC_W_INDEX
0000145A                          3450  
0000145A  6000 0012               3451  reg000       BRA         ABSOLUTE_SHORT
0000145E                          3452  
0000145E  6000 002C               3453  reg001       BRA         ABSOLUTE_LONG
00001462                          3454  
00001462  6000 0046               3455  reg100       BRA         IMMEDIATE
00001466                          3456  
00001466                          3457  
00001466                          3458  PC_W_DISPLACEMENT
00001466  6000 008E               3459              BRA DONE
0000146A                          3460  
0000146A                          3461  PC_W_INDEX
0000146A  6000 008A               3462              BRA DONE
0000146E                          3463  
0000146E                          3464  ABSOLUTE_SHORT
Line 3465 ERROR: Undefined symbol
0000146E  43F9 004DBB8E           3465              LEA         HEX_SIGN, A1
00001474                          3466              
00001474  103C 000E               3467              MOVE.B      #14, D0
00001478                          3468              
00001478  4E4F                    3469              TRAP #15
0000147A                          3470              
0000147A  4281                    3471              CLR.L       D1
0000147C                          3472              
0000147C  321E                    3473              MOVE.W      (A6)+, D1
0000147E                          3474              
0000147E  103C 000F               3475              MOVE.B      #15, D0
00001482                          3476              
00001482  143C 0010               3477              MOVE.B      #16, D2
00001486                          3478              
00001486  4E4F                    3479              TRAP #15
00001488                          3480              
00001488  6000 006C               3481              BRA DONE  
0000148C                          3482  
0000148C                          3483  
0000148C                          3484  ABSOLUTE_LONG
Line 3485 ERROR: Undefined symbol
0000148C  43F9 004DBB8E           3485              LEA         HEX_SIGN, A1
00001492                          3486              
00001492  103C 000E               3487              MOVE.B      #14, D0
00001496                          3488              
00001496  4E4F                    3489              TRAP #15
00001498                          3490              
00001498  4281                    3491              CLR.L       D1
0000149A                          3492              
0000149A  221E                    3493              MOVE.L      (A6)+, D1
0000149C                          3494              
0000149C  103C 000F               3495              MOVE.B      #15, D0
000014A0                          3496              
000014A0  143C 0010               3497              MOVE.B      #16, D2
000014A4                          3498              
000014A4  4E4F                    3499              TRAP #15
000014A6                          3500                          
000014A6  6000 004E               3501              BRA DONE  
000014AA                          3502  
000014AA                          3503  
000014AA                          3504  IMMEDIATE
Line 3505 ERROR: Undefined symbol
000014AA  43F9 004DBB8E           3505              LEA     POUND_SIGN, A1
000014B0                          3506              
000014B0  103C 000E               3507              MOVE.B  #14, D0
000014B4                          3508              
000014B4  4E4F                    3509              TRAP #15
000014B6                          3510              
Line 3511 ERROR: Undefined symbol
000014B6  43F9 004DBB8E           3511              LEA     HEX_SIGN, A1
000014BC                          3512              
000014BC  4E4F                    3513              TRAP #15
000014BE                          3514              
000014BE  BA3C 0000               3515              CMP.B   #%00, D5
000014C2                          3516              
000014C2  6700 000E               3517              BEQ     IMMEDIATE_B
000014C6                          3518              
000014C6  BA3C 0001               3519              CMP.B   #%01, D5
000014CA                          3520              
000014CA  6700 0012               3521              BEQ     IMMEDIATE_W
000014CE                          3522              
000014CE  6000 001A               3523              BRA     IMMEDIATE_L
000014D2                          3524              
000014D2                          3525  IMMEDIATE_B
000014D2  4285                    3526              CLR.L       D5
000014D4                          3527     
000014D4  3A1E                    3528              MOVE.W      (A6)+, D5
000014D6                          3529              
000014D6  4EB8 126C               3530              JSR         HEX_TO_ASCII
000014DA                          3531              
000014DA  6000 001A               3532              BRA DONE
000014DE                          3533  
000014DE                          3534  IMMEDIATE_W
000014DE  4285                    3535              CLR.L       D5
000014E0                          3536  
000014E0  3A1E                    3537              MOVE.W      (A6)+, D5
000014E2                          3538              
000014E2  4EB8 126C               3539              JSR         HEX_TO_ASCII
000014E6                          3540              
000014E6                          3541              *MOVE.B      #15, D0
000014E6                          3542              
000014E6                          3543              *MOVE.B      #16, D2
000014E6                          3544              
000014E6                          3545              *TRAP #15 
000014E6                          3546              
000014E6  6000 000E               3547              BRA DONE        
000014EA                          3548  
000014EA                          3549  IMMEDIATE_L 
000014EA  4285                    3550              CLR.L       D5
000014EC                          3551              
000014EC  2A1E                    3552              MOVE.L      (A6)+, D5
000014EE                          3553      
000014EE  4EB8 126C               3554              JSR         HEX_TO_ASCII
000014F2                          3555              
000014F2  6000 0002               3556              BRA DONE
000014F6                          3557              
000014F6                          3558  DONE 
000014F6  4E75                    3559      RTS
000014F8                          3560      
000014F8                          3561   * INCLUDE 'MESSAGE_Data.X68'
000014F8                          3562   * INCLUDE 'HEX_TO_ASCII_V1.X68'
000014F8                          3563       
000014F8                          3564          
000014F8                          3565  
000014F8                          3566  
000014F8                          3567  
000014F8                          3568  
000014F8                          3569  
000014F8                          3570  
000014F8                          3571  
000014F8                          3572  
000014F8                          3573  
000014F8                          3574  -------------------- end include --------------------
000014F8                          3575                  INCLUDE 'ERROR_HANDLING.X68'
000014F8                          3576  ERROR_HANDLING 
000014F8                          3577  
000014F8  3015                    3578                   MOVE.W  (A5),D0
000014FA                          3579  
000014FA                          3580  
000014FA                          3581  
000014FA  41F9 00001512           3582                   LEA     CHECK_jmp_table,A0    *Index into the table
00001500                          3583  
00001500  4280                    3584                   CLR.L   D0              *Zero it
00001502                          3585  
00001502  3015                    3586                   MOVE.W  (A5),D0     *We'll play with it here
00001504                          3587  
Line 3588 ERROR: Undefined symbol
00001504  123C 008E               3588                   MOVE.B  #shift,D1       *Shift 12 bits to the right  
00001508                          3589  
00001508  E268                    3590                   LSR.W   D1,D0           *Move the bits
0000150A                          3591  
0000150A                          3592  
0000150A                          3593  
0000150A                          3594  
0000150A                          3595   
0000150A                          3596  
0000150A  C0FC 0006               3597                 MULU        #6,D0       *Form offset     
0000150E                          3598  
0000150E  4EB0 0000               3599                 JSR         0(A0,D0)   *Jump indirect with index
00001512                          3600  
00001512                          3601                      
00001512                          3602  
00001512  4EF9 00001572           3603  CHECK_jmp_table      JMP         CHECK_code0000
00001518                          3604  
00001518  4EF9 00001576           3605                 JMP         CHECK_code0001
0000151E                          3606  
0000151E  4EF9 0000157A           3607                 JMP         CHECK_code0010
00001524                          3608  
00001524  4EF9 0000157E           3609                 JMP         CHECK_code0011
0000152A                          3610  
0000152A  4EF9 00001582           3611                 JMP         CHECK_code0100
00001530                          3612  
00001530  4EF9 00001586           3613                 JMP         CHECK_code0101
00001536                          3614  
00001536  4EF9 0000158A           3615                 JMP         CHECK_code0110
0000153C                          3616  
0000153C  4EF9 00001590           3617                 JMP         CHECK_code0111
00001542                          3618  
00001542  4EF9 00001594           3619                 JMP         CHECK_code1000
00001548                          3620  
00001548  4EF9 00001598           3621                 JMP         CHECK_code1001
0000154E                          3622  
0000154E  4EF9 0000159C           3623                 JMP         CHECK_code1010
00001554                          3624  
00001554  4EF9 000015A0           3625                 JMP         CHECK_code1011
0000155A                          3626  
0000155A  4EF9 000015A4           3627                 JMP         CHECK_code1100
00001560                          3628  
00001560  4EF9 000015A8           3629                 JMP         CHECK_code1101
00001566                          3630  
00001566  4EF9 000015AC           3631                 JMP         CHECK_code1110
0000156C                          3632  
0000156C  4EF9 000015B0           3633                 JMP         CHECK_code1111
00001572                          3634  
00001572                          3635          
00001572                          3636  
00001572                          3637   
00001572                          3638  
00001572                          3639  
00001572                          3640   
00001572                          3641  
00001572                          3642   
00001572                          3643  
00001572  6000 096A               3644  CHECK_code0000       BRA         CHECK_ADDI
00001576                          3645  
00001576  6000 0282               3646  CHECK_code0001       BRA         CHECK_MOVEB
0000157A                          3647  
0000157A  6000 02A4               3648  CHECK_code0010       BRA         CHECK_MOVEL
0000157E                          3649  
0000157E  6000 0282               3650  CHECK_code0011       BRA         CHECK_MOVEW
00001582                          3651  
00001582  6000 0480               3652  CHECK_code0100       BRA         CHECK_GROUP_0100_CODE
00001586                          3653  
00001586  6000 03F0               3654  CHECK_code0101       BRA         CHECK_ADDQ   * Subroutine for ADDQ
0000158A                          3655  
0000158A  4EF9 00001E0E           3656  CHECK_code0110       JMP         CHECK_BCC
00001590                          3657  
00001590  6000 0916               3658  CHECK_code0111       BRA         CHECK_MOVEQ
00001594                          3659  
00001594  6000 0542               3660  CHECK_code1000       BRA         CHECK_DIVU_OR
00001598                          3661  
00001598  6000 04DA               3662  CHECK_code1001       BRA         CHECK_SUB    * Subroutine for SUB    
0000159C                          3663  
0000159C  6000 0016               3664  CHECK_code1010       BRA         ERROR_HANDLE
000015A0                          3665  
000015A0                          3666   
000015A0                          3667  
000015A0                          3668  
000015A0                          3669  
000015A0                          3670  
000015A0                          3671   * another jump table to the 8 possible op-codes at the next level.
000015A0                          3672  
000015A0                          3673   
000015A0                          3674  
000015A0  6000 05D2               3675  CHECK_code1011       BRA         CHECK_CMP             *CMP  * Subroutuine for CMP
000015A4                          3676  
000015A4  6000 05F4               3677  CHECK_code1100       BRA         CHECK_MULS_AND             *MULS, AND
000015A8                          3678  
000015A8  6000 0756               3679  CHECK_code1101       BRA         CHECK_ADD_ADDA             *ADD_ADDA       *#$2700
000015AC                          3680  
000015AC  6000 004E               3681  CHECK_code1110       BRA         CHECK_SHIFTS
000015B0                          3682  
000015B0  6000 0002               3683  CHECK_code1111       BRA         ERROR_HANDLE
000015B4                          3684                   
000015B4                          3685  ERROR_HANDLE
Line 3686 ERROR: Undefined symbol
000015B4  43F9 004DBB8E           3686          LEA         HEX_SIGN, A1
000015BA                          3687          
000015BA  103C 000E               3688          MOVE.B      #14, D0
000015BE                          3689          
000015BE  4E4F                    3690          TRAP #15
000015C0                          3691  
000015C0  3A0D                    3692          MOVE.W      A5, D5
000015C2                          3693          
000015C2  4EB8 126C               3694          JSR         HEX_TO_ASCII
000015C6                          3695          
Line 3696 ERROR: Undefined symbol
000015C6  43F9 004DBB8E           3696          LEA         SPACE, A1
000015CC                          3697          
000015CC  103C 000E               3698          MOVE.B      #14, D0
000015D0                          3699          
000015D0  4E4F                    3700          TRAP #15
000015D2                          3701  
Line 3702 ERROR: Undefined symbol
000015D2  43F9 004DBB8E           3702          LEA     DATA, A1
000015D8                          3703          
000015D8  103C 000E               3704          MOVE.B      #14, D0
000015DC                          3705          
000015DC  4E4F                    3706          TRAP #15
000015DE                          3707          
Line 3708 ERROR: Undefined symbol
000015DE  43F9 004DBB8E           3708          LEA         POUND_SIGN, A1
000015E4                          3709          
000015E4  103C 000E               3710          MOVE.B      #14, D0
000015E8                          3711          
000015E8  4E4F                    3712          TRAP #15
000015EA                          3713          
Line 3714 ERROR: Undefined symbol
000015EA  43F9 004DBB8E           3714          LEA         HEX_SIGN, A1
000015F0                          3715          
000015F0  4E4F                    3716          TRAP #15
000015F2                          3717          
000015F2  3A1D                    3718          MOVE.W      (A5)+, D5
000015F4                          3719          
000015F4  4EB8 126C               3720          JSR         HEX_TO_ASCII
000015F8                          3721          
000015F8  6000 EA1A               3722          BRA         PARSE_MEMORY
000015FC                          3723          
000015FC                          3724          INCLUDE     'DAMIAN_OP_CODE_HANDLE_ERROR.X68'
000015FC  4280                    3725  CHECK_SHIFTS           CLR.L D0
000015FE                          3726                      
000015FE  4286                    3727                   CLR.L D6
00001600                          3728  
00001600  4281                    3729                   CLR.L D1
00001602                          3730                   
00001602  3015                    3731                   MOVE.W (A5), D0
00001604                          3732                   
00001604  E148                    3733                   LSL.W #8, D0
00001606                          3734                   
00001606  123C 000E               3735                   MOVE.B #14, D1
0000160A                          3736                   
0000160A  E268                    3737                   LSR.W D1, D0
0000160C                          3738                   
0000160C  B03C 0003               3739                   CMP.B  #%11, D0            * check to see if its memory shift
00001610                          3740                   
00001610  6700 002C               3741                   BEQ CHECK_MEMORY_SHIFTS
00001614                          3742                   
00001614  3015                    3743                   MOVE.W     (A5), D0
00001616                          3744                   
00001616  123C 000B               3745                   MOVE.B     #11, D1
0000161A                          3746                   
0000161A  E368                    3747                   LSL.W      D1, D0
0000161C                          3748                   
0000161C  123C 000E               3749                   MOVE.B     #14, D1
00001620                          3750                   
00001620  E268                    3751                   LSR.W      D1, D0
00001622                          3752                   
00001622  B03C 0000               3753                   CMP.B      #%00, D0
00001626                          3754                   
00001626  6700 00EE               3755                   BEQ        CHECK_ASD
0000162A                          3756                   
0000162A  B03C 0001               3757                   CMP.B      #%01, D0
0000162E                          3758                   
0000162E  6700 003E               3759                   BEQ        CHECK_LSD
00001632                          3760                   
00001632  B07C 0003               3761                   CMP        #%11, D0
00001636                          3762                   
00001636  6700 008E               3763                   BEQ        CHECK_ROD
0000163A                          3764                   
0000163A  6000 FF78               3765                   BRA        ERROR_HANDLE
0000163E                          3766                   
0000163E                          3767                   
0000163E                          3768  CHECK_MEMORY_SHIFTS
0000163E  3015                    3769                   MOVE.W (A5),D0
00001640                          3770                   
00001640  E948                    3771                   LSL.W #4,D0            *shift out the opcode
00001642                          3772                   
00001642  123C 000D               3773                   MOVE.B #13,D1          
00001646                          3774                   
00001646  E268                    3775                   LSR.W D1,D0            *shift out everything, so only three bits after opcode are there
00001648                          3776                   
00001648  B03C 0001               3777                   CMP.B #1,D0            
0000164C                          3778                   
0000164C  6700 0020               3779                   BEQ CHECK_LSD                *if the bits are 1, it is a logical shift
00001650                          3780                   
00001650  B03C 0003               3781                   CMP.B #3,D0
00001654                          3782                   
00001654  6700 0070               3783                   BEQ CHECK_ROD                *if the bits are 3, it is a rotation
00001658                          3784                   
00001658  3015                    3785                   MOVE.W (A5),D0
0000165A                          3786                   
0000165A  E948                    3787                   LSL.W #4,D0            *shift out the opcode
0000165C                          3788                   
0000165C  123C 000D               3789                   MOVE.B #13,D1          
00001660                          3790                   
00001660  E268                    3791                   LSR.W D1,D0            *shift out everything, so only three bits after opcode are there   
00001662                          3792                      
00001662  B03C 0000               3793                   CMP.B  #0, D0
00001666                          3794                   
00001666  6700 00AE               3795                   BEQ    CHECK_ASD
0000166A                          3796                   
0000166A  6000 FF48               3797                   BRA ERROR_HANDLE
0000166E                          3798                   
0000166E                          3799  
0000166E  4280                    3800  CHECK_LSD              CLR.L D0               *still need to do checks, since an asd shift could still be a possibility
00001670                          3801                   
00001670  4281                    3802                   CLR.L D1
00001672                          3803                                                 
00001672  3015                    3804                   MOVE.W (A5), D0
00001674                          3805                   
00001674  EF48                    3806                   LSL.W  #7, D0
00001676                          3807                   
00001676  123C 000F               3808                   MOVE.B #15, D1
0000167A                          3809                   
0000167A  E268                    3810                   LSR.W  D1, D0
0000167C                          3811                   
0000167C  B03C 0001               3812                   CMP.B  #1, D0
00001680                          3813                   
00001680  6700 000E               3814                   BEQ CHECK_LSL
00001684                          3815                   
00001684  B03C 0000               3816                   CMP.B #0, D0
00001688                          3817                   
00001688  6700 001C               3818                   BEQ CHECK_LSR
0000168C                          3819                   
0000168C  6000 FF26               3820                   BRA ERROR_HANDLE
00001690                          3821                   
00001690                          3822  
00001690                          3823  CHECK_LSL           
00001690  3015                    3824                   MOVE.W (A5), D0
00001692                          3825                   
00001692  E148                    3826                   LSL.W #8, D0
00001694                          3827                   
00001694  123C 000E               3828                   MOVE.B #14, D1
00001698                          3829                   
00001698  E268                    3830                   LSR.W D1, D0
0000169A                          3831                   
0000169A  B03C 0003               3832                   CMP.B  #%11, D0        * check to see if it is memory and not register shift
0000169E                          3833                   
0000169E  6700 001C               3834                   BEQ CHECK_LSD_MEMORY
000016A2                          3835                   
000016A2  6000 00BE               3836                   BRA CHECK_REGISTER_SHIFTS_EA
000016A6                          3837  
000016A6                          3838  CHECK_LSR                    
000016A6  3015                    3839                   MOVE.W (A5), D0
000016A8                          3840                   
000016A8  E148                    3841                   LSL.W #8, D0
000016AA                          3842                   
000016AA  123C 000E               3843                   MOVE.B #14, D1
000016AE                          3844                   
000016AE  E268                    3845                   LSR.W D1, D0
000016B0                          3846                   
000016B0  B03C 0003               3847                   CMP.B  #%11, D0            * check to see if memory shift
000016B4                          3848                   
000016B4  6700 0006               3849                   BEQ CHECK_LSD_MEMORY
000016B8                          3850                   
000016B8  6000 00A8               3851                   BRA CHECK_REGISTER_SHIFTS_EA
000016BC                          3852                   
000016BC                          3853  CHECK_LSD_MEMORY
000016BC  4EB9 000017D6           3854                   JSR    CHECK_MEMORY_SHIFTS_EA
000016C2                          3855                   
000016C2  6000 E998               3856                   BRA CHECK_PARSE_MEMORY
000016C6                          3857              
000016C6                          3858  
000016C6  4280                    3859  CHECK_ROD              CLR.L D0               *same check as logical shift, since an arithmetic shift could still be possible
000016C8                          3860                   
000016C8  4281                    3861                   CLR.L D1
000016CA                          3862                   
000016CA  3015                    3863                   MOVE.W (A5), D0
000016CC                          3864                   
000016CC  EF48                    3865                   LSL.W  #7, D0
000016CE                          3866                   
000016CE  123C 000F               3867                   MOVE.B #15, D1
000016D2                          3868                   
000016D2  E268                    3869                   LSR.W  D1, D0
000016D4                          3870                   
000016D4  B03C 0001               3871                   CMP.B  #1, D0
000016D8                          3872                   
000016D8  6700 0006               3873                   BEQ CHECK_ROL
000016DC                          3874                   
000016DC  6000 0018               3875                   BRA CHECK_ROR
000016E0                          3876  
000016E0                          3877  CHECK_ROL              
000016E0  3015                    3878                   MOVE.W (A5), D0
000016E2                          3879                   
000016E2  E148                    3880                   LSL.W #8, D0
000016E4                          3881                   
000016E4  123C 000E               3882                   MOVE.B #14, D1
000016E8                          3883                   
000016E8  E268                    3884                   LSR.W D1, D0
000016EA                          3885                   
000016EA  B03C 0003               3886                   CMP.B  #%11, D0            * check to see if its memory shift
000016EE                          3887                   
000016EE  6700 001C               3888                   BEQ CHECK_ROD_MEMORY
000016F2                          3889                   
000016F2  6000 006E               3890                   BRA CHECK_REGISTER_SHIFTS_EA
000016F6                          3891  
000016F6                          3892  CHECK_ROR                        
000016F6  3015                    3893                   MOVE.W (A5), D0
000016F8                          3894                   
000016F8  E148                    3895                   LSL.W #8, D0
000016FA                          3896                   
000016FA  123C 000E               3897                   MOVE.B #14, D1
000016FE                          3898                   
000016FE  E268                    3899                   LSR.W D1, D0
00001700                          3900                   
00001700  B03C 0003               3901                   CMP.B  #%11, D0            * check to see if its memory shift
00001704                          3902                   
00001704  6700 0006               3903                   BEQ CHECK_ROD_MEMORY
00001708                          3904                   
00001708  6000 0058               3905                   BRA CHECK_REGISTER_SHIFTS_EA
0000170C                          3906  
0000170C                          3907  CHECK_ROD_MEMORY       
0000170C  4EB9 000017D6           3908                   JSR    CHECK_MEMORY_SHIFTS_EA
00001712                          3909                   
00001712  6000 E948               3910                   BRA CHECK_PARSE_MEMORY
00001716                          3911                   
00001716                          3912                   
00001716  3015                    3913  CHECK_ASD              MOVE.W (A5), D0
00001718                          3914                   
00001718  EF48                    3915                   LSL.W  #7, D0
0000171A                          3916                   
0000171A  123C 000F               3917                   MOVE.B #15, D1
0000171E                          3918                   
0000171E  E268                    3919                   LSR.W  D1, D0
00001720                          3920                   
00001720  B03C 0001               3921                   CMP.B  #1, D0
00001724                          3922                   
00001724  6700 0006               3923                   BEQ CHECK_ASL
00001728                          3924                   
00001728  6000 0018               3925                   BRA CHECK_ASR
0000172C                          3926                   
0000172C                          3927  CHECK_ASL
0000172C                          3928                   
0000172C  3015                    3929                   MOVE.W (A5), D0
0000172E                          3930                   
0000172E  E148                    3931                   LSL.W #8, D0
00001730                          3932                   
00001730  123C 000E               3933                   MOVE.B #14, D1
00001734                          3934                   
00001734  E268                    3935                   LSR.W D1, D0
00001736                          3936                   
00001736  B03C 0003               3937                   CMP.B  #%11, D0            * check to see if its memory shift
0000173A                          3938                   
0000173A  6700 001C               3939                   BEQ CHECK_ASD_MEMORY
0000173E                          3940                   
0000173E  6000 0022               3941                   BRA CHECK_REGISTER_SHIFTS_EA
00001742                          3942                                    
00001742                          3943  
00001742                          3944  CHECK_ASR                               
00001742  3015                    3945                   MOVE.W (A5), D0
00001744                          3946                   
00001744  E148                    3947                   LSL.W #8, D0
00001746                          3948                   
00001746  123C 000E               3949                   MOVE.B #14, D1
0000174A                          3950                   
0000174A  E268                    3951                   LSR.W D1, D0
0000174C                          3952                   
0000174C  B03C 0003               3953                   CMP.B  #%11, D0            * check to see if its memory shift
00001750                          3954                   
00001750  6700 0006               3955                   BEQ CHECK_ASD_MEMORY
00001754                          3956                   
00001754  6000 000C               3957                   BRA CHECK_REGISTER_SHIFTS_EA
00001758                          3958  
00001758                          3959  CHECK_ASD_MEMORY
00001758  4EB9 000017D6           3960                   JSR    CHECK_MEMORY_SHIFTS_EA
0000175E                          3961                   
0000175E  6000 E8FC               3962                   BRA CHECK_PARSE_MEMORY
00001762                          3963                   
00001762                          3964  CHECK_REGISTER_SHIFTS_EA               
00001762  4EB8 0238               3965                   JSR GET_SIZE_PURPLE
00001766                          3966  
00001766  3015                    3967                   MOVE.W (A5), D0
00001768                          3968                   
00001768  123C 000A               3969                   MOVE.B #10, D1
0000176C                          3970                   
0000176C  E368                    3971                   LSL.W D1, D0
0000176E                          3972                   
0000176E  123C 000F               3973                   MOVE.B #15, D1
00001772                          3974                   
00001772  E268                    3975                   LSR.W D1, D0
00001774                          3976                   
00001774  B03C 0001               3977                   CMP.B #1, D0
00001778                          3978                   
00001778  6700 0030               3979                   BEQ CHECK_REGISTER
0000177C                          3980                   
0000177C  B03C 0000               3981                   CMP.B  #0, D0
00001780                          3982                   
00001780  6700 0006               3983                   BEQ CHECK_COUNT
00001784                          3984                   
00001784  6000 FE2E               3985                   BRA ERROR_HANDLE
00001788                          3986  
00001788                          3987                   
00001788                          3988  CHECK_COUNT    
00001788                          3989                 
00001788  3015                    3990                   MOVE.W (A5), D0
0000178A                          3991                   
0000178A  E948                    3992                   LSL.W #4, D0
0000178C                          3993                   
0000178C  123C 000D               3994                   MOVE.B #13, D1
00001790                          3995                   
00001790  E268                    3996                   LSR.W D1, D0
00001792                          3997                                    
00001792  3015                    3998                   MOVE.W (A5), D0
00001794                          3999                   
00001794  123C 000D               4000                   MOVE.B #13, D1                * to print out the ea that is being shifted
00001798                          4001                   
00001798  E368                    4002                   LSL.W D1, D0
0000179A                          4003                   
0000179A  E268                    4004                   LSR.W D1, D0
0000179C                          4005                   
0000179C  1E00                    4006                   MOVE.B D0, D7
0000179E                          4007                   
0000179E  7C00                    4008                   MOVE.L #%000, D6              * we know it is a data register
000017A0                          4009                   
000017A0  4EB9 00001C32           4010                   JSR CHECK_EA
000017A6                          4011                   
000017A6  6000 E8B4               4012                   BRA CHECK_PARSE_MEMORY
000017AA                          4013                   
000017AA                          4014  
000017AA                          4015  CHECK_REGISTER
000017AA  3015                    4016                   MOVE.W (A5), D0
000017AC                          4017                   
000017AC  E948                    4018                   LSL.W #4, D0
000017AE                          4019                   
000017AE  123C 000D               4020                   MOVE.B #13, D1
000017B2                          4021                   
000017B2  E268                    4022                   LSR.W D1, D0
000017B4                          4023                   
000017B4  1E00                    4024                   MOVE.B D0, D7
000017B6                          4025                   
000017B6  7C00                    4026                   MOVE.L #%000, D6
000017B8                          4027                   
000017B8  4EB9 00001C32           4028                   JSR CHECK_EA                  * to print out the data register
000017BE                          4029                   
000017BE  3015                    4030                   MOVE.W (A5), D0
000017C0                          4031                   
000017C0  123C 000D               4032                   MOVE.B #13, D1                * to print out the ea that is being shifted
000017C4                          4033                   
000017C4  E368                    4034                   LSL.W D1, D0
000017C6                          4035                   
000017C6  E268                    4036                   LSR.W D1, D0
000017C8                          4037                   
000017C8  1E00                    4038                   MOVE.B D0, D7
000017CA                          4039                   
000017CA  7C00                    4040                   MOVE.L #%000, D6              * we know it is a data register
000017CC                          4041                   
000017CC  4EB9 00001C32           4042                   JSR CHECK_EA
000017D2                          4043                   
000017D2  6000 E888               4044                   BRA CHECK_PARSE_MEMORY
000017D6                          4045                                   
000017D6                          4046  
000017D6                          4047  CHECK_MEMORY_SHIFTS_EA   * gets the mode and register of the memory ea, and prints it out
000017D6                          4048                   *JSR GET_SIZE_PURPLE
000017D6                          4049                   
000017D6                          4050                   *JSR PRINTOUT_SIZE_PURPLE
000017D6                          4051  
000017D6  3015                    4052                   MOVE.W (A5), D0
000017D8                          4053                   
000017D8  123C 000A               4054                   MOVE.B #10, D1
000017DC                          4055                   
000017DC  E368                    4056                   LSL.W D1, D0
000017DE                          4057                   
000017DE  123C 000D               4058                   MOVE.B #13, D1
000017E2                          4059                   
000017E2  E268                    4060                   LSR.W D1, D0
000017E4                          4061                   
000017E4  2C00                    4062                   MOVE.L D0, D6
000017E6                          4063                   
000017E6  3015                    4064                   MOVE.W (A5), D0
000017E8                          4065                   
000017E8  123C 000D               4066                   MOVE.B #13, D1
000017EC                          4067                   
000017EC  E368                    4068                   LSL.W D1, D0
000017EE                          4069                   
000017EE  E268                    4070                   LSR.W D1, D0
000017F0                          4071                   
000017F0  2E00                    4072                   MOVE.L D0, D7
000017F2                          4073                   
000017F2  4EB9 00001C32           4074                   JSR CHECK_EA
000017F8                          4075                   
000017F8  4E75                    4076                   RTS
000017FA                          4077                                   
000017FA                          4078                
000017FA                          4079  CHECK_MOVEB            
000017FA                          4080                   
000017FA  1A3C 0000               4081                   MOVE.B     #%00, D5
000017FE                          4082                   
000017FE  6000 004E               4083                   BRA CHECK_MOVE_EA
00001802                          4084  
00001802  4280                    4085  CHECK_MOVEW            CLR.L D0
00001804                          4086                   
00001804  4281                    4087                   CLR.L D1
00001806                          4088                   
00001806  3015                    4089                   MOVE.W (A5),D0
00001808                          4090                   
00001808  EF48                    4091                   LSL.W #7,D0
0000180A                          4092                   
0000180A  123C 000D               4093                   MOVE.B #13,D1
0000180E                          4094                   
0000180E  E268                    4095                   LSR.W D1,D0
00001810                          4096                   
00001810  B03C 0001               4097                   CMP.B #1,D0            *check to see if the mode of the destination is an address register
00001814                          4098                   
00001814  6700 0028               4099                   BEQ CHECK_MOVEAW             *if the destination is an address, it is MOVEA
00001818                          4100                   
00001818  1A3C 0001               4101                   MOVE.B     #%01, D5
0000181C                          4102                      
0000181C  6000 0030               4103                   BRA CHECK_MOVE_EA
00001820                          4104                
00001820                          4105  
00001820  4280                    4106  CHECK_MOVEL            CLR.L D0
00001822                          4107                   
00001822  4281                    4108                   CLR.L D1
00001824                          4109                   
00001824  3015                    4110                   MOVE.W (A5),D0
00001826                          4111                   
00001826  EF48                    4112                   LSL.W #7,D0
00001828                          4113                   
00001828  123C 000D               4114                   MOVE.B #13,D1
0000182C                          4115                   
0000182C  E268                    4116                   LSR.W D1,D0
0000182E                          4117                   
0000182E  B03C 0001               4118                   CMP.B #1,D0            *check to see if the mode of the destination is equal to 1
00001832                          4119                   
00001832  6700 0012               4120                   BEQ CHECK_MOVEAL             *if the mode is 1, then it is an address register, and the opcode is MOVEA
00001836                          4121                   
00001836  1A3C 0002               4122                   MOVE.B     #%10, D5
0000183A                          4123                   
0000183A  6000 0012               4124                   BRA CHECK_MOVE_EA
0000183E                          4125                   
0000183E                          4126                   
0000183E                          4127  CHECK_MOVEAW                    
0000183E  1A3C 0001               4128                   MOVE.B     #%01, D5
00001842                          4129                   
00001842  6000 000A               4130                   BRA CHECK_MOVE_EA
00001846                          4131  
00001846                          4132  CHECK_MOVEAL                  
00001846  1A3C 0002               4133                   MOVE.B     #%10, D5
0000184A                          4134                   
0000184A  6000 0002               4135                   BRA CHECK_MOVE_EA
0000184E                          4136  
0000184E                          4137  CHECK_MOVE_EA
0000184E  4247                    4138                   CLR    D7 
00001850                          4139                   
00001850  4246                    4140                   CLR    D6               
00001852                          4141                   
00001852  3015                    4142                   MOVE.W (A5), D0
00001854                          4143                   
00001854  123C 000A               4144                   MOVE.B #10, D1
00001858                          4145                   
00001858  E368                    4146                   LSL.W D1, D0
0000185A                          4147                   
0000185A  123C 000D               4148                   MOVE.B #13, D1
0000185E                          4149                   
0000185E  E268                    4150                   LSR.W D1, D0
00001860                          4151                   
00001860  1C00                    4152                   MOVE.B D0, D6          * getting the mode of the second ea
00001862                          4153                   
00001862  3015                    4154                   MOVE.W (A5), D0
00001864                          4155                   
00001864  123C 000D               4156                   MOVE.B #13, D1
00001868                          4157                   
00001868  E368                    4158                   LSL.W D1, D0
0000186A                          4159                   
0000186A  E268                    4160                   LSR.W D1, D0
0000186C                          4161                   
0000186C  1E00                    4162                   MOVE.B D0, D7          * getting the register of the second ea
0000186E                          4163                   
0000186E  4EB9 00001C32           4164                   JSR CHECK_EA
00001874                          4165                   
00001874  3015                    4166                   MOVE.W (A5), D0
00001876                          4167                   
00001876  E948                    4168                   LSL.W #4, D0
00001878                          4169                   
00001878  123C 000D               4170                   MOVE.B #13, D1
0000187C                          4171                   
0000187C  E268                    4172                   LSR.W D1, D0
0000187E                          4173                   
0000187E  1E00                    4174                   MOVE.B D0, D7          * getting the register of the first ea
00001880                          4175                   
00001880  3015                    4176                   MOVE.W (A5), D0
00001882                          4177                   
00001882  EF48                    4178                   LSL.W #7, D0
00001884                          4179                   
00001884  123C 000D               4180                   MOVE.B #13, D1
00001888                          4181                   
00001888  E268                    4182                   LSR.W D1, D0
0000188A                          4183                   
0000188A  1C00                    4184                   MOVE.B D0, D6          * getting the mode of the first ea
0000188C                          4185                   
0000188C  4EB9 00001C32           4186                   JSR CHECK_EA
00001892                          4187                   
00001892  6000 E7C8               4188                   BRA CHECK_PARSE_MEMORY
00001896                          4189  
00001896                          4190  
00001896                          4191  
00001896                          4192  
00001896                          4193  
00001896                          4194  
00001896                          4195  
00001896                          4196  
00001896                          4197  
00001896                          4198  
00001896                          4199  
00001896                          4200  
00001896                          4201  
00001896                          4202  -------------------- end include --------------------
00001896                          4203          INCLUDE     'CHECK_TRYING_NOP.X68'
00001896                          4204  CHECK_LEA_OPCODE
00001896                          4205      
00001896  3015                    4206      MOVE.W  (A5),D0     *D0 is the binary value to decode
00001898                          4207      
00001898  123C 000D               4208      MOVE.B  #13,D1     
0000189C                          4209  
0000189C  E368                    4210      LSL.W   D1,D0
0000189E                          4211                   
0000189E  123C 000D               4212      MOVE.B  #13,D1
000018A2                          4213  
000018A2  E268                    4214      LSR.W   D1,D0  *D0 now holds Register
000018A4                          4215                                              
000018A4  3E00                    4216      MOVE.W D0, D7 *D7 holds Register  
000018A6                          4217  
000018A6  3015                    4218      MOVE.W  (A5),D0     *D0 is the binary value to decode
000018A8                          4219  
000018A8  123C 000A               4220      MOVE.B  #10,D1     
000018AC                          4221  
000018AC  E368                    4222      LSL.W   D1,D0
000018AE                          4223                   
000018AE  123C 000D               4224      MOVE.B  #13,D1
000018B2                          4225  
000018B2  E268                    4226      LSR.W   D1,D0  *D0 now holds MODE
000018B4                          4227                                              
000018B4  3C00                    4228      MOVE.W D0, D6 *D6 holds MODE  
000018B6                          4229      
000018B6  4EB9 00001C32           4230      JSR CHECK_EA
000018BC                          4231  
000018BC                          4232                                    
000018BC  3015                    4233      MOVE.W  (A5),D0     *D0 is the binary value to decode 
000018BE                          4234  
000018BE  7C01                    4235      MOVE.L #%001, D6
000018C0                          4236  
000018C0  123C 0004               4237      MOVE.B  #4,D1     
000018C4                          4238  
000018C4  E368                    4239      LSL.W   D1,D0
000018C6                          4240                   
000018C6  123C 000D               4241      MOVE.B  #13,D1
000018CA                          4242  
000018CA  E268                    4243      LSR.W   D1,D0  
000018CC                          4244                                              
000018CC  3E00                    4245      MOVE.W D0, D7 
000018CE                          4246      
000018CE  4EB9 00001C32           4247      JSR CHECK_EA
000018D4                          4248      
000018D4  4EF8 005C               4249      JMP     CHECK_PARSE_MEMORY       
000018D8                          4250            
000018D8                          4251  CHECK_NOP_OPCODE
000018D8                          4252      
000018D8  6000 E782               4253      BRA CHECK_PARSE_MEMORY
000018DC                          4254  CHECk_RTS_OPCODE 
000018DC                          4255      
000018DC  6000 E77E               4256      BRA CHECK_PARSE_MEMORY
000018E0                          4257      
000018E0                          4258  CHECK_JSR_OPCODE 
000018E0                          4259      
000018E0  3015                    4260      MOVE.W (A5), D0
000018E2                          4261  
000018E2  123C 000D               4262      MOVE.B  #13,D1     
000018E6                          4263  
000018E6  E368                    4264      LSL.W   D1,D0
000018E8                          4265                   
000018E8  123C 000D               4266      MOVE.B  #13,D1
000018EC                          4267  
000018EC  E268                    4268      LSR.W   D1,D0  *D0 now holds Register
000018EE                          4269                                              
000018EE  3E00                    4270      MOVE.W D0, D7 *D7 holds Register  
000018F0                          4271  
000018F0  3015                    4272      MOVE.W (A5), D0
000018F2                          4273  
000018F2  123C 000A               4274      MOVE.B  #10,D1     
000018F6                          4275  
000018F6  E368                    4276      LSL.W   D1,D0
000018F8                          4277                   
000018F8  123C 000D               4278      MOVE.B  #13,D1
000018FC                          4279  
000018FC  E268                    4280      LSR.W   D1,D0  *D0 now holds MODE
000018FE                          4281                                              
000018FE  3C00                    4282      MOVE.W D0, D6 *D6 holds MODE  
00001900                          4283      
00001900  4EB9 00001C32           4284      JSR CHECK_EA
00001906                          4285      
00001906  6000 E754               4286      BRA CHECK_PARSE_MEMORY
0000190A                          4287         
0000190A                          4288  CHECK_CLR_OPCODE 
0000190A                          4289                     
0000190A                          4290      
0000190A                          4291                
0000190A  3015                    4292      MOVE.W      (A5), D0
0000190C                          4293               
0000190C  123C 0006               4294      MOVE.B      #6, D1
00001910                          4295                 
00001910  E268                    4296      LSR.W       D1, D0  *shift right 6 
00001912                          4297                 
00001912  123C 000E               4298      MOVE.B      #14, D1
00001916                          4299                 
00001916  E368                    4300      LSL.W       D1, D0  *shift left 15, only size is left
00001918                          4301      
00001918  123C 000E               4302      MOVE.B      #14, D1
0000191C                          4303                 
0000191C  E268                    4304      LSR.W       D1, D0  *shift right 15, size is left   
0000191E                          4305      
0000191E  B07C 0000               4306      CMP.W       #00, D0
00001922                          4307  
00001922  6700 0048               4308      BEQ         CHECK_SIZE_B
00001926                          4309      
00001926  B07C 0001               4310      CMP.W       #01, D0
0000192A                          4311                 
0000192A  6700 0044               4312      BEQ         CHECK_SIZE_W 
0000192E                          4313      
0000192E  B07C 0002               4314      CMP.W       #2, D0
00001932                          4315                 
00001932  6700 0040               4316      BEQ         CHECK_SIZE_L
00001936                          4317      
00001936  6000 FC7C               4318      BRA          ERROR_HANDLE
0000193A                          4319  
0000193A                          4320  CHECK_PRINT_SIZE
0000193A                          4321  
0000193A  4280                    4322      CLR.L   D0
0000193C                          4323                  
0000193C  4281                    4324      CLR.L   D1
0000193E                          4325                       * set register
0000193E                          4326                   
0000193E  3015                    4327      MOVE.W  (A5),D0     *D0 is the binary value to decode
00001940                          4328                 
00001940  123C 000D               4329      MOVE.B  #13,D1           *8 bits is the number of times to shift to the left to remove opcode & register #
00001944                          4330  
00001944  E368                    4331      LSL.W   D1,D0           *Shift the bits 8 times -> D0 now removes the opcode & reg#
00001946                          4332  
00001946  123C 000D               4333      MOVE.B  #13,D1          *14 bits is the number of times to shift to hold the mode number
0000194A                          4334  
0000194A  E268                    4335      LSR.W   D1,D0           *Shift the bits 13 times -> D0 now holds the size number
0000194C                          4336  
0000194C  1E00                    4337      MOVE.B  D0, D7          *put D0 to data register into D7 for future printing
0000194E                          4338                   
0000194E                          4339                   * set mode
0000194E  4280                    4340      CLR.L D0                *clear D0
00001950                          4341                   
00001950  4281                    4342      CLR.L D1                *clear D1
00001952                          4343                   
00001952  3015                    4344      MOVE.W  (A5),D0     *D0 is the binary value to decode
00001954                          4345                 
00001954  123C 000A               4346      MOVE.B  #10,D1           *8 bits is the number of times to shift to the left to remove opcode & register #
00001958                          4347  
00001958  E368                    4348      LSL.W   D1,D0           *Shift the bits 8 times -> D0 now removes the opcode & reg#
0000195A                          4349  
0000195A  123C 000D               4350      MOVE.B  #13,D1          *14 bits is the number of times to shift to hold the mode number
0000195E                          4351  
0000195E  E268                    4352      LSR.W   D1,D0           *Shift the bits 13 times -> D0 now holds the size number
00001960                          4353  
00001960  2C00                    4354      MOVE.L  D0, D6          *put D0 to data register into D7 for future printing
00001962                          4355                   
00001962  4EB9 00001C32           4356      JSR     CHECK_EA *by using jmp table
00001968                          4357  
00001968  6000 E6F2               4358      BRA CHECK_PARSE_MEMORY
0000196C                          4359      
0000196C                          4360  CHECK_SIZE_B 
0000196C                          4361                
0000196C                          4362      
0000196C  4EF8 193A               4363      JMP CHECK_PRINT_SIZE
00001970                          4364      
00001970                          4365  CHECK_SIZE_W 
00001970                          4366                
00001970                          4367      
00001970  4EF8 193A               4368      JMP CHECK_PRINT_SIZE
00001974                          4369      
00001974                          4370  CHECK_SIZE_L 
00001974                          4371                
00001974                          4372      
00001974  4EF8 193A               4373      JMP CHECK_PRINT_SIZE
00001978                          4374  
00001978                          4375  
00001978                          4376  
00001978                          4377  -------------------- end include --------------------
00001978                          4378          INCLUDE     'CHECK_ADDQ.X68'
00001978                          4379  CHECK_ADDQ
00001978                          4380  
00001978                          4381      
00001978  3015                    4382      MOVE.W (A5), D0
0000197A                          4383      
0000197A  123C 0008               4384      MOVE.B  #8,D1     
0000197E                          4385  
0000197E  E368                    4386      LSL.W   D1,D0
00001980                          4387                   
00001980  123C 000E               4388      MOVE.B  #14,D1
00001984                          4389  
00001984  E268                    4390      LSR.W   D1,D0  *DO now holds size
00001986                          4391                                              
00001986  B03C 0002               4392      CMP.B    #$2, D0        *if D0 holds 2, size is L
0000198A                          4393      
0000198A  6700 002A               4394      BEQ      CHECK_ADDQL
0000198E                          4395                   
0000198E  B03C 0001               4396      CMP.B    #$1, D0        *if D0 holds 1, size is W
00001992                          4397                                   
00001992  6700 0018               4398      BEQ      CHECK_ADDQW
00001996                          4399      
00001996  B03C 0000               4400      CMP.B    #$0, D0        *if D0 holds 1, size is W
0000199A                          4401                                   
0000199A  6700 0006               4402      BEQ      CHECK_ADDQB
0000199E                          4403  
0000199E  6000 FC14               4404      BRA      ERROR_HANDLE
000019A2                          4405  
000019A2                          4406  CHECK_ADDQB  *Print B
000019A2                          4407  
000019A2                          4408      
000019A2  1A3C 0000               4409      MOVE.B #%00, D5
000019A6                          4410      
000019A6  4EF9 000019C0           4411      JMP CHECK_PRINTADDQ
000019AC                          4412      
000019AC                          4413  CHECK_ADDQW  *Print W
000019AC                          4414  
000019AC                          4415      
000019AC  1A3C 0001               4416      MOVE.B #%01, D5
000019B0                          4417  
000019B0  4EF9 000019C0           4418      JMP CHECK_PRINTADDQ
000019B6                          4419  
000019B6                          4420  CHECK_ADDQL   *Print L
000019B6                          4421  
000019B6                          4422  
000019B6  1A3C 0002               4423      MOVE.B #%10, D5
000019BA                          4424      
000019BA  4EF9 000019C0           4425      JMP CHECK_PRINTADDQ
000019C0                          4426      
000019C0                          4427  CHECK_PRINTADDQ
000019C0                          4428  
000019C0                          4429      
000019C0  3015                    4430      MOVE.W (A5), D0
000019C2                          4431  
000019C2  123C 0004               4432      MOVE.B  #4,D1     
000019C6                          4433  
000019C6  E368                    4434      LSL.W   D1,D0
000019C8                          4435                   
000019C8  123C 000D               4436      MOVE.B  #13,D1
000019CC                          4437  
000019CC  E268                    4438      LSR.W   D1,D0  *D0 now holds Dn
000019CE                          4439      
000019CE  4281                    4440      CLR.L D1
000019D0                          4441                                              
000019D0  3200                    4442      MOVE.W D0, D1 *D6 holds Dn   
000019D2                          4443  
000019D2                          4444      
000019D2  4286                    4445      CLR.L D6
000019D4                          4446      
000019D4  4287                    4447      CLR.L D7
000019D6                          4448      
000019D6  3015                    4449      MOVE.W (A5), D0
000019D8                          4450  
000019D8  123C 000A               4451      MOVE.B  #10,D1     
000019DC                          4452  
000019DC  E368                    4453      LSL.W   D1,D0
000019DE                          4454                   
000019DE  123C 000D               4455      MOVE.B  #13,D1
000019E2                          4456  
000019E2  E268                    4457      LSR.W   D1,D0  *D0 now holds MODE
000019E4                          4458                                              
000019E4  3C00                    4459      MOVE.W D0, D6 *D6 holds mode
000019E6                          4460      
000019E6  4281                    4461      CLR.L D1
000019E8                          4462      
000019E8  4280                    4463      CLR.L D0
000019EA                          4464      
000019EA  3015                    4465      MOVE.W (A5), D0
000019EC                          4466  
000019EC  123C 000D               4467      MOVE.B  #13,D1     
000019F0                          4468  
000019F0  E368                    4469      LSL.W   D1,D0
000019F2                          4470                   
000019F2  123C 000D               4471      MOVE.B  #13,D1
000019F6                          4472  
000019F6  E268                    4473      LSR.W   D1,D0  *D0 now holds MODE
000019F8                          4474                                              
000019F8  3E00                    4475      MOVE.W D0, D7 *D6 holds Register   
000019FA                          4476      
000019FA  4EB9 00001C32           4477      JSR CHECK_EA
00001A00                          4478      
00001A00  6000 E65A               4479      BRA CHECK_PARSE_MEMORY
00001A04                          4480  
00001A04                          4481  
00001A04                          4482  
00001A04                          4483      
00001A04                          4484  
00001A04                          4485  
00001A04                          4486  
00001A04                          4487  
00001A04                          4488  
00001A04                          4489  
00001A04                          4490  
00001A04                          4491  
00001A04                          4492  
00001A04                          4493  
00001A04                          4494  
00001A04                          4495  
00001A04                          4496  
00001A04                          4497  
00001A04                          4498  -------------------- end include --------------------
00001A04                          4499          INCLUDE     'CHECK_GROUP_0100_CODE.X68'
00001A04                          4500  CHECK_GROUP_0100_CODE          *at this point we know the first 4 bits are 0100 -> NOP, RTS, JSR,  MOVEM, CLR
00001A04                          4501  
00001A04  4280                    4502                   CLR.L D0                *clear D0
00001A06                          4503                   
00001A06  4281                    4504                   CLR.L D1                *clear D1
00001A08                          4505                   
00001A08  3015                    4506                   MOVE.W  (A5),D0     *D0 is the binary value to decode
00001A0A                          4507  
00001A0A  123C 0004               4508                   MOVE.B  #4,D1           *4 bits is the number of times to shift to the left to remove opcode
00001A0E                          4509  
00001A0E  E368                    4510                   LSL.W   D1,D0           *Shift the bits 4 times -> D0 now removes the opcode
00001A10                          4511                   
00001A10  123C 0004               4512                   MOVE.B  #4,D1           *4 bits is the number of times to shift to hold everything except the opcode
00001A14                          4513  
00001A14  E268                    4514                   LSR.W   D1,D0           *Shift the bits 4 times -> D0 now holds everything except opcode
00001A16                          4515                   
00001A16                          4516                                              
00001A16  B07C 0E71               4517                   CMP.W    #$E71, D0      *if D0 holds E71, the opcode is NOP
00001A1A                          4518                   
00001A1A  6700 FEBC               4519                   BEQ      CHECK_NOP_OPCODE       *Branch to NOP_CODE if the opcode is NOP
00001A1E                          4520                   
00001A1E                          4521                   
00001A1E  B07C 0E75               4522                   CMP.W    #$E75, D0      *if D0 holds E75, the opcode is RTS
00001A22                          4523                   
00001A22  6700 FEB8               4524                   BEQ      CHECK_RTS_OPCODE       *Branch to RTS_CODE if the opcode is RTS
00001A26                          4525                   
00001A26                          4526                   
00001A26  4280                    4527                   CLR.L D0                *clear D0
00001A28                          4528                   
00001A28                          4529                   
00001A28  4281                    4530                   CLR.L D1                *clear D1
00001A2A                          4531                   
00001A2A                          4532                   
00001A2A  3015                    4533                   MOVE.W  (A5),D0     *D0 is the binary value to decode
00001A2C                          4534  
00001A2C                          4535  
00001A2C  123C 0004               4536                   MOVE.B  #4,D1           *4 bits is the number of times to shift to the left to remove opcode
00001A30                          4537  
00001A30                          4538  
00001A30  E368                    4539                   LSL.W   D1,D0           *Shift the bits 4 times -> D0 now removes the opcode
00001A32                          4540                   
00001A32  123C 000C               4541                   MOVE.B  #12,D1           *12 bits is the number of times to shift to hold the 4th-8th bits (counting left to right, non-inclusive)
00001A36                          4542  
00001A36  E268                    4543                   LSR.W   D1,D0           *Shift the bits 4 times -> D0 now holds 4th-8th bits (counting left to right, non-inclusive)
00001A38                          4544                   
00001A38  B07C 0002               4545                   CMP.W    #$2, D0        *if D0 holds #2, the opcode is CLR
00001A3C                          4546                   
00001A3C  6700 FECC               4547                   BEQ      CHECK_CLR_OPCODE       *Branch to NOP_CODE if the opcode is CLR
00001A40                          4548                   
00001A40                          4549          
00001A40  B07C 000E               4550                   CMP.W    #$E, D0        *if D0 holds $E = 14, the opcode is JSR
00001A44                          4551                   
00001A44  6700 FE9A               4552                   BEQ      CHECK_JSR_OPCODE       *Branch to NOP_CODE if the opcode is CLR
00001A48                          4553                   
00001A48  4280                    4554                   CLR.L D0                *clear D0
00001A4A                          4555                   
00001A4A  4281                    4556                   CLR.L D1                *clear D1
00001A4C                          4557                   
00001A4C  3015                    4558                   MOVE.W  (A5),D0     *D0 is the binary value to decode
00001A4E                          4559  
00001A4E  123C 0007               4560                   MOVE.B  #7,D1 
00001A52                          4561  
00001A52  E368                    4562                   LSL.W   D1,D0 
00001A54                          4563                   
00001A54  123C 000D               4564                   MOVE.B  #13,D1 
00001A58                          4565  
00001A58  E268                    4566                   LSR.W   D1,D0     
00001A5A                          4567                   
00001A5A  B07C 0007               4568                   CMP.W    #%111, D0  
00001A5E                          4569                   
00001A5E  6700 FE36               4570                   BEQ CHECK_LEA_OPCODE
00001A62                          4571                   
00001A62  3015                    4572                   MOVE.W  (A5),D0     *D0 is the binary value to decode
00001A64                          4573  
00001A64  123C 0006               4574                   MOVE.B  #6,D1 
00001A68                          4575  
00001A68  E368                    4576                   LSL.W   D1,D0 
00001A6A                          4577                   
00001A6A  123C 000F               4578                   MOVE.B  #15,D1 
00001A6E                          4579  
00001A6E  E268                    4580                   LSR.W   D1,D0     
00001A70                          4581                   
00001A70                          4582  
00001A70  6000 FB42               4583                   BRA      ERROR_HANDLE
00001A74                          4584      
00001A74                          4585  
00001A74                          4586  
00001A74                          4587  
00001A74                          4588  
00001A74                          4589  
00001A74                          4590  
00001A74                          4591  
00001A74                          4592  -------------------- end include --------------------
00001A74                          4593          INCLUDE     'SUB_CHECK.X68'
00001A74                          4594  
00001A74                          4595  CHECK_SUB
00001A74                          4596                   * ADD message
00001A74                          4597                   
00001A74  4EB9 00001DBA           4598                   JSR    CHECK_GET_SIZE_PURPLE
00001A7A                          4599                   
00001A7A                          4600             *      JSR     PRINTOUT_SIZE_PURPLE
00001A7A                          4601                   
00001A7A                          4602                   
00001A7A  4280                    4603                   CLR.L D0                *clear D0
00001A7C                          4604                   
00001A7C  4281                    4605                   CLR.L D1                *clear D1
00001A7E                          4606                   
00001A7E  3015                    4607                   MOVE.W  (A5),D0     *D0 is the binary value to decode
00001A80                          4608                   
00001A80                          4609                   * check the bit at 7
00001A80  123C 0007               4610                   MOVE.B  #7,D1           *8 bits is the number of times to shift to the left to remove opcode & register #
00001A84                          4611  
00001A84  E368                    4612                   LSL.W   D1,D0           *Shift the bits 8 times -> D0 now removes the opcode & reg#
00001A86                          4613                   
00001A86  123C 000F               4614                   MOVE.B  #15,D1          *14 bits is the number of times to shift to hold the mode number
00001A8A                          4615  
00001A8A  E268                    4616                   LSR.W   D1,D0           *Shift the bits 14 times -> D0 now holds the mode number
00001A8C                          4617                   
00001A8C  B03C 0000               4618                   CMP.B   #0, D0
00001A90                          4619                   
00001A90                          4620                *   BTST    #8, D0
00001A90                          4621                   
00001A90  6700 EAB4               4622                   BEQ     SUB_FIRST_EA
00001A94                          4623                   
00001A94                          4624                   * for the first Dn 
00001A94  4EB9 00001DD2           4625                   JSR     CHECK_GET_Data_Register
00001A9A                          4626                   
00001A9A  4286                    4627                   CLR.L   D6
00001A9C                          4628                   
00001A9C  1C3C 0000               4629                   MOVE.B  #%000, D6 * for mode
00001AA0                          4630                   
00001AA0  4EB9 00001C32           4631                   JSR     CHECK_EA *by using jmp table
00001AA6                          4632                   
00001AA6                          4633              *     JSR     PRINT_COMMA
00001AA6                          4634                   
00001AA6  4EB9 00001DE4           4635                   JSR     CHECK_Set_Ea
00001AAC                          4636                   
00001AAC  4EB9 00001C32           4637                   JSR     CHECK_EA *by using jmp table
00001AB2                          4638                   
00001AB2  4EF8 005C               4639                   JMP     CHECK_PARSE_MEMORY
00001AB6                          4640                   
00001AB6                          4641  CHECK_SUB_FIRST_EA
00001AB6  4EB9 00001DE4           4642                   JSR     CHECK_Set_Ea
00001ABC                          4643                   
00001ABC  4EB9 00001C32           4644                   JSR     CHECK_EA *by using jmp table
00001AC2                          4645                   
00001AC2                          4646         *          JSR     PRINT_COMMA
00001AC2                          4647                   
00001AC2                          4648                    * for the first Dn 
00001AC2  4EB9 00001DD2           4649                   JSR     CHECK_GET_Data_Register
00001AC8                          4650                   
00001AC8  4286                    4651                   CLR.L   D6
00001ACA                          4652                   
00001ACA  1C3C 0000               4653                   MOVE.B  #%000, D6 * for mode
00001ACE                          4654  
00001ACE  4EB9 00001C32           4655                   JSR     CHECK_EA *by using jmp table
00001AD4                          4656                   
00001AD4  4EF8 005C               4657                   JMP     CHECK_PARSE_MEMORY
00001AD8                          4658  
00001AD8                          4659  
00001AD8                          4660  
00001AD8                          4661  
00001AD8                          4662  
00001AD8                          4663  
00001AD8                          4664  -------------------- end include --------------------
00001AD8                          4665          INCLUDE     'DIVU_OR_CHECK.X68'
00001AD8                          4666      
00001AD8  4EB9 00001DBA           4667  CHECK_DIVU_OR          JSR      CHECK_GET_SIZE_PURPLE  
00001ADE                          4668                                            
00001ADE  BA3C 0003               4669                   CMP.B    #$3, D5        *if D0 holds 3, the opcode is DIVU
00001AE2                          4670                   
00001AE2  6700 0008               4671                   BEQ      CHECK_DIVU_CODE
00001AE6                          4672                   
00001AE6  4EF9 00001B16           4673                   JMP      CHECK_OR_CODE
00001AEC                          4674                   
00001AEC                          4675  CHECK_DIVU_CODE  
00001AEC                          4676                   * OP_CODE message
00001AEC                          4677  
00001AEC  3A3C 0001               4678                   MOVE    #%01, D5          
00001AF0                          4679                   
00001AF0                          4680              *     LEA      SIZE_W_PRINT,    A1
00001AF0                          4681                   
00001AF0                          4682              *     MOVE.B   #14,             D0
00001AF0                          4683          
00001AF0                          4684              *     TRAP #15
00001AF0                          4685                   
00001AF0  4EB9 00001DE4           4686                   JSR     CHECK_Set_Ea
00001AF6                          4687                   
00001AF6  1A3C 0001               4688                   MOVE.B  #%01, D5
00001AFA                          4689                   
00001AFA  4EB9 00001C32           4690                   JSR     CHECK_EA *by using jmp table
00001B00                          4691                   
00001B00                          4692             *      JSR     PRINT_COMMA
00001B00                          4693                   
00001B00                          4694                    * for the first Dn 
00001B00  4EB9 00001DD2           4695                   JSR     CHECK_GET_Data_Register
00001B06                          4696                   
00001B06  4286                    4697                   CLR.L   D6
00001B08                          4698                   
00001B08  1C3C 0000               4699                   MOVE.B  #%000, D6 * for mode
00001B0C                          4700  
00001B0C  4EB9 00001C32           4701                   JSR     CHECK_EA *by using jmp table
00001B12                          4702  
00001B12  4EF8 005C               4703                   JMP     CHECK_PARSE_MEMORY
00001B16                          4704  
00001B16                          4705  CHECK_OR_CODE    
00001B16                          4706                   * OP_CODE message
00001B16                          4707  
00001B16                          4708         *          JSR PRINTOUT_SIZE_PURPLE
00001B16                          4709                   
00001B16                          4710                     * check for dn and ea
00001B16  4280                    4711                   CLR.L D0                *clear D0
00001B18                          4712                   
00001B18  4281                    4713                   CLR.L D1                *clear D1
00001B1A                          4714                   
00001B1A  3015                    4715                   MOVE.W  (A5),D0     *D0 is the binary value to decode
00001B1C                          4716                   
00001B1C                          4717                   * check the bit at 7
00001B1C  123C 0007               4718                   MOVE.B  #7,D1           *8 bits is the number of times to shift to the left to remove opcode & register #
00001B20                          4719  
00001B20  E368                    4720                   LSL.W   D1,D0           *Shift the bits 8 times -> D0 now removes the opcode & reg#
00001B22                          4721                   
00001B22  123C 000F               4722                   MOVE.B  #15,D1          *14 bits is the number of times to shift to hold the mode number
00001B26                          4723  
00001B26  E268                    4724                   LSR.W   D1,D0           *Shift the bits 14 times -> D0 now holds the mode number
00001B28                          4725                   
00001B28  B03C 0000               4726                   CMP.B   #0, D0
00001B2C                          4727                   
00001B2C                          4728                  * BTST    #7, D0
00001B2C                          4729                   
00001B2C  6700 0024               4730                   BEQ     CHECK_OR_FIRST_EA
00001B30                          4731                   
00001B30                          4732                   * for the first Dn 
00001B30  4EB9 00001DD2           4733                   JSR     CHECK_GET_Data_Register
00001B36                          4734                   
00001B36  4286                    4735                   CLR.L   D6
00001B38                          4736                   
00001B38  1C3C 0000               4737                   MOVE.B  #%000, D6 * for mode
00001B3C                          4738                   
00001B3C  4EB9 00001C32           4739                   JSR     CHECK_EA *by using jmp table
00001B42                          4740                   
00001B42                          4741          *         JSR     PRINT_COMMA
00001B42                          4742                   
00001B42  4EB9 00001DE4           4743                   JSR     CHECK_Set_Ea
00001B48                          4744                   
00001B48  4EB9 00001C32           4745                   JSR     CHECK_EA *by using jmp table
00001B4E                          4746                   
00001B4E  4EF8 005C               4747                   JMP     CHECK_PARSE_MEMORY
00001B52                          4748                   
00001B52                          4749  CHECK_OR_FIRST_EA
00001B52  4EB9 00001DE4           4750                   JSR     CHECK_Set_Ea
00001B58                          4751                   
00001B58  4EB9 00001C32           4752                   JSR     CHECK_EA *by using jmp table
00001B5E                          4753                   
00001B5E                          4754          *         JSR     PRINT_COMMA
00001B5E                          4755                   
00001B5E                          4756                    * for the first Dn 
00001B5E  4EB9 00001DD2           4757                   JSR     CHECK_GET_Data_Register
00001B64                          4758                   
00001B64  4286                    4759                   CLR.L   D6
00001B66                          4760                   
00001B66  1C3C 0000               4761                   MOVE.B  #%000, D6 * for mode
00001B6A                          4762  
00001B6A  4EB9 00001C32           4763                   JSR     CHECK_EA *by using jmp table
00001B70                          4764                   
00001B70  4EF8 005C               4765                   JMP     CHECK_PARSE_MEMORY
00001B74                          4766  
00001B74                          4767  
00001B74                          4768  
00001B74                          4769  
00001B74                          4770  
00001B74                          4771  
00001B74                          4772  
00001B74                          4773  
00001B74                          4774  
00001B74                          4775  
00001B74                          4776  
00001B74                          4777  
00001B74                          4778  
00001B74                          4779  
00001B74                          4780  -------------------- end include --------------------
00001B74                          4781          INCLUDE     'CMP_CHECK.X68'
00001B74                          4782     
00001B74                          4783  CHECK_CMP
00001B74                          4784                   * ADD message
00001B74                          4785                   
00001B74  4EB8 0238               4786                   JSR GET_SIZE_PURPLE
00001B78                          4787                   
00001B78                          4788          *         JSR     PRINTOUT_SIZE_PURPLE
00001B78                          4789                   
00001B78                          4790                   
00001B78  4EB9 00001DE4           4791                   JSR     CHECK_Set_Ea
00001B7E                          4792                   
00001B7E  4EB9 00001C32           4793                   JSR     CHECK_EA *by using jmp table
00001B84                          4794                   
00001B84                          4795              *     JSR     PRINT_COMMA
00001B84                          4796                   
00001B84                          4797                    * for the first Dn 
00001B84  4EB9 00001DD2           4798                   JSR     CHECK_GET_Data_Register
00001B8A                          4799                   
00001B8A  4286                    4800                   CLR.L   D6
00001B8C                          4801                   
00001B8C  1C3C 0000               4802                   MOVE.B  #%000, D6 * for mode
00001B90                          4803  
00001B90  4EB9 00001C32           4804                   JSR     CHECK_EA *by using jmp table
00001B96                          4805                   
00001B96  4EF8 005C               4806                   JMP     CHECK_PARSE_MEMORY
00001B9A                          4807  
00001B9A                          4808                   
00001B9A                          4809   *                JMP     NEXT
00001B9A                          4810  
00001B9A                          4811  
00001B9A                          4812  
00001B9A                          4813  
00001B9A                          4814  
00001B9A                          4815  
00001B9A                          4816  -------------------- end include --------------------
00001B9A                          4817          INCLUDE     'MULS_AND_CHECK.X68'
00001B9A                          4818   
00001B9A  4EB9 00001DBA           4819  CHECK_MULS_AND   JSR      CHECK_GET_SIZE_PURPLE
00001BA0                          4820                                              
00001BA0  BA3C 0003               4821                   CMP.B    #$3, D5        *if D0 holds 3, the opcode is DIVU
00001BA4                          4822                   
00001BA4  6700 0008               4823                   BEQ      CHECK_MULS_CODE
00001BA8                          4824                   
00001BA8  4EF9 00001BD4           4825                   JMP      CHECK_AND_CODE
00001BAE                          4826                   
00001BAE                          4827  CHECK_MULS_CODE
00001BAE                          4828                   * OP_CODE message
00001BAE                          4829  
00001BAE                          4830             *      LEA      SIZE_W_PRINT,    A1
00001BAE                          4831                   
00001BAE                          4832             *      MOVE.B   #14,             D0
00001BAE                          4833          
00001BAE                          4834             *      TRAP #15
00001BAE                          4835                   
00001BAE  4EB9 00001DE4           4836                   JSR     CHECK_Set_Ea
00001BB4                          4837                   
00001BB4  1A3C 0001               4838                   MOVE.B  #%01, D5
00001BB8                          4839                   
00001BB8  4EB9 00001C32           4840                   JSR     CHECK_EA *by using jmp table
00001BBE                          4841                   
00001BBE                          4842             *      JSR     PRINT_COMMA
00001BBE                          4843                   
00001BBE                          4844                    * for the first Dn 
00001BBE  4EB9 00001DD2           4845                   JSR     CHECK_GET_Data_Register
00001BC4                          4846                   
00001BC4  4286                    4847                   CLR.L   D6
00001BC6                          4848                   
00001BC6  1C3C 0000               4849                   MOVE.B  #%000, D6 * for mode
00001BCA                          4850  
00001BCA  4EB9 00001C32           4851                   JSR     CHECK_EA *by using jmp table
00001BD0                          4852  
00001BD0  4EF8 005C               4853                   JMP     CHECK_PARSE_MEMORY
00001BD4                          4854  
00001BD4                          4855  CHECK_AND_CODE
00001BD4                          4856                   * OP_CODE message
00001BD4                          4857                   
00001BD4                          4858                     * check for dn and ea
00001BD4  4280                    4859                   CLR.L D0                *clear D0
00001BD6                          4860                   
00001BD6  4281                    4861                   CLR.L D1                *clear D1
00001BD8                          4862                   
00001BD8  3015                    4863                   MOVE.W  (A5),D0     *D0 is the binary value to decode
00001BDA                          4864                   
00001BDA                          4865                   * check the bit at 7
00001BDA  123C 0007               4866                   MOVE.B  #7,D1           *8 bits is the number of times to shift to the left to remove opcode & register #
00001BDE                          4867  
00001BDE  E368                    4868                   LSL.W   D1,D0           *Shift the bits 8 times -> D0 now removes the opcode & reg#
00001BE0                          4869                   
00001BE0  123C 000F               4870                   MOVE.B  #15,D1          *14 bits is the number of times to shift to hold the mode number
00001BE4                          4871  
00001BE4  E268                    4872                   LSR.W   D1,D0           *Shift the bits 14 times -> D0 now holds the mode number
00001BE6                          4873                   
00001BE6  B03C 0000               4874                   CMP.B   #0, D0
00001BEA                          4875  
00001BEA                          4876                *   BTST    #8, D0
00001BEA                          4877                   
00001BEA  6700 0024               4878                   BEQ     CHECK_AND_FIRST_EA
00001BEE                          4879                   
00001BEE                          4880                   * for the first Dn 
00001BEE  4EB9 00001DD2           4881                   JSR     CHECK_GET_Data_Register
00001BF4                          4882                   
00001BF4  4286                    4883                   CLR.L   D6
00001BF6                          4884                   
00001BF6  1C3C 0000               4885                   MOVE.B  #%000, D6 * for mode
00001BFA                          4886                   
00001BFA  4EB9 00001C32           4887                   JSR     CHECK_EA *by using jmp table
00001C00                          4888                   
00001C00                          4889           *        JSR     PRINT_COMMA
00001C00                          4890                   
00001C00  4EB9 00001DE4           4891                   JSR      CHECK_Set_Ea
00001C06                          4892                   
00001C06  4EB9 00001C32           4893                   JSR      CHECK_EA *by using jmp table
00001C0C                          4894                   
00001C0C  4EF8 005C               4895                   JMP      CHECK_PARSE_MEMORY
00001C10                          4896                   
00001C10                          4897  CHECK_AND_FIRST_EA
00001C10  4EB9 00001DE4           4898                   JSR     CHECK_Set_Ea
00001C16                          4899                   
00001C16  4EB9 00001C32           4900                   JSR     CHECK_EA *by using jmp table
00001C1C                          4901                   
00001C1C                          4902         *          JSR     PRINT_COMMA
00001C1C                          4903                   
00001C1C                          4904                    * for the first Dn 
00001C1C  4EB9 00001DD2           4905                   JSR     CHECK_GET_Data_Register
00001C22                          4906                   
00001C22  4286                    4907                   CLR.L   D6
00001C24                          4908                   
00001C24  1C3C 0000               4909                   MOVE.B  #%000, D6 * for mode
00001C28                          4910  
00001C28  4EB9 00001C32           4911                   JSR     CHECK_EA *by using jmp table
00001C2E                          4912                   
00001C2E  4EF8 005C               4913                   JMP     CHECK_PARSE_MEMORY
00001C32                          4914  
00001C32                          4915  
00001C32                          4916  
00001C32                          4917  
00001C32                          4918  
00001C32                          4919  
00001C32                          4920  
00001C32                          4921  
00001C32                          4922  
00001C32                          4923  
00001C32                          4924  
00001C32                          4925  
00001C32                          4926  
00001C32                          4927  
00001C32                          4928  -------------------- end include --------------------
00001C32                          4929          INCLUDE     'CHECK_EA.X68'
00001C32                          4930   *ORG     $400
00001C32                          4931  
00001C32                          4932  
00001C32                          4933  
00001C32                          4934  
00001C32                          4935  
00001C32                          4936                 *MOVE.B       #%00, D5         *SIZE
00001C32                          4937                
00001C32                          4938                 *MOVE.B       #%111,D6         *MODE
00001C32                          4939                 
00001C32                          4940                 *MOVE.B       #%100,D7         *REGISTER
00001C32                          4941                 
00001C32                          4942                 *MOVE.L       #$4000, A5
00001C32                          4943  
00001C32                          4944                 *MOVE.B       #$0040, (A5)  
00001C32                          4945  CHECK_EA 
00001C32                          4946                 
00001C32  41F9 00001C40           4947                 LEA     CHECK_jmp_table_ea,A0      *Index into the table
00001C38                          4948  
00001C38  CCFC 0006               4949                 MULU        #6,D6            *Form offset     
00001C3C                          4950  
00001C3C  4EF0 6000               4951                 JMP         0(A0,D6)         *Jump indirect with index
00001C40                          4952   
00001C40  4EF9 00001C70           4953  CHECK_jmp_table_ea   JMP         CHECK_code000
00001C46                          4954  
00001C46  4EF9 00001C74           4955                 JMP         CHECK_code001
00001C4C                          4956  
00001C4C  4EF9 00001C78           4957                 JMP         CHECK_code010
00001C52                          4958  
00001C52  4EF9 00001C7C           4959                 JMP         CHECK_code011
00001C58                          4960  
00001C58  4EF9 00001C80           4961                 JMP         CHECK_code100
00001C5E                          4962  
00001C5E  4EF9 00001C84           4963                 JMP         CHECK_code101
00001C64                          4964  
00001C64  4EF9 00001C88           4965                 JMP         CHECK_code110
00001C6A                          4966  
00001C6A  4EF9 00001C8C           4967                 JMP         CHECK_code111
00001C70                          4968          
00001C70                          4969  
00001C70                          4970   
00001C70                          4971  
00001C70                          4972  
00001C70                          4973   
00001C70                          4974  
00001C70                          4975   
00001C70                          4976  
00001C70  6000 001E               4977  CHECK_code000       BRA         CHECK_DATA_REGISTER
00001C74                          4978  
00001C74  6000 001E               4979  CHECK_code001       BRA         CHECK_ADDRESS_REGISTER
00001C78                          4980  
00001C78  6000 001E               4981  CHECK_code010       BRA         CHECK_INDIRECT_ADDRESS
00001C7C                          4982  
00001C7C  6000 001E               4983  CHECK_code011       BRA         CHECK_ADDRESS_PI    * post increment
00001C80                          4984  
00001C80  6000 001E               4985  CHECK_code100       BRA         CHECK_ADDRESS_PD    * pre decrement
00001C84                          4986  
00001C84  6000 001E               4987  CHECK_code101       BRA         CHECK_ADDRESS_W_DISPLACEMENT
00001C88                          4988  
00001C88  6000 001E               4989  CHECK_code110       BRA         CHECK_ADDRESS_W_INDEX
00001C8C                          4990  
00001C8C  6000 001E               4991  CHECK_code111       BRA         CHECK_GROUP_111
00001C90                          4992  
00001C90                          4993   
00001C90                          4994  CHECK_DATA_REGISTER
00001C90                          4995              
00001C90  6000 F864               4996              BRA DONE
00001C94                          4997              
00001C94                          4998  
00001C94                          4999  CHECK_ADDRESS_REGISTER
00001C94                          5000  
00001C94  6000 F860               5001              BRA DONE
00001C98                          5002              
00001C98                          5003  CHECK_INDIRECT_ADDRESS
00001C98                          5004              
00001C98  6000 F85C               5005              BRA DONE
00001C9C                          5006  
00001C9C                          5007  CHECK_ADDRESS_PI  
00001C9C  6000 F858               5008              BRA DONE  
00001CA0                          5009         
00001CA0                          5010  CHECK_ADDRESS_PD  
00001CA0  6000 F854               5011              BRA DONE
00001CA4                          5012              
00001CA4                          5013  CHECK_ADDRESS_W_DISPLACEMENT
00001CA4  6000 F90E               5014              BRA ERROR_HANDLE
00001CA8                          5015  
00001CA8                          5016  CHECK_ADDRESS_W_INDEX
00001CA8  6000 F90A               5017              BRA ERROR_HANDLE
00001CAC                          5018  
00001CAC                          5019  CHECK_GROUP_111
00001CAC                          5020  
00001CAC  41F9 00001CBA           5021                 LEA         CHECK_jmp_table_ea_111,A0    *Index into the table
00001CB2                          5022  
00001CB2  CEFC 0006               5023                 MULU        #6,D7       *Form offset     
00001CB6                          5024  
00001CB6  4EF0 7000               5025                 JMP         0(A0,D7)   *Jump indirect with index
00001CBA                          5026                 
00001CBA                          5027  CHECK_jmp_table_ea_111   
00001CBA  4EF9 00001CE0           5028                 JMP         CHECK_reg000
00001CC0                          5029  
00001CC0  4EF9 00001CE4           5030                 JMP         CHECK_reg001
00001CC6                          5031  
00001CC6  4EF9 00001CD8           5032                 JMP         CHECK_reg010
00001CCC                          5033  
00001CCC  4EF9 00001CDC           5034                 JMP         CHECK_reg011
00001CD2                          5035  
00001CD2  4EF9 00001CE8           5036                 JMP         CHECK_reg100
00001CD8                          5037          
00001CD8                          5038  
00001CD8  6000 0012               5039  CHECK_reg010       BRA         CHECK_PC_W_DISPLACEMENT
00001CDC                          5040  
00001CDC  6000 0012               5041  CHECK_reg011       BRA         CHECK_PC_W_INDEX
00001CE0                          5042  
00001CE0  6000 0012               5043  CHECK_reg000       BRA         CHECK_ABSOLUTE_SHORT
00001CE4                          5044  
00001CE4  6000 0012               5045  CHECK_reg001       BRA         CHECK_ABSOLUTE_LONG
00001CE8                          5046  
00001CE8  6000 0012               5047  CHECK_reg100       BRA         CHECK_IMMEDIATE
00001CEC                          5048  
00001CEC                          5049  
00001CEC                          5050  CHECK_PC_W_DISPLACEMENT
00001CEC  6000 F8C6               5051              BRA ERROR_HANDLE
00001CF0                          5052  
00001CF0                          5053  CHECK_PC_W_INDEX
00001CF0  6000 F8C2               5054              BRA ERROR_HANDLE
00001CF4                          5055  
00001CF4                          5056  CHECK_ABSOLUTE_SHORT
00001CF4  6000 F800               5057              BRA DONE  
00001CF8                          5058  
00001CF8                          5059  
00001CF8                          5060  CHECK_ABSOLUTE_LONG           
00001CF8  6000 F7FC               5061              BRA DONE  
00001CFC                          5062  
00001CFC                          5063  
00001CFC                          5064  CHECK_IMMEDIATE   
00001CFC  6000 F7F8               5065              BRA DONE
00001D00                          5066              
00001D00                          5067      
00001D00                          5068   * INCLUDE 'MESSAGE_Data.X68'
00001D00                          5069   * INCLUDE 'HEX_TO_ASCII_V1.X68'
00001D00                          5070       
00001D00                          5071          
00001D00                          5072  
00001D00                          5073  
00001D00                          5074  
00001D00                          5075  
00001D00                          5076  
00001D00                          5077  
00001D00                          5078  
00001D00                          5079  
00001D00                          5080  
00001D00                          5081                   
00001D00                          5082  
00001D00                          5083  -------------------- end include --------------------
00001D00                          5084          INCLUDE     'ADD_ADDA_CHECK.X68'
00001D00                          5085    
00001D00                          5086  CHECK_ADD_ADDA  *at this point we know the first 4 bits are 1101 -> ADD or ADDA -> compare the destination opmode
00001D00                          5087                   
00001D00  4EB9 00001DBA           5088                   JSR      CHECK_GET_SIZE_PURPLE
00001D06                          5089                                              
00001D06  BA3C 0003               5090                   CMP.B    #$3, D5        *if D0 holds 3, the opcode is ADDA
00001D0A                          5091                   
00001D0A  6700 0008               5092                   BEQ      CHECK_ADDA_CODE * checks %11
00001D0E                          5093                   
00001D0E  4EF9 00001D60           5094                   JMP      CHECK_ADD_CODE * checks %00, %01, %10
00001D14                          5095                   
00001D14                          5096  CHECK_ADDA_CODE 
00001D14                          5097                   * ADDA opcode message
00001D14                          5098                   
00001D14                          5099                   
00001D14                          5100                   
00001D14  4285                    5101                   CLR.L D5         * clear for the size since this is not for the size purple
00001D16                          5102                   
00001D16  4280                    5103                   CLR.L D0                *clear D0
00001D18                          5104                   
00001D18  4281                    5105                   CLR.L D1                *clear D1
00001D1A                          5106                   
00001D1A  3015                    5107                   MOVE.W  (A5),D0     *D0 is the binary value to decode
00001D1C                          5108                   
00001D1C  EF48                    5109                   LSL.W   #7, D0
00001D1E                          5110  
00001D1E  123C 000D               5111                   MOVE.B  #13,D1           *8 bits is the number of times to shift to the
00001D22                          5112  
00001D22  E268                    5113                   LSR.W   D1,D0           *Shift the bits 8 times -> D0 now removes the opcode & reg#
00001D24                          5114                   
00001D24  B03C 0003               5115                   CMP.B   #%011, D0  *Compare them for SIZE_W
00001D28                          5116                   
00001D28  6700 002A               5117                   BEQ     CHECK_PRINTOUT_SIZE_W
00001D2C                          5118                   
00001D2C  B03C 0007               5119                   CMP.B   #%111, D0
00001D30                          5120    
00001D30  6700 0028               5121                   BEQ     CHECK_PRINTOUT_SIZE_L
00001D34                          5122                   
00001D34  4EF8 15B4               5123                   JMP     ERROR_HANDLE    
00001D38                          5124                   
00001D38                          5125  CHECK_FINISH_PRINTING_SIZE
00001D38                          5126  
00001D38  4EB9 00001DE4           5127                   JSR     CHECK_Set_Ea
00001D3E                          5128                   
00001D3E                          5129           *        JSR     PRINT_EA *by using jmp table
00001D3E                          5130           
00001D3E  4EB8 1C32               5131                   JSR     CHECK_EA *by using jmp table
00001D42                          5132                   
00001D42                          5133           *       JSR     PRINT_COMMA
00001D42                          5134                   
00001D42                          5135                    * for the first Dn 
00001D42  4EB9 00001DD2           5136                   JSR     CHECK_GET_Data_Register
00001D48                          5137                   
00001D48  1C3C 0001               5138                   MOVE.B  #%001, D6 * for mode
00001D4C                          5139  
00001D4C                          5140           *        JSR     PRINT_EA *by using jmp table
00001D4C                          5141           
00001D4C  4EB8 1C32               5142                   JSR     CHECK_EA *by using jmp table
00001D50                          5143  
00001D50  4EF8 005C               5144                   JMP     CHECK_PARSE_MEMORY
00001D54                          5145                   
00001D54                          5146  CHECK_PRINTOUT_SIZE_W
00001D54                          5147                   
00001D54  3A3C 0001               5148                   MOVE    #%01, D5          
00001D58                          5149                   
00001D58                          5150                   
00001D58  60DE                    5151                   BRA     CHECK_FINISH_PRINTING_SIZE
00001D5A                          5152                   
00001D5A                          5153  CHECK_PRINTOUT_SIZE_L                           
00001D5A  3A3C 0002               5154                   MOVE    #%10, D5          
00001D5E                          5155                   
00001D5E                          5156                   
00001D5E  60D8                    5157                   BRA     CHECK_FINISH_PRINTING_SIZE
00001D60                          5158  
00001D60                          5159  CHECK_ADD_CODE
00001D60                          5160                   * ADD message
00001D60                          5161                   
00001D60  4EB8 0238               5162                   JSR     GET_SIZE_PURPLE
00001D64                          5163                   
00001D64                          5164                   * check for dn and ea
00001D64  4280                    5165                   CLR.L D0                *clear D0
00001D66                          5166                   
00001D66  4281                    5167                   CLR.L D1                *clear D1
00001D68                          5168                   
00001D68  3015                    5169                   MOVE.W  (A5),D0     *D0 is the binary value to decode
00001D6A                          5170                   
00001D6A                          5171                   * check the bit at 7
00001D6A  123C 0007               5172                   MOVE.B  #7,D1           *8 bits is the number of times to shift to the left to remove opcode & register #
00001D6E                          5173  
00001D6E  E368                    5174                   LSL.W   D1,D0           *Shift the bits 8 times -> D0 now removes the opcode & reg#
00001D70                          5175                   
00001D70  123C 000F               5176                   MOVE.B  #15,D1          *14 bits is the number of times to shift to hold the mode number
00001D74                          5177  
00001D74  E268                    5178                   LSR.W   D1,D0           *Shift the bits 14 times -> D0 now holds the mode number
00001D76                          5179                   
00001D76  B03C 0000               5180                   CMP.B   #0, D0
00001D7A                          5181                   
00001D7A                          5182                 *  BTST    #8, D0 * if the bit at 8 is 1, the ccr of z is set to 0
00001D7A                          5183                   
00001D7A  6700 0020               5184                   BEQ     CHECK_ADD_FIRST_EA
00001D7E                          5185                   
00001D7E                          5186                   * for the first Dn 
00001D7E  4EB9 00001DD2           5187                   JSR     CHECK_GET_Data_Register
00001D84                          5188                   
00001D84  4286                    5189                   CLR.L   D6
00001D86                          5190                   
00001D86  1C3C 0000               5191                   MOVE.B  #%000, D6 * for mode
00001D8A                          5192                   
00001D8A  4EB8 1C32               5193                   JSR     CHECK_EA *by using jmp table
00001D8E                          5194                   
00001D8E                          5195              *     JSR     PRINT_COMMA
00001D8E                          5196                   
00001D8E  4EB9 00001DE4           5197                   JSR     CHECK_Set_Ea
00001D94                          5198                   
00001D94  4EB8 1C32               5199                   JSR     CHECK_EA *by using jmp table
00001D98                          5200                   
00001D98  4EF8 005C               5201                   JMP     CHECK_PARSE_MEMORY
00001D9C                          5202                   
00001D9C                          5203  CHECK_ADD_FIRST_EA
00001D9C  4EB9 00001DE4           5204                   JSR     CHECK_Set_Ea
00001DA2                          5205                   
00001DA2  4EB8 1C32               5206                   JSR     CHECK_EA *by using jmp table
00001DA6                          5207                   
00001DA6                          5208               *    JSR     PRINT_COMMA
00001DA6                          5209                   
00001DA6                          5210                    * for the first Dn 
00001DA6  4EB9 00001DD2           5211                   JSR     CHECK_GET_Data_Register
00001DAC                          5212                   
00001DAC  4286                    5213                   CLR.L   D6
00001DAE                          5214                   
00001DAE  1C3C 0000               5215                   MOVE.B  #%000, D6 * for mode
00001DB2                          5216  
00001DB2  4EB8 1C32               5217                   JSR     CHECK_EA *by using jmp table
00001DB6                          5218                   
00001DB6  4EF8 005C               5219                   JMP     CHECK_PARSE_MEMORY
00001DBA                          5220                   
00001DBA                          5221  CHECK_GET_SIZE_PURPLE * get the op-code 
00001DBA                          5222  
00001DBA  4280                    5223                   CLR.L D0                *clear D0
00001DBC                          5224                   
00001DBC  4281                    5225                   CLR.L D1                *clear D1
00001DBE                          5226                   
00001DBE  3015                    5227                   MOVE.W  (A5),D0     *D0 is the binary value to decode
00001DC0                          5228  
00001DC0  123C 0008               5229                   MOVE.B  #8,D1           *8 bits is the number of times to shift to the left to remove opcode & register #
00001DC4                          5230  
00001DC4  E368                    5231                   LSL.W   D1,D0           *Shift the bits 8 times -> D0 now removes the opcode & reg#
00001DC6                          5232                   
00001DC6  123C 000E               5233                   MOVE.B  #14,D1          *14 bits is the number of times to shift to hold the mode number
00001DCA                          5234  
00001DCA  E268                    5235                   LSR.W   D1,D0           *Shift the bits 14 times -> D0 now holds the mode number
00001DCC                          5236                   
00001DCC  4285                    5237                   CLR.L   D5
00001DCE                          5238                   
00001DCE  1A00                    5239                   MOVE.B  D0, D5          *push the size to the Data register 5 for the future use
00001DD0                          5240                   
00001DD0  4E75                    5241                   RTS 
00001DD2                          5242  
00001DD2                          5243                   
00001DD2                          5244                   
00001DD2                          5245                   
00001DD2                          5246  CHECK_GET_Data_Register
00001DD2  4280                    5247                   CLR.L D0                *clear D0
00001DD4                          5248                   
00001DD4  4281                    5249                   CLR.L D1                *clear D1
00001DD6                          5250                   
00001DD6  3015                    5251                   MOVE.W  (A5),D0     *D0 is the binary value to decode
00001DD8                          5252  
00001DD8  E948                    5253                   LSL.W   #4,D0           *Shift the bits 4 times -> D0 now removes the opcode & reg#
00001DDA                          5254                   
00001DDA  123C 000D               5255                   MOVE.B  #13,D1          *14 bits is the number of times to shift to hold the mode number
00001DDE                          5256  
00001DDE  E268                    5257                   LSR.W   D1,D0           *Shift the bits 13 times -> D0 now holds the size number
00001DE0                          5258  
00001DE0  1E00                    5259                   MOVE.B  D0, D7          *put D0 to data register into D7 for future printing
00001DE2                          5260                   
00001DE2  4E75                    5261                   RTS
00001DE4                          5262                   
00001DE4                          5263  CHECK_Set_Ea
00001DE4                          5264  
00001DE4                          5265                   * set register
00001DE4  4280                    5266                   CLR.L D0                *clear D0
00001DE6                          5267                   
00001DE6  4281                    5268                   CLR.L D1                *clear D1
00001DE8                          5269                   
00001DE8  3015                    5270                   MOVE.W  (A5),D0     *D0 is the binary value to decode
00001DEA                          5271                 
00001DEA  123C 000D               5272                   MOVE.B  #13,D1           *8 bits is the number of times to shift to the left to remove opcode & register #
00001DEE                          5273  
00001DEE  E368                    5274                   LSL.W   D1,D0           *Shift the bits 8 times -> D0 now removes the opcode & reg#
00001DF0                          5275  
00001DF0  E268                    5276                   LSR.W   D1,D0           *Shift the bits 13 times -> D0 now holds the size number
00001DF2                          5277                   
00001DF2  4287                    5278                   CLR.L D7                *clear D7 
00001DF4                          5279  
00001DF4  1E00                    5280                   MOVE.B  D0, D7          *put D0 to data register into D7 for future printing
00001DF6                          5281                   
00001DF6                          5282                   * set mode
00001DF6  4280                    5283                   CLR.L D0                *clear D0
00001DF8                          5284                   
00001DF8  4281                    5285                   CLR.L D1                *clear D1
00001DFA                          5286                   
00001DFA  3015                    5287                   MOVE.W  (A5),D0     *D0 is the binary value to decode
00001DFC                          5288                 
00001DFC  123C 000A               5289                   MOVE.B  #10,D1           *8 bits is the number of times to shift to the left to remove opcode & register #
00001E00                          5290  
00001E00  E368                    5291                   LSL.W   D1,D0           *Shift the bits 8 times -> D0 now removes the opcode & reg#
00001E02                          5292  
00001E02  123C 000D               5293                   MOVE.B  #13,D1          *14 bits is the number of times to shift to hold the mode number
00001E06                          5294  
00001E06  E268                    5295                   LSR.W   D1,D0           *Shift the bits 13 times -> D0 now holds the size number
00001E08                          5296                   
00001E08  4286                    5297                   CLR.L D6                *clear D6
00001E0A                          5298  
00001E0A  1C00                    5299                   MOVE.B  D0, D6          *put D0 to data register into D7 for future printing
00001E0C                          5300                   
00001E0C  4E75                    5301                   RTS
00001E0E                          5302                   
00001E0E                          5303                  
00001E0E                          5304  
00001E0E                          5305  
00001E0E                          5306  
00001E0E                          5307  
00001E0E                          5308  
00001E0E                          5309  
00001E0E                          5310  
00001E0E                          5311  
00001E0E                          5312  
00001E0E                          5313  
00001E0E                          5314  
00001E0E                          5315  
00001E0E                          5316  
00001E0E                          5317  
00001E0E                          5318  
00001E0E                          5319  
00001E0E                          5320  
00001E0E                          5321  
00001E0E                          5322  
00001E0E                          5323  
00001E0E                          5324  
00001E0E                          5325  
00001E0E                          5326  
00001E0E                          5327  
00001E0E                          5328  
00001E0E                          5329  
00001E0E                          5330  
00001E0E                          5331  
00001E0E                          5332  
00001E0E                          5333  
00001E0E                          5334  
00001E0E                          5335  
00001E0E                          5336  
00001E0E                          5337  
00001E0E                          5338  
00001E0E                          5339  -------------------- end include --------------------
00001E0E                          5340          INCLUDE     'BCC_CHECK.X68'
00001E0E                          5341  
00001E0E                          5342  
00001E0E                          5343  CHECK_BCC           
00001E0E  4240                    5344                 CLR       D0              *Zero it
00001E10                          5345  
00001E10  3015                    5346                 MOVE.W      (A5),D0     *We'll play with it here
00001E12                          5347                 
00001E12  4241                    5348                 CLR       D1
00001E14                          5349  
00001E14                          5350  
00001E14                          5351                 
00001E14  123C 0004               5352                 MOVE.B      #4, D1
00001E18                          5353                 
00001E18  E368                    5354                 LSL.W       D1, D0
00001E1A                          5355  
00001E1A  123C 000C               5356                 MOVE.B      #12,D1       *Shift 12 bits to the right  
00001E1E                          5357  
00001E1E  E268                    5358                 LSR.W       D1,D0           *Move the bi
00001E20                          5359                 
00001E20  B03C 0004               5360                 CMP.B       #%0100, D0
00001E24                          5361                 
00001E24  6700 001A               5362                 BEQ         CHECK_CC
00001E28                          5363                 
00001E28  B03C 000E               5364                 CMP.B       #%1110, D0
00001E2C                          5365                 
00001E2C  6700 003A               5366                 BEQ         CHECK_GT
00001E30                          5367                 
00001E30  B03C 000F               5368                 CMP.B       #%1111, D0
00001E34                          5369                 
00001E34  6700 0036               5370                 BEQ         CHECK_LE
00001E38                          5371                 
00001E38                          5372  
00001E38                          5373                      
00001E38                          5374  
00001E38  6000 F77A               5375  CHECK_HI             BRA         ERROR_HANDLE * PRINT_BHI 
00001E3C                          5376  
00001E3C  6000 F776               5377  CHECK_LS             BRA         ERROR_HANDLE * PRINT_BLS  
00001E40                          5378  
00001E40  6000 F304               5379  CHECK_CC             BRA         PRINT_BCC
00001E44                          5380  
00001E44  6000 F76E               5381  CHECK_CS             BRA         ERROR_HANDLE * PRINT_BCS 
00001E48                          5382  
00001E48  6000 F76A               5383  CHECK_NE             BRA         ERROR_HANDLE * PRINT_BNE 
00001E4C                          5384  
00001E4C  6000 F766               5385  CHECK_EQ             BRA         ERROR_HANDLE  *PRINT_BEQ
00001E50                          5386  
00001E50  6000 F762               5387  CHECK_VC             BRA         ERROR_HANDLE  *PRINT_BVC
00001E54                          5388  
00001E54  6000 F75E               5389  CHECK_VS             BRA         ERROR_HANDLE  *PRINT_BVS
00001E58                          5390  
00001E58  6000 F75A               5391  CHECK_PL             BRA         ERROR_HANDLE  *PRINT_BPL
00001E5C                          5392  
00001E5C  6000 F756               5393  CHECK_MI             BRA         ERROR_HANDLE  *PRINT_BMI 
00001E60                          5394  
00001E60  6000 F752               5395  CHECK_GE             BRA         ERROR_HANDLE  *PRINT_BGE 
00001E64                          5396  
00001E64  6000 F74E               5397  CHECK_LT             BRA         ERROR_HANDLE  *PRINT_BLT
00001E68                          5398  
00001E68  6000 F37C               5399  CHECK_GT             BRA         PRINT_BGT      
00001E6C                          5400  
00001E6C  6000 F388               5401  CHECK_LE             BRA         PRINT_BLE 
00001E70                          5402  
00001E70                          5403  
00001E70                          5404                 
00001E70                          5405                 *BRA DISPLACEMENT
00001E70                          5406                 
00001E70                          5407                 
00001E70                          5408                 
00001E70                          5409  CHECK_DISPLACEMENT   
00001E70                          5410  
00001E70                          5411  
00001E70                          5412  
00001E70  4280                    5413                 CLR.L       D0              *Zero it
00001E72                          5414  
00001E72  3015                    5415                 MOVE.W      (A5),D0     *We'll play with it here
00001E74                          5416                 
00001E74  123C 0008               5417                 MOVE.B      #8, D1
00001E78                          5418                 
00001E78  E368                    5419                 LSL.W       D1, D0
00001E7A                          5420  
00001E7A  123C 0008               5421                 MOVE.B      #8,D1       *Shift 12 bits to the right  
00001E7E                          5422  
00001E7E  E268                    5423                 LSR.W       D1,D0           *Move the bits
00001E80                          5424                 
00001E80                          5425                 *chk the D0 for 8, 16, or 32 but displacement
00001E80                          5426                  
00001E80  B03C 0000               5427                 CMP.B  #$00, D0
00001E84                          5428  
00001E84  6700 F3CA               5429                 BEQ  a_16_BIT 
00001E88                          5430  
00001E88  B03C 00FF               5431                 CMP.B #$FF, D0   
00001E8C                          5432  
00001E8C  6700 F3D0               5433                 BEQ  a_32_BIT
00001E90                          5434                  
00001E90                          5435                  *else 
00001E90                          5436                  
00001E90  4285                    5437                 CLR.L D5
00001E92                          5438                 
00001E92  3A00                    5439                 MOVE.W D0, D5      
00001E94                          5440          
00001E94  4EB8 126C               5441                 JSR  HEX_TO_ASCII
00001E98                          5442                 
00001E98  4EF8 005C               5443                 JMP CHECK_PARSE_MEMORY
00001E9C                          5444                            
00001E9C                          5445  CHECK_a_16_BIT
00001E9C  4285                    5446          CLR.L  D5
00001E9E                          5447          
00001E9E                          5448          
00001E9E                          5449       *   JSR  HEX_TO_ASCII
00001E9E                          5450          
00001E9E  4EF8 005C               5451          JMP CHECK_PARSE_MEMORY
00001EA2                          5452  CHECK_a_32_BIT
00001EA2                          5453  
00001EA2  4285                    5454          CLR.L  D5
00001EA4                          5455          
00001EA4                          5456          
00001EA4                          5457        *  JSR  HEX_TO_ASCII
00001EA4                          5458          
00001EA4  4EF8 005C               5459          JMP CHECK_PARSE_MEMORY
00001EA8                          5460            
00001EA8                          5461  
00001EA8                          5462  
00001EA8                          5463  
00001EA8                          5464  
00001EA8                          5465  
00001EA8                          5466  
00001EA8                          5467  
00001EA8                          5468  
00001EA8                          5469  
00001EA8                          5470  
00001EA8                          5471  
00001EA8                          5472  
00001EA8                          5473  
00001EA8                          5474  
00001EA8                          5475  
00001EA8                          5476  
00001EA8                          5477  -------------------- end include --------------------
00001EA8                          5478          INCLUDE     'MOVEQ_CHECK.X68'
00001EA8                          5479  
00001EA8                          5480  CHECK_MOVEQ 
00001EA8                          5481  
00001EA8                          5482                   * ADD message
00001EA8                          5483                   
00001EA8                          5484                   * print out size L
00001EA8                          5485                   
00001EA8                          5486                   * print out immediate Data
00001EA8                          5487                   
00001EA8                          5488              
00001EA8                          5489                  
00001EA8  4280                    5490                  CLR.L       D0              *Zero it
00001EAA                          5491  
00001EAA  3015                    5492                  MOVE.W      (A5),D0     *We'll play with it here
00001EAC                          5493                 
00001EAC  123C 0008               5494                  MOVE.B      #8, D1
00001EB0                          5495                 
00001EB0  E368                    5496                  LSL.W       D1, D0
00001EB2                          5497  
00001EB2  123C 0008               5498                  MOVE.B      #8,D1       *Shift 12 bits to the right  
00001EB6                          5499  
00001EB6  E268                    5500                  LSR.W       D1,D0           *Move the bits -> D0 holds DATA
00001EB8                          5501                      
00001EB8  4285                    5502                  CLR.L D5
00001EBA                          5503                 
00001EBA  3A00                    5504                  MOVE.W D0, D5      
00001EBC                          5505          
00001EBC  4EB8 126C               5506                  JSR         HEX_TO_ASCII
00001EC0                          5507                  
Line 5508 ERROR: Undefined symbol
00001EC0  43F9 004DBB8E           5508                  LEA      COMMA,    A1
00001EC6  103C 000E               5509                  MOVE.B   #14,            D0
00001ECA  4E4F                    5510                  TRAP #15
00001ECC                          5511                   
00001ECC                          5512                  * for the first Dn 
00001ECC  4286                    5513                  CLR.L D6
00001ECE                          5514                  
00001ECE  4EB8 1DD2               5515                  JSR     CHECK_GET_Data_Register
00001ED2                          5516                  
00001ED2  1C3C 0000               5517                  MOVE.B  #%000, D6 * for mode
00001ED6                          5518                   
00001ED6  4EB8 1C32               5519                  JSR     CHECK_EA *by using jmp table
00001EDA                          5520                   
00001EDA  6000 E180               5521                  BRA CHECK_PARSE_MEMORY
00001EDE                          5522          
00001EDE                          5523  
00001EDE                          5524  
00001EDE                          5525  
00001EDE                          5526  
00001EDE                          5527  
00001EDE                          5528  
00001EDE                          5529  
00001EDE                          5530  
00001EDE                          5531  
00001EDE                          5532  
00001EDE                          5533  
00001EDE                          5534  
00001EDE                          5535  
00001EDE                          5536  
00001EDE                          5537  -------------------- end include --------------------
00001EDE                          5538          INCLUDE     'ADDI_CHECK.X68'
00001EDE                          5539    
00001EDE                          5540  CHECK_ADDI           * first check the first 4 bits after the op-code
00001EDE  4280                    5541                 CLR.L       D0
00001EE0                          5542  
00001EE0  4281                    5543                 CLR.L       D1
00001EE2                          5544                 
00001EE2  3015                    5545                 MOVE.W      (A5),D0
00001EE4                          5546                 
00001EE4  123C 0008               5547                 MOVE.B      #8, D1 * for shifting to the right by 8 bits
00001EE8                          5548                 
00001EE8  E268                    5549                 LSR.W       D1, D0 
00001EEA                          5550                 
00001EEA  B07C 0006               5551                 CMP.W       #6, D0 * checking the first 4 bits 
00001EEE                          5552                 
00001EEE  6600 F6C4               5553                 BNE         ERROR_HANDLE * go to error 
00001EF2                          5554                 
00001EF2                          5555                 * print the op-code 
00001EF2  4280                    5556                 CLR.L       D0
00001EF4                          5557  
00001EF4  4281                    5558                 CLR.L       D1
00001EF6                          5559                 
00001EF6                          5560                                
00001EF6                          5561                 * print the size
00001EF6  4280                    5562                 CLR.L       D0
00001EF8                          5563  
00001EF8  4281                    5564                 CLR.L       D1
00001EFA                          5565                 
00001EFA  3015                    5566                 MOVE.W      (A5),D0
00001EFC                          5567                
00001EFC  E148                    5568                 LSL.W       #8, D0
00001EFE                          5569  
00001EFE  123C 000E               5570                 MOVE.B      #14, D1 * for shifting to the right by 8 bits
00001F02                          5571                 
00001F02  E268                    5572                 LSR.W       D1, D0
00001F04                          5573                 
00001F04                          5574                 * D1 holds the size
00001F04                          5575    *             CLR.L       D1
00001F04                          5576                 
00001F04                          5577    *             MOVE.B      D0, D1
00001F04                          5578                   
00001F04  B03C 0000               5579                 CMP.B       #%00, D0
00001F08                          5580                 
00001F08  6700 0010               5581                 BEQ         CHECK_ADDI_B_SIZE
00001F0C                          5582                 
00001F0C  B03C 0001               5583                 CMP.B       #%01, D0
00001F10                          5584                 
00001F10  6700 0010               5585                 BEQ         CHECK_ADDI_W_SIZE
00001F14                          5586                 
00001F14                          5587                 *print size L
00001F14                          5588                 
00001F14                          5589                * print out pound sign and hex sign
00001F14                          5590                 
00001F14  4285                    5591                 CLR.L  D5
00001F16                          5592          
00001F16                          5593          
00001F16                          5594                 
00001F16  6000 0012               5595                 BRA         CHECK_ADDI_EA   
00001F1A                          5596                      
00001F1A                          5597  CHECK_ADDI_B_SIZE
00001F1A                          5598                 
00001F1A  4280                    5599                 CLR.L D0
00001F1C                          5600  
00001F1C                          5601                 
00001F1C  1A00                    5602                 MOVE.B D0, D5
00001F1E                          5603     
00001F1E                          5604            *     JSR  HEX_TO_ASCII
00001F1E                          5605                 
00001F1E  6000 000A               5606                 BRA         CHECK_ADDI_EA 
00001F22                          5607                  
00001F22                          5608  
00001F22                          5609  CHECK_ADDI_W_SIZE
00001F22                          5610  
00001F22  4285                    5611                 CLR.L  D5
00001F24                          5612          
00001F24                          5613          
00001F24                          5614          
00001F24  4EF9 00001F2A           5615                 JMP  CHECK_ADDI_EA
00001F2A                          5616  
00001F2A                          5617  
00001F2A                          5618  CHECK_ADDI_EA      
00001F2A                          5619            *      JSR     PRINT_COMMA
00001F2A                          5620                  
00001F2A  4280                    5621                  CLR.L   D0
00001F2C                          5622                  
00001F2C  4281                    5623                  CLR.L   D1
00001F2E                          5624                  
00001F2E                          5625                  * set register
00001F2E                          5626                   
00001F2E  3015                    5627                   MOVE.W  (A5),D0     *D0 is the binary value to decode
00001F30                          5628                 
00001F30  123C 000D               5629                   MOVE.B  #13,D1           *8 bits is the number of times to shift to the left to remove opcode & register #
00001F34                          5630  
00001F34  E368                    5631                   LSL.W   D1,D0           *Shift the bits 8 times -> D0 now removes the opcode & reg#
00001F36                          5632  
00001F36  123C 000D               5633                   MOVE.B  #13,D1          *14 bits is the number of times to shift to hold the mode number
00001F3A                          5634  
00001F3A  E268                    5635                   LSR.W   D1,D0           *Shift the bits 13 times -> D0 now holds the size number
00001F3C                          5636  
00001F3C  1E00                    5637                   MOVE.B  D0, D7          *put D0 to data register into D7 for future printing
00001F3E                          5638                   
00001F3E                          5639                   * set mode
00001F3E  4280                    5640                   CLR.L D0                *clear D0
00001F40                          5641                   
00001F40  4281                    5642                   CLR.L D1                *clear D1
00001F42                          5643                   
00001F42  3015                    5644                   MOVE.W  (A5),D0     *D0 is the binary value to decode
00001F44                          5645                 
00001F44  123C 000A               5646                   MOVE.B  #10,D1           *8 bits is the number of times to shift to the left to remove opcode & register #
00001F48                          5647  
00001F48  E368                    5648                   LSL.W   D1,D0           *Shift the bits 8 times -> D0 now removes the opcode & reg#
00001F4A                          5649  
00001F4A  123C 000D               5650                   MOVE.B  #13,D1          *14 bits is the number of times to shift to hold the mode number
00001F4E                          5651  
00001F4E  E268                    5652                   LSR.W   D1,D0           *Shift the bits 13 times -> D0 now holds the size number
00001F50                          5653                   
00001F50  4286                    5654                   CLR.L   D6
00001F52                          5655  
00001F52  1C00                    5656                   MOVE.B  D0, D6          *put D0 to data register into D7 for future printing
00001F54                          5657  
00001F54                          5658   
00001F54                          5659                 * JSR     Set_Ea
00001F54                          5660                   
00001F54  4EB8 1C32               5661                  JSR     CHECK_EA *by using jmp table
00001F58                          5662                  
00001F58  4EF8 005C               5663                  JMP     CHECK_PARSE_MEMORY
00001F5C                          5664                  
00001F5C                          5665                  
00001F5C                          5666                   
00001F5C                          5667                   
00001F5C                          5668  
00001F5C                          5669  
00001F5C                          5670                 
00001F5C                          5671  
00001F5C                          5672  
00001F5C                          5673  
00001F5C                          5674  
00001F5C                          5675  
00001F5C                          5676  
00001F5C                          5677  
00001F5C                          5678  
00001F5C                          5679  
00001F5C                          5680  
00001F5C                          5681  
00001F5C                          5682  
00001F5C                          5683  
00001F5C                          5684  
00001F5C                          5685  
00001F5C                          5686  
00001F5C                          5687  
00001F5C                          5688  
00001F5C                          5689  
00001F5C                          5690  
00001F5C                          5691  
00001F5C                          5692  
00001F5C                          5693  
00001F5C                          5694  
00001F5C                          5695  
00001F5C                          5696  
00001F5C                          5697  
00001F5C                          5698  
00001F5C                          5699  
00001F5C                          5700  
00001F5C                          5701  
00001F5C                          5702  
00001F5C                          5703  
00001F5C                          5704  -------------------- end include --------------------
00001F5C                          5705          
00001F5C                          5706                      
00001F5C                          5707              
00001F5C                          5708  
00001F5C                          5709  
00001F5C                          5710  
00001F5C                          5711  
00001F5C                          5712  
00001F5C                          5713  
00001F5C                          5714  
00001F5C                          5715  
00001F5C                          5716  
00001F5C                          5717  
00001F5C                          5718  
00001F5C                          5719  
00001F5C                          5720  
00001F5C                          5721  
00001F5C                          5722  
00001F5C                          5723  
00001F5C                          5724  
00001F5C                          5725  
00001F5C                          5726  
00001F5C                          5727  
00001F5C                          5728  
00001F5C                          5729  
00001F5C                          5730  
00001F5C                          5731  
00001F5C                          5732  
00001F5C                          5733  
00001F5C                          5734  
00001F5C                          5735  
00001F5C                          5736  
00001F5C                          5737  
00001F5C                          5738  
00001F5C                          5739  
00001F5C                          5740  
00001F5C                          5741  
00001F5C                          5742  
00001F5C                          5743  
00001F5C                          5744  
00001F5C                          5745  
00001F5C                          5746  
00001F5C                          5747  
00001F5C                          5748  
00001F5C                          5749  -------------------- end include --------------------
00001F5C                          5750                  
00001F5C  4EF8 0014               5751                  JMP      PARSE_MEMORY
00001F60                          5752                  
00001F60                          5753  PRESS_ENTER_CONTINUE
Line 5754 ERROR: Undefined symbol
00001F60  267C 004DBB8E           5754                   MOVEA.L  #outputCountCurr, A3  *reset to 0
Line 5755 ERROR: Undefined symbol
00001F66  43F9 004DBB8E           5755                   LEA ENTER, A1
00001F6C  103C 000E               5756                   MOVE.B #14, D0
00001F70  4E4F                    5757                   TRAP #15
00001F72                          5758                   
00001F72                          5759  * get ascill for entering key
00001F72  103C 0005               5760                   MOVE.B #5, D0
00001F76  4E4F                    5761                   TRAP #15
00001F78                          5762                   
00001F78  B23C 000D               5763                   CMP.B #$D, D1
00001F7C                          5764  
00001F7C  103C 000B               5765                   MOVE.B #11, D0   *clear display
00001F80  323C FF00               5766                   MOVE.W #$FF00, D1
00001F84  4E4F                    5767                   TRAP #15
00001F86                          5768  
Line 5769 ERROR: Undefined symbol
00001F86  4EF9 004DBB8E           5769                   JMP BAD_OPCODES
00001F8C                          5770                  
00001F8C                          5771  ASK_TO_CONTINUE
Line 5772 ERROR: Undefined symbol
00001F8C  43F9 004DBB8E           5772      LEA         ASK_TO_CONTINUE_M, A1
00001F92                          5773      
00001F92  103C 000E               5774      MOVE.B      #14, D0
00001F96                          5775  
00001F96  4E4F                    5776      TRAP #15
00001F98                          5777      
00001F98  3278 0100               5778      MOVEA.W     $100, A1
00001F9C                          5779      
00001F9C  103C 0002               5780      MOVE.B      #2, D0
00001FA0                          5781  
00001FA0  4E4F                    5782      TRAP #15
00001FA2                          5783  
00001FA2                          5784      * VALIDATE THE INPUT
00001FA2                          5785  
00001FA2  4240                    5786      CLR         D0
00001FA4                          5787  
00001FA4  1011                    5788      MOVE.B      (A1), D0  
00001FA6                          5789  
00001FA6  B03C 0059               5790      CMP.B       #$59, D0
00001FAA                          5791  
00001FAA  6700 001C               5792      BEQ         RESTART
00001FAE                          5793  
00001FAE  B03C 0079               5794      CMP.B       #$79, D0
00001FB2                          5795  
00001FB2  6700 0014               5796      BEQ         RESTART
00001FB6                          5797  
00001FB6  B03C 004E               5798      CMP.B       #$4E, D0
00001FBA                          5799  
00001FBA  6700 0012               5800      BEQ         STOP
00001FBE                          5801  
00001FBE  B03C 006E               5802      CMP.B       #$6E, D0
00001FC2                          5803  
00001FC2  6700 000A               5804      BEQ         STOP
00001FC6                          5805  
00001FC6  60C4                    5806      BRA         ASK_TO_CONTINUE   
00001FC8                          5807      
00001FC8                          5808  RESTART
00001FC8  4284                    5809      CLR.L       D4
00001FCA                          5810      
Line 5811 ERROR: Undefined symbol
00001FCA  6000 9BC2               5811      BRA         START_OF_PROGRAM   
00001FCE                          5812  
00001FCE                          5813                 
00001FCE                          5814  STOP
00001FCE                          5815  
Line 5816 ERROR: Undefined symbol
00001FCE  43F9 004DBB8E           5816      LEA         TERMINATED, A1
00001FD4                          5817      
00001FD4  103C 000E               5818      MOVE.B      #14, D0
00001FD8                          5819      
00001FD8  4E4F                    5820      TRAP #15
00001FDA                          5821  
00001FDA                          5822  
00001FDA                          5823  
00001FDA                          5824  
00001FDA                          5825  
00001FDA                          5826  
00001FDA                          5827  
00001FDA                          5828  
00001FDA                          5829  
00001FDA                          5830  
00001FDA                          5831  
00001FDA                          5832  
00001FDA                          5833  
00001FDA                          5834  
00001FDA                          5835  
00001FDA                          5836  
00001FDA                          5837  
00001FDA                          5838  
00001FDA                          5839  
00001FDA                          5840  
00001FDA                          5841  
00001FDA                          5842  
00001FDA                          5843  
00001FDA                          5844  
00001FDA                          5845  
00001FDA                          5846  
00001FDA                          5847  
00001FDA                          5848  
00001FDA                          5849  
00001FDA                          5850  
00001FDA                          5851  
00001FDA                          5852  
00001FDA                          5853  
00001FDA                          5854  
00001FDA                          5855  
00001FDA                          5856  
00001FDA                          5857  
00001FDA                          5858  
00001FDA                          5859  
00001FDA                          5860  
00001FDA                          5861  
00001FDA                          5862  
Line 5863 WARNING: END directive missing, starting address not set

130 errors detected
1 warning generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ABSOLUTE_LONG       148C
ABSOLUTE_SHORT      146E
ADDA_CODE           148
ADDI                2E6
ADDI_B_SIZE         356
ADDI_EA             3B6
ADDI_W_SIZE         386
ADDQ                3EE
ADDQB               41C
ADDQL               448
ADDQW               432
ADDRESS_PD          13F4
ADDRESS_PI          13CA
ADDRESS_REGISTER    1384
ADDRESS_W_DISPLACEMENT  141E
ADDRESS_W_INDEX     1422
ADD_ADDA            134
ADD_CODE            1BC
ADD_FIRST_EA        210
AND_CODE            816
AND_FIRST_EA        862
ASD                 E72
ASD_MEMORY          ECC
ASK_TO_CONTINUE     1F8C
ASL                 E88
ASR                 EAA
A_16_BIT            1250
A_32_BIT            125E
BCC                 10C4
BIT0                BD4
BIT1                BE4
BIT10               C74
BIT11               C84
BIT12               C94
BIT13               CA4
BIT14               CB4
BIT15               CC4
BIT2                BF4
BIT3                C04
BIT4                C14
BIT5                C24
BIT6                C34
BIT7                C44
BIT8                C54
BIT9                C64
CATCH_BAD_OPCODES   26
CC                  10F6
CHECK               B26
CHECK_ABSOLUTE_LONG  1CF8
CHECK_ABSOLUTE_SHORT  1CF4
CHECK_ADDA_CODE     1D14
CHECK_ADDI          1EDE
CHECK_ADDI_B_SIZE   1F1A
CHECK_ADDI_EA       1F2A
CHECK_ADDI_W_SIZE   1F22
CHECK_ADDQ          1978
CHECK_ADDQB         19A2
CHECK_ADDQL         19B6
CHECK_ADDQW         19AC
CHECK_ADDRESS_PD    1CA0
CHECK_ADDRESS_PI    1C9C
CHECK_ADDRESS_REGISTER  1C94
CHECK_ADDRESS_W_DISPLACEMENT  1CA4
CHECK_ADDRESS_W_INDEX  1CA8
CHECK_ADD_ADDA      1D00
CHECK_ADD_CODE      1D60
CHECK_ADD_FIRST_EA  1D9C
CHECK_AND_CODE      1BD4
CHECK_AND_FIRST_EA  1C10
CHECK_ASD           1716
CHECK_ASD_MEMORY    1758
CHECK_ASL           172C
CHECK_ASR           1742
CHECK_A_16_BIT      1E9C
CHECK_A_32_BIT      1EA2
CHECK_BCC           1E0E
CHECK_CC            1E40
CHECK_CLR_OPCODE    190A
CHECK_CMP           1B74
CHECK_CODE000       1C70
CHECK_CODE0000      1572
CHECK_CODE0001      1576
CHECK_CODE001       1C74
CHECK_CODE0010      157A
CHECK_CODE0011      157E
CHECK_CODE010       1C78
CHECK_CODE0100      1582
CHECK_CODE0101      1586
CHECK_CODE011       1C7C
CHECK_CODE0110      158A
CHECK_CODE0111      1590
CHECK_CODE100       1C80
CHECK_CODE1000      1594
CHECK_CODE1001      1598
CHECK_CODE101       1C84
CHECK_CODE1010      159C
CHECK_CODE1011      15A0
CHECK_CODE110       1C88
CHECK_CODE1100      15A4
CHECK_CODE1101      15A8
CHECK_CODE111       1C8C
CHECK_CODE1110      15AC
CHECK_CODE1111      15B0
CHECK_COUNT         1788
CHECK_CS            1E44
CHECK_DATA_REGISTER  1C90
CHECK_DISPLACEMENT  1E70
CHECK_DIVU_CODE     1AEC
CHECK_DIVU_OR       1AD8
CHECK_EA            1C32
CHECK_EQ            1E4C
CHECK_FINISH_PRINTING_SIZE  1D38
CHECK_GE            1E60
CHECK_GET_DATA_REGISTER  1DD2
CHECK_GET_SIZE_PURPLE  1DBA
CHECK_GROUP_0100_CODE  1A04
CHECK_GROUP_111     1CAC
CHECK_GT            1E68
CHECK_HI            1E38
CHECK_IMMEDIATE     1CFC
CHECK_INDIRECT_ADDRESS  1C98
CHECK_JMP_TABLE     1512
CHECK_JMP_TABLE_EA  1C40
CHECK_JMP_TABLE_EA_111  1CBA
CHECK_JSR_OPCODE    18E0
CHECK_LE            1E6C
CHECK_LEA_OPCODE    1896
CHECK_LS            1E3C
CHECK_LSD           166E
CHECK_LSD_MEMORY    16BC
CHECK_LSL           1690
CHECK_LSR           16A6
CHECK_LT            1E64
CHECK_MEMORY_SHIFTS  163E
CHECK_MEMORY_SHIFTS_EA  17D6
CHECK_MI            1E5C
CHECK_MOVEAL        1846
CHECK_MOVEAW        183E
CHECK_MOVEB         17FA
CHECK_MOVEL         1820
CHECK_MOVEQ         1EA8
CHECK_MOVEW         1802
CHECK_MOVE_EA       184E
CHECK_MULS_AND      1B9A
CHECK_MULS_CODE     1BAE
CHECK_NE            1E48
CHECK_NOP_OPCODE    18D8
CHECK_OR_CODE       1B16
CHECK_OR_FIRST_EA   1B52
CHECK_PARSE_MEMORY  5C
CHECK_PC_W_DISPLACEMENT  1CEC
CHECK_PC_W_INDEX    1CF0
CHECK_PL            1E58
CHECK_PRINTADDQ     19C0
CHECK_PRINTOUT_SIZE_L  1D5A
CHECK_PRINTOUT_SIZE_W  1D54
CHECK_PRINT_SIZE    193A
CHECK_REG000        1CE0
CHECK_REG001        1CE4
CHECK_REG010        1CD8
CHECK_REG011        1CDC
CHECK_REG100        1CE8
CHECK_REGISTER      17AA
CHECK_REGISTER_SHIFTS_EA  1762
CHECK_ROD           16C6
CHECK_ROD_MEMORY    170C
CHECK_ROL           16E0
CHECK_ROR           16F6
CHECK_RTS_OPCODE    18DC
CHECK_SECOND        B38
CHECK_SET_EA        1DE4
CHECK_SHIFTS        15FC
CHECK_SIZE_B        196C
CHECK_SIZE_L        1974
CHECK_SIZE_W        1970
CHECK_SUB           1A74
CHECK_SUB_FIRST_EA  1AB6
CHECK_VC            1E50
CHECK_VS            1E54
CLR_OPCODE          620
CMP                 4C0
CODE000             1348
CODE0000            F4
CODE0001            F8
CODE001             134C
CODE0010            FC
CODE0011            100
CODE010             1350
CODE0100            104
CODE0101            108
CODE011             1354
CODE0110            10C
CODE0111            110
CODE100             1358
CODE1000            114
CODE1001            118
CODE101             135C
CODE1010            11C
CODE1011            120
CODE110             1360
CODE1100            124
CODE1101            128
CODE111             1364
CODE1110            12C
CODE1111            130
CONTINUE_PARSE      54
CS                  10FA
DATA_REGISTER       1368
DISPLACEMENT        1202
DIVU_CODE           6CC
DIVU_OR             6BA
DONE                14F6
DONE_MOVEM_LOOP     CD4
DONE_PRINTING       268
DR_FIELD            8BC
EQ                  1102
ERROR_HANDLE        15B4
ERROR_HANDLING      14F8
FINISH_PRINTING_SIZE  172
GE                  1116
GET_DATA_REGISTER   2AA
GET_SIZE_PURPLE     238
GROUP_0100_CODE     770
GROUP_111           1426
GT                  111E
HEX_TO_ASCII        126C
HI                  10EE
IMMEDIATE           14AA
IMMEDIATE_B         14D2
IMMEDIATE_L         14EA
IMMEDIATE_W         14DE
INDIRECT_ADDRESS    13A0
IS_USED             B4C
IS_USED_FIRST       B42
JMP_TABLE           94
JMP_TABLE_EA        1318
JMP_TABLE_EA_111    1434
JMP_TABLE_MOVEM     B74
JSR_OPCODE          5E2
LE                  1122
LEA_OPCODE          568
LETTER_1            128E
LETTER_1_ZERO       12D4
LOOP                1278
LOOP_MOVEM          B1E
LOOP_MOVEM_SECOND   B30
LOOP_ZERO           12BE
LS                  10F2
LSD                 DA2
LSD_MEMORY          E00
LSL                 DBC
LSR                 DDE
LT                  111A
MEMORY_REGISTER     928
MEMORY_SHIFTS       D76
MI                  1112
MOVEAL              1052
MOVEAW              1034
MOVEB               FAE
MOVEL               1000
MOVEM_OPCODE        884
MOVEQ               CD6
MOVEW               FCC
MULS_AND            7D2
MULS_CODE           7E4
NE                  10FE
NEXT_INSTRUCTION    5C
NOP_OPCODE          5C2
NUMBER_1            1298
NUMBER_1_ZERO       12DE
OPPOSITE_BIT0       A1E
OPPOSITE_BIT1       A2E
OPPOSITE_BIT10      ABE
OPPOSITE_BIT11      ACE
OPPOSITE_BIT12      ADE
OPPOSITE_BIT13      AEE
OPPOSITE_BIT14      AFE
OPPOSITE_BIT15      B0E
OPPOSITE_BIT2       A3E
OPPOSITE_BIT3       A4E
OPPOSITE_BIT4       A5E
OPPOSITE_BIT5       A6E
OPPOSITE_BIT6       A7E
OPPOSITE_BIT7       A8E
OPPOSITE_BIT8       A9E
OPPOSITE_BIT9       AAE
OPPOSITE_CHECK      970
OPPOSITE_CHECK_SECOND  982
OPPOSITE_IS_USED    996
OPPOSITE_IS_USED_FIRST  98C
OPPOSITE_JMP_TABLE_MOVEM  9BE
OPPOSITE_LOOP       948
OPPOSITE_LOOP_MOVEM  968
OPPOSITE_LOOP_MOVEM_SECOND  97A
OPPOSITE_PRINT_REGISTER_MOVEM  9AC
OR_CODE             702
OR_FIRST_EA         74E
PARSE_MEMORY        14
PARSE_MEMORY_FIRST  40
PC_W_DISPLACEMENT   1466
PC_W_INDEX          146A
PL                  110E
PRESS_ENTER_CONTINUE  1F60
PRINTADDQ           45E
PRINTOUT_COUNT      F04
PRINTOUT_MEMORY_SHIFTS_EA  F7E
PRINTOUT_MOVE_EA    1070
PRINTOUT_NIBBLE     12A2
PRINTOUT_NIBBLE_ZERO  12E8
PRINTOUT_REGISTER   F46
PRINTOUT_REGISTER_SHIFTS_EA  ED6
PRINTOUT_SIZE_L     1AA
PRINTOUT_SIZE_PURPLE  250
PRINTOUT_SIZE_W     198
PRINT_ADDRESS       906
PRINT_B             26A
PRINT_BCC           1146
PRINT_BCS           1156
PRINT_BEQ           1176
PRINT_BGE           11C6
PRINT_BGT           11E6
PRINT_BHI           1126
PRINT_BLE           11F6
PRINT_BLS           1136
PRINT_BLT           11D6
PRINT_BMI           11B6
PRINT_BNE           1166
PRINT_BPL           11A6
PRINT_BVC           1186
PRINT_BVS           1196
PRINT_COMMA         29A
PRINT_EA            130A
PRINT_L             28A
PRINT_REGISTER_MOVEM  B62
PRINT_SIZE          664
PRINT_SIZE_L_MOVEM  8B0
PRINT_W             27A
PRINT_ZERO          12FC
REG000              145A
REG001              145E
REG010              1452
REG011              1456
REG100              1462
REGITSET_MEMORY     8CE
RESTART             1FC8
ROD                 E0A
ROD_MEMORY          E68
ROL                 E24
ROR                 E46
RTS_OPCODE          5D2
SET_EA              2BC
SHIFTS              D3C
SIZE_B              69C
SIZE_L              6B0
SIZE_W              6A6
STOP                1FCE
SUB                 4F6
SUB_FIRST_EA        546
VC                  1106
VS                  110A
